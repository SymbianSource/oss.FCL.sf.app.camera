/*
* Copyright (c)  Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for the Camera Application*
*/





#include "CamSettings.hrh"
#include "CamProductSpecificSettings.hrh"
#include <CommonDialogs.hrh> // CommonDialogs Enumerations
#include <CommonDialogs.rh>  // CommonDialogs Resource structures
#include <bldvariant.hrh>
#include <avkon.loc>         // text_softkey_back


#define KSettingQualitySliderOffsety        20
#define KSettingQualitySliderRectTLx        68
#define KSettingQualitySliderRectTLy        25
#define KSettingQualitySliderRectWidth      244
#define KSettingQualitySliderRectHeight     150

#define KSettingQualitySliderInsideFontOffsetx     8
#define KSettingQualitySliderInsideRectBorderWidth     4
#define KSettingQualitySliderInsideFontRightLimit     (KScreenWidthCC - (KSettingQualitySliderRectTLx + KSettingQualitySliderRectWidth - KSettingQualitySliderInsideFontOffsetx))
#define KSettingQualitySliderInsideTopRectHeight     95

#define KCamLocationAdjustBoxSizes   35//20+15

#define KCamLocationSummaryRectLeftX   (178 - KCamLocationAdjustBoxSizes)
#define KCamLocationSummaryRectTop   (36 - 30)
#define KCamLocationSummaryRectWidth   (141 - 5 + KCamLocationAdjustBoxSizes)
#define KCamLocationSummaryRectHeight   187-10

#define KCamLocationSummaryInnerRectLeftX   (181 - KCamLocationAdjustBoxSizes)
#define KCamLocationSummaryInnerRectTop   (38 - 30)
#define KCamLocationSummaryInnerRectWidth   (137 - 5 + KCamLocationAdjustBoxSizes)
#define KCamLocationSummaryInnerRectHeight   183-10

#define KCamLocationSummaryIconLeftX   (190 - KCamLocationAdjustBoxSizes)
#define KCamLocationSummaryIconTop   (47 - 30)
#define KCamLocationSummaryIconWidth   0
#define KCamLocationSummaryIconHeight   30

#define KCamLocationSummaryDescrFontColor   215//213
#define KCamLocationSummaryDescrLeftX   (192 - KCamLocationAdjustBoxSizes)//=172-15
#define KCamLocationSummaryDescrRightX   12//27//8
#define KCamLocationSummaryDescrWidth   (116 + KCamLocationAdjustBoxSizes)//=151//(125 + KCamLocationAdjustBoxSizes)//121

#define KCamLocationSummaryTitleBaseline1   34//74-20-20//(94 - 45)=49=74-20
#define KCamLocationSummaryTitleBaseline2   48//88-20-20//(109 - 45)=64=88-24
#define KCamLocationSummaryTitleBaseline3   62//102-20-20//(124 - 45)=79=102-23
#define KCamLocationSummaryTitleBaseline4   76//116-20-20//(139 - 45)=94=116-22
#define KCamLocationSummaryTitleBaseline5   90//130-20-20//(154 - 45)
#define KCamLocationSummaryTitleBaseline6   104//144-20-20//(169 - 45)
#define KCamLocationSummaryTitleBaseline7   118//158-20-20//(184 - 45)
#define KCamLocationSummaryTitleBaseline8   132//172-20-20//(199 - 45)
#define KCamLocationSummaryTitleBaseline9   146//186-20-20//(214 - 45)
#define KCamLocationSummaryTitleBaseline10   160//200-20-20//(229 - 45)

#define KCamLocationListboxLeftX   10
#define KCamLocationListboxTop   8
#define KCamLocationListboxWidth   (166 - KCamLocationAdjustBoxSizes)
#define KCamLocationListboxHeight   182



//----------------------------------------------------
//
//    R_CAM_SOFTKEYS_OPTIONS_BACK__CHANGE
//    Text association with MSK ( CHANGE )
//
//----------------------------------------------------
//
RESOURCE CBA R_CAM_SOFTKEYS_OPTIONS_BACK__CHANGE
    {
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamMSKCmdAppChange;
            txt = qtn_msk_change;
            }
        };
    }

//----------------------------------------------------
//
//    R_CAM_SOFTKEYS_OPTIONS_BACK__SELECT
//    Text association with MSK ( CHANGE )
//
//----------------------------------------------------
//
RESOURCE CBA R_CAM_SOFTKEYS_OPTIONS_BACK__SELECT
    {
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeySelect;
            txt = text_softkey_select;
            }
        };
    }



RESOURCE CBA R_CAM_SOFTKEYS_SETTINGS_SELECT_BACK__CHANGE
    {
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeySelect;
            txt = text_softkey_ok;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyCancel;
            txt = text_softkey_cancel;
            },
        CBA_BUTTON
            {
            id = ECamMSKCmdAppChange;
            txt = qtn_msk_change;
            }
        };
    }

//----------------------------------------------------
//
//    R_CAM_SOFTKEYS_OPTIONS_BACK__CAPTURE
//    Text association with MSK ( Capture )
//    Only used for still embedded views
//----------------------------------------------------
//
RESOURCE CBA R_CAM_SOFTKEYS_OPTIONS_BACK__CAPTURE
    {
    flags = EEikButtonGroupAddToStack | EEikCbaFlagTransparent;
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamMSKCmdAppCapture;
            txt = "";
            }
        };
    }

//----------------------------------------------------
//
//    R_CAM_SOFTKEYS_OPTIONS_BACK__CAPTURE_SECONDARY
//    Text association with MSK ( Capture )
//    Only used for still embedded views
//----------------------------------------------------
//
RESOURCE CBA R_CAM_SOFTKEYS_OPTIONS_BACK__CAPTURE_SECONDARY
    {
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamMSKCmdAppCapture;
            txt = qtn_lcam_msk_capture;
            }
        };
    }


//----------------------------------------------------
//
//    R_CAM_SOFTKEYS_OPTIONS_BACK__RECORD
//    Text association with MSK ( Record )
//    Only used for video embedded views
//----------------------------------------------------
//
RESOURCE CBA R_CAM_SOFTKEYS_OPTIONS_BACK__RECORD
    {
    flags = EEikButtonGroupAddToStack | EEikCbaFlagTransparent;
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamMSKCmdAppRecord;
            txt = "";
            }
        };
    }

//----------------------------------------------------
//
//    R_CAM_SOFTKEYS_OPTIONS_BACK__RECORD_SECONDARY
//    Text association with MSK ( Record )
//    Only used for video embedded views
//----------------------------------------------------
//
RESOURCE CBA R_CAM_SOFTKEYS_OPTIONS_BACK__RECORD_SECONDARY
    {
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamMSKCmdAppRecord;
            txt = qtn_lcam_msk_record;
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_softkeys_options_back_toggletoolbar
//    Text association with MSK ( Toggle Active Toolbar )
//
//----------------------------------------------------
//
RESOURCE CBA r_cam_softkeys_options_back_toggletoolbar
    {
    flags = EEikButtonGroupAddToStack | EEikCbaFlagTransparent;
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamCmdToggleActiveToolbar;
            txt = "";
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_softkeys_options_back_toggletoolbar_portrait
//    Text association with MSK ( Toggle Active Toolbar )
//    in portrait mode
//
//----------------------------------------------------
//
RESOURCE CBA r_cam_softkeys_options_back_toggletoolbar_portrait
    {
    flags = EEikButtonGroupAddToStack;
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamCmdToggleActiveToolbar;
            txt = "";
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_softkeys_options_back_toggletoolbar_burst
//    Text association with MSK ( Toggle Active Toolbar )
//    in burst post mode
//
//----------------------------------------------------
//
RESOURCE CBA r_cam_softkeys_options_back_toggletoolbar_burst
    {
    flags = EEikButtonGroupAddToStack;
    buttons =
        {
        CBA_BUTTON
            {
            id=EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id=EAknSoftkeyBack;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = ECamCmdToggleActiveToolbar;
            txt = "";
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_album_list_title
//    Title used in album list popup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_album_list_title
     {
     buf = qtn_lcam_select_album;
     }

//----------------------------------------------------
//
//    r_cam_add_to_album_land_title
//    Title used in Landscape mode
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_add_to_album_land_title
     {
     buf = qtn_lcam_set_land_img_add_toalbum_no;
     }


//----------------------------------------------------
//
//    r_cam_add_to_album_port_title
//    Title used in Landscape mode
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_add_to_album_port_title
     {
     buf = qtn_lcam_set_port_img_add_toalbum_no;
     }

//----------------------------------------------------
//
//    r_cam_album_note_noalbums
//    Prompt used in album list popup when no albums
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_album_note_noalbums
     {
     buf = qtn_lcam_note_noalbums;
     }

//----------------------------------------------------
//
//    r_cam_engine_updateafterprepare
//    Specifies whether device needs to have all settings updated for the engine
//    after each prepare engine call.
//
//----------------------------------------------------
//
RESOURCE CAM_ENGINE_UPDATE r_cam_engine_update
    {
    update = 1;
    }

//----------------------------------------------------
//
//    r_cam_photo_dynamic_settings_data
//    Default values for the photo dynamic setting items
//
//----------------------------------------------------
//
RESOURCE CAM_SETTING_ITEMS_DATA r_cam_photo_dynamic_settings_data
  {
  // These items must be in the same order as the resource
  // for user scene settings r_cam_user_scene_settings_data
  settings_items =
    {
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoWhiteBalance;
      default = ECamWhiteBalanceAWB;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoExposure;
      default = ECamExposureZero;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoColourFilter;
      default = ECamColourFilterColour;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoFlash;
      default = ECamFlashAuto;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoScene;
      default = ECamSceneAuto;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoBrightness;
      default = ECamBrightnessNorm;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoContrast;
      default = ECamContrastNorm;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoImageSharpness;
      default = ECamImageSharpnessNorm;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoColourSaturation;
      default = ECamColourSaturationNorm;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicSelfTimer;
      default = ECamSelfTimerOff;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemDynamicPhotoLightSensitivity;
      default = ECamLightSensitivityAuto;
      },
    CAM_NON_STATIC_SETTING_ITEM_DATA
      {
      id      = ECamSettingItemViewfinderGrid;
      default = ECamViewfinderGridOff;
      }
    };
  }

//----------------------------------------------------
//
//    r_cam_photo_resolution_array
//    Mapping of photo resolution settings
//    to actual numeric parameters.
//
//----------------------------------------------------
//
RESOURCE CAM_RESOLUTION_ARRAY r_cam_photo_resolution_array
    {
    resolutions =
        {
        // VGA
        CAM_RESOLUTION
            {
            width = 640;
            height = 480;
            },
        // SVGA
        CAM_RESOLUTION
            {
            width = 800;
            height = 600;
            },
        // XGA
        CAM_RESOLUTION
            {
            width = 1024;
            height = 768;
            },
        // 1M
        CAM_RESOLUTION
            {
            width = 1152;
            height = 864;
            },
        // 1.3MP
        CAM_RESOLUTION
            {
            width = 1280;
            height = 960;
            },
        // 2MP
        CAM_RESOLUTION
            {
            width = 1600;
            height = 1200;
            },
        // 3MP
        CAM_RESOLUTION
            {
            width = 2048;
            height = 1536;
            },
        // 5MP
        CAM_RESOLUTION
            {
            width = 2592;
            height = 1944;
            },
        // 8MP
        CAM_RESOLUTION
            {
            width = 3264;
            height = 2448;
            },
        // 12MP
        CAM_RESOLUTION
            {
            width = 4000;
            height = 3000;
            },
        // 6MP 16:9
        CAM_RESOLUTION
            {
            width  = 3264;
            height = 1832;
            },
        // 9MP 16:9
        CAM_RESOLUTION
            {
            width  = 4000;
            height = 2248;
            },
        // CIF
        CAM_RESOLUTION
        	{
        	width = 354;
        	height = 288;
        	},
        // QVGA
        CAM_RESOLUTION
        	{
        	width = 320;
        	height = 240;
        	}
        };
    }

//----------------------------------------------------
//
//    r_cam_setting_photo_quality_slider
//    Resource for the photo quality slider in quality setting page
//
//----------------------------------------------------
//
RESOURCE CAM_QUALITY_SLIDER r_cam_setting_photo_quality_slider
    {
    title_text           = qtn_lcam_sett_title_ph_resolut;
    subtitle_text_top    = qtn_lcam_quality_subtitle_maximum;
    subtitle_text_bottom = qtn_lcam_quality_subtitle_minimum;
    remaining_text       = qtn_lcam_image_remain;
    setting_title_texts  =
        {
        LBUF { txt = qtn_lcam_sett_attr_quality_print12largem; },
        LBUF { txt = qtn_lcam_sett_attr_quality_print9mlarge;  },
        LBUF { txt = qtn_lcam_sett_attr_quality_print8mlarge;  },
        LBUF { txt = qtn_lcam_sett_attr_quality_print6mlarge;  },
        LBUF { txt = qtn_lcam_sett_attr_quality_print5mlarge;  },
        LBUF { txt = qtn_lcam_sett_attr_quality_print3mlarge;  },
        LBUF { txt = qtn_lcam_sett_attr_quality_print2mlarge;  },
        LBUF { txt = qtn_lcam_sett_attr_quality_print3mmed;    },
        LBUF { txt = qtn_lcam_sett_attr_quality_print2mmed; },
        LBUF { txt = qtn_lcam_sett_attr_quality_print1med; },
        LBUF { txt = qtn_lcam_sett_attr_quality_print1_3small; },
        LBUF { txt = qtn_lcam_sett_attr_quality_print1_0small; },
        LBUF { txt = qtn_lcam_sett_attr_quality_print0_8med;   },
        LBUF { txt = qtn_lcam_sett_attr_quality_mms;           }
        };
    setting_desc_texts =
        {
        LBUF { txt = qtn_lcam_descr_quality_print12m;  }, // high quality
        LBUF { txt = qtn_lcam_descr_quality_print9m;   },
        LBUF { txt = qtn_lcam_descr_quality_print8m;   }, // high quality
        LBUF { txt = qtn_lcam_descr_quality_print6m;   },
        LBUF { txt = qtn_lcam_descr_quality_print5m;   }, // high quality
        LBUF { txt = qtn_lcam_descr_quality_print3m;   },
        LBUF { txt = qtn_lcam_descr_quality_print2m;   },
        LBUF { txt = qtn_lcam_descr_quality_print3m;   },
        LBUF { txt = qtn_lcam_descr_quality_print2m;   },
        LBUF { txt = qtn_lcam_descr_quality_print1m; },
        LBUF { txt = qtn_lcam_descr_quality_print1_3m; },
        LBUF { txt = qtn_lcam_descr_quality_print1m;   },
        LBUF { txt = qtn_lcam_descr_quality_email; },
        LBUF { txt = qtn_lcam_descr_quality_low;       }
        };
    setting_enum =
        {
        ECamImageQualityPrint12m,
        ECamImageQualityPrintW9m,
        ECamImageQualityPrint8m,
        ECamImageQualityPrintW6m,
        ECamImageQualityPrint5m,
        ECamImageQualityPrint3m,    // 3 MegaPixel print quality
        ECamImageQualityPrint2m,    // 2 MegaPixel print quality
        ECamImageQualityPrint1_3m,  // 1.3 MegaPixel print quality
        ECamImageQualityEmail1m,
        ECamImageQualityEmail08m,
        ECamImageQualityEmail05m,
        ECamImageQualityMMS
        };
    }


//----------------------------------------------------
//
//    r_cam_setting_quality_slider_layout
//    Layout for the quality slider in quality setting page
//
//----------------------------------------------------
//
RESOURCE CAM_QUALITY_SLIDER_LAYOUT r_cam_setting_quality_slider_layout
    {
    slider_position =
        {
        POINT { x = 10; y = 4; }
        };
    subtitle_top =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx; r=2; B=16; W=135; J=ELayoutAlignLeft; }
        };
    subtitle_bottom =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx; r=2; B=186; W=135; J=ELayoutAlignLeft;}
        };
    setting_title =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontPrimaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=47; W=KSettingQualitySliderInsideFontRightLimit; J=ELayoutAlignLeft; }
        };
    setting_descriptions =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=68; W=120; J=ELayoutAlignLeft; },
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=88; W=120; J=ELayoutAlignLeft; },
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=108; W=120; J=ELayoutAlignLeft; }
        };
    remaining_title =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=143; W=120; J=ELayoutAlignLeft; }
        };
    remaining_text =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=92; B=163; W=20; J=ELayoutAlignLeft; }
        };
    storage_icon =
        {
        AVKON_LAYOUT_RECT { l = KSettingQualitySliderRectTLx + 52;  t = 155;  W = 18; H = 22; }
        };
    desc_rect =
        {
        AVKON_LAYOUT_RECT { C = 215; l = KSettingQualitySliderRectTLx;  t = KSettingQualitySliderRectTLy;  W = KSettingQualitySliderRectWidth;
                            H = KSettingQualitySliderRectHeight; }
        };
    desc_inner_rect1 =
        {
        AVKON_LAYOUT_RECT { l = KSettingQualitySliderRectTLx + KSettingQualitySliderInsideRectBorderWidth;
                            t = KSettingQualitySliderRectTLy + KSettingQualitySliderInsideRectBorderWidth;
                            W = KSettingQualitySliderRectWidth - 2*KSettingQualitySliderInsideRectBorderWidth;
                            H = KSettingQualitySliderInsideTopRectHeight; }
        };
    desc_inner_rect2 =
        {
        AVKON_LAYOUT_RECT { l = KSettingQualitySliderRectTLx + KSettingQualitySliderInsideRectBorderWidth;
                            t = KSettingQualitySliderRectTLy + KSettingQualitySliderInsideTopRectHeight + KSettingQualitySliderInsideRectBorderWidth * 2;
                            W = KSettingQualitySliderRectWidth - 2*KSettingQualitySliderInsideRectBorderWidth;
                            H = KSettingQualitySliderRectHeight - KSettingQualitySliderInsideTopRectHeight - 3*KSettingQualitySliderInsideRectBorderWidth; }
        };
    }

//----------------------------------------------------
//
//    r_cam_setting_quality_slider_layout_ah
//    Layout for the quality slider in quality setting page
//
//----------------------------------------------------
//
RESOURCE CAM_QUALITY_SLIDER_LAYOUT r_cam_setting_quality_slider_layout_ah
    {
    slider_position =
        {
        POINT { x = 255; y = 10; }
        };
    subtitle_top =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx; l=2; B=16; W=135; J=ELayoutAlignRight; }
        };
    subtitle_bottom =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx; l=2; B=186; W=135; J=ELayoutAlignRight;}
        };
    setting_title =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontPrimaryFont; C=215; r=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            l=KSettingQualitySliderInsideFontRightLimit; B=47; W=KSettingQualitySliderInsideFontRightLimit; J=ELayoutAlignRight; }
        };
    setting_descriptions =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            l=KSettingQualitySliderInsideFontRightLimit; B=68; W=120; J=ELayoutAlignRight; },
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            l=KSettingQualitySliderInsideFontRightLimit; B=88; W=120; J=ELayoutAlignRight; },
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            l=KSettingQualitySliderInsideFontRightLimit; B=108; W=120; J=ELayoutAlignRight; }
        };
    remaining_title =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            l=KSettingQualitySliderInsideFontRightLimit; B=143; W=120; J=ELayoutAlignRight; }
        };
    remaining_text =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; r=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            l=92; B=163; W=20; J=ELayoutAlignRight; }
        };
    storage_icon =
        {
        AVKON_LAYOUT_RECT { r = KSettingQualitySliderRectTLx + 52;  t = 155;  W = 18; H = 22; }
        };
    desc_rect =
        {
        AVKON_LAYOUT_RECT { C = 215; r = KSettingQualitySliderRectTLx;  t = KSettingQualitySliderRectTLy;  W = KSettingQualitySliderRectWidth;
                            H = KSettingQualitySliderRectHeight; }
        };
    desc_inner_rect1 =
        {
        AVKON_LAYOUT_RECT { r = KSettingQualitySliderRectTLx + KSettingQualitySliderInsideRectBorderWidth;
                            t = KSettingQualitySliderRectTLy + KSettingQualitySliderInsideRectBorderWidth;
                            W = KSettingQualitySliderRectWidth - 2*KSettingQualitySliderInsideRectBorderWidth;
                            H = KSettingQualitySliderInsideTopRectHeight; }
        };
    desc_inner_rect2 =
        {
        AVKON_LAYOUT_RECT { r = KSettingQualitySliderRectTLx + KSettingQualitySliderInsideRectBorderWidth;
                            t = KSettingQualitySliderRectTLy + KSettingQualitySliderInsideTopRectHeight + KSettingQualitySliderInsideRectBorderWidth * 2;
                            W = KSettingQualitySliderRectWidth - 2*KSettingQualitySliderInsideRectBorderWidth;
                            H = KSettingQualitySliderRectHeight - KSettingQualitySliderInsideTopRectHeight - 3*KSettingQualitySliderInsideRectBorderWidth; }
        };
    }

//----------------------------------------------------
//
//    r_cam_setting_quality_slider_layout_apac
//    Layout for the quality slider in quality setting page
//
//----------------------------------------------------
//
RESOURCE CAM_QUALITY_SLIDER_LAYOUT r_cam_setting_quality_slider_layout_apac
    {
    slider_position =
        {
        POINT { x = 10; y = 4; }
        };
    subtitle_top =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx; r=2; B=16; W=135; J=ELayoutAlignLeft; }
        };
    subtitle_bottom =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx; r=2; B=186; W=135; J=ELayoutAlignLeft;}
        };
    setting_title =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontPrimaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=47; W=KSettingQualitySliderInsideFontRightLimit; J=ELayoutAlignLeft; }
        };
    setting_descriptions =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=68; W=120; J=ELayoutAlignLeft; },
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=88; W=120; J=ELayoutAlignLeft; },
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=108; W=120; J=ELayoutAlignLeft; }
        };
    remaining_title =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=KSettingQualitySliderInsideFontRightLimit; B=143; W=120; J=ELayoutAlignLeft; }
        };
    remaining_text =
        {
        AVKON_LAYOUT_TEXT { font = EAknLogicalFontSecondaryFont; C=215; l=KSettingQualitySliderRectTLx + KSettingQualitySliderInsideFontOffsetx;
                            r=92; B=163; W=20; J=ELayoutAlignLeft; }
        };
    storage_icon =
        {
        AVKON_LAYOUT_RECT { l = KSettingQualitySliderRectTLx + 52;  t = 155;  W = 18; H = 22; }
        };
    desc_rect =
        {
        AVKON_LAYOUT_RECT { C = 215; l = KSettingQualitySliderRectTLx;  t = KSettingQualitySliderRectTLy;  W = KSettingQualitySliderRectWidth;
                            H = KSettingQualitySliderRectHeight; }
        };
    desc_inner_rect1 =
        {
        AVKON_LAYOUT_RECT { l = KSettingQualitySliderRectTLx + KSettingQualitySliderInsideRectBorderWidth;
                            t = KSettingQualitySliderRectTLy + KSettingQualitySliderInsideRectBorderWidth;
                            W = KSettingQualitySliderRectWidth - 2*KSettingQualitySliderInsideRectBorderWidth;
                            H = KSettingQualitySliderInsideTopRectHeight; }
        };
    desc_inner_rect2 =
        {
        AVKON_LAYOUT_RECT { l = KSettingQualitySliderRectTLx + KSettingQualitySliderInsideRectBorderWidth;
                            t = KSettingQualitySliderRectTLy + KSettingQualitySliderInsideTopRectHeight + KSettingQualitySliderInsideRectBorderWidth * 2;
                            W = KSettingQualitySliderRectWidth - 2*KSettingQualitySliderInsideRectBorderWidth;
                            H = KSettingQualitySliderRectHeight - KSettingQualitySliderInsideTopRectHeight - 3*KSettingQualitySliderInsideRectBorderWidth; }
        };
    }

//----------------------------------------------------
//
//    r_cam_setting_video_quality_slider
//    Resource for the video quality slider in quality setting page
//
//----------------------------------------------------
//
RESOURCE CAM_QUALITY_SLIDER r_cam_setting_video_quality_slider
    {
    title_text = qtn_lcam_sett_title_vi_type;
    subtitle_text_top = qtn_lcam_quality_subtitle_vmax;
    subtitle_text_bottom = qtn_lcam_quality_subtitle_vmin;
    remaining_text = qtn_lcam_video_remain;
    setting_title_texts =
        {
        LBUF { txt = qtn_lcam_set_type_highdefinition; },
        LBUF { txt = qtn_lcam_set_type_widescreen; },
        LBUF { txt = qtn_lcam_set_type_tvhigh; },
        LBUF { txt = qtn_lcam_set_type_high; },
        LBUF { txt = qtn_lcam_set_type_widescreen; },
        LBUF { txt = qtn_lcam_set_type_widescr_normal; },
        LBUF { txt = qtn_lcam_set_type_tvnorm; },
        LBUF { txt = qtn_lcam_set_type_normal; },
        LBUF { txt = qtn_lcam_set_type_webhigh; },
        LBUF { txt = qtn_lcam_set_type_webnorm; },
        LBUF { txt = qtn_lcam_set_type_mms; },
        LBUF { txt = qtn_lcam_set_type_sharing; }
        };
    setting_desc_texts =
        {
        LBUF { txt = qtn_lcam_descr_quality_highdefinition; },
        LBUF { txt = qtn_lcam_descr_quality_widescreen; },
        LBUF { txt = qtn_lcam_descr_quality_tvhigh; },
        LBUF { txt = qtn_lcam_descr_quality_vhigh; },
        LBUF { txt = qtn_lcam_descr_quality_widescreen; },
        LBUF { txt = qtn_lcam_descr_quality_widescr_normal; },
        LBUF { txt = qtn_lcam_descr_quality_tvnorm; },
        LBUF { txt = qtn_lcam_descr_quality_vnorm; },
        LBUF { txt = qtn_lcam_descr_quality_webhigh; },
        LBUF { txt = qtn_lcam_descr_quality_webnorm; },
        LBUF { txt = qtn_lcam_descr_quality_vshare; },
        LBUF { txt = qtn_lcam_descr_quality_vshare; }
        };
    setting_enum =
        {
        ECamVideoQualityHigh,
        ECamVideoQualityNormalHigh,
    	ECamVideoQualityNormal,
    	ECamVideoQualityNormalLow,
    	ECamVideoQualitySharing
        };
    }


// Video and Photo options menu

//----------------------------------------------------
//
//    r_cam_video_settings_title_name
//    Title name used in video settings view
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_cam_video_settings_title_name
    {
    txt = qtn_lcam_title_text_vidsetting;
    }

//----------------------------------------------------
//
//    r_cam_photo_settings_title_name
//    Title name used in photo settings view
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_cam_photo_settings_title_name
    {
    txt = qtn_lcam_title_text_photsetting;
    }

//----------------------------------------------------
//
//    r_cam_photo_location_settings_title_name
//    Title name used in photo location settings view
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_cam_photo_location_settings_title_name
    {
    txt = qtn_lcam_sett_attr_ph_location_setting;
    }

//----------------------------------------------------
//
//    r_cam_setting_list_view
//    Video and Photo settings view
//
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_cam_setting_list_view
    {
    menubar = r_cam_settings_list_menubar;
    cba = R_CAM_SOFTKEYS_OPTIONS_BACK__CHANGE;
    }

//----------------------------------------------------
//
//    r_cam_settings_list_menubar
//    Menubar visible in Image Settings and Video Settings views
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_cam_settings_list_menubar
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_cam_settings_list_menu;
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_settings_list_menu
//    Menu visible in video and photo views
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_cam_settings_list_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = ECamCmdInternalExit;
            txt = qtn_options_exit;
            }
        };
    }

// ---------------------------------------------------------------------------- 
//
// r_setting_page_extension
//
// ---------------------------------------------------------------------------- 
//
RESOURCE AVKON_SETTING_PAGE_EXTENSION r_setting_page_extension
    {
    flags = KAknSettingPageNoEmbeddedSoftKeys;
    }


//----------------------------------------------------
//
//    r_cam_settings_quality_settings_page
//	  setting page resource for the quality slider
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_cam_settings_quality_settings_page
	{
	// the type and editor resource are included so that the
	// settings page can be constructed without crashing but are not used
	// The custom quality control is used instead
	type = EAknCtPopupSettingList;
	editor_resource_id = r_cam_setting_listbox;
	softkey_resource = R_AVKON_SOFTKEYS_SELECT_CANCEL__SELECT;
	extension = r_setting_page_extension;
	}

//----------------------------------------------------
//
//    r_cam_settings_location_settings_page   
//   
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_cam_settings_location_settings_page
    {
    // the type and editor resource are included so that the
    // settings page can be constructed without crashing but are not used
    // The custom quality control is used instead
    type = EAknCtPopupSettingList;
    editor_resource_id = r_cam_setting_listbox;  
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    extension = r_setting_page_extension;             
    }

// VIDEO SETTINGS RESOURCES

//----------------------------------------------------
//
//    r_cam_video_settings_item_list_camcorder
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_ITEM_LIST r_cam_video_settings_item_list_camcorder
	{
	items =
		{
    AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoQuality;
			setting_page_resource = r_cam_settings_quality_settings_page;
			associated_resource = r_cam_video_quality_texts;
			name = qtn_lcam_sett_attr_vi_type;
			},
    AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoStab;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource = r_cam_on_off_texts_vid_stable;
			name = qtn_lcam_sett_attr_vid_stable;
			},
    AVKON_SETTING_ITEM
          {
          identifier            = ECamSettingItemVideoAudioRec;
          setting_page_resource = r_cam_settings_list_settings_page;
          associated_resource   = r_cam_texts_vid_audiomute_land;
          name                  = qtn_lcam_sett_attr_audio_rec;
          },

     AVKON_SETTING_ITEM
		 {
          identifier            = ECamSettingItemContinuousAutofocus;  
          setting_page_resource = r_cam_settings_list_settings_page;
          associated_resource   = r_cam_texts_vid_continuous_af;
          name                  = qtn_lcam_sett_attr_cont_af;
          },
     AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemVideoShowCapturedVideo;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_on_off_texts_vid_showcap_land;
			name                  = qtn_lcam_sett_attr_post_vi;
			},

		AVKON_SETTING_ITEM
	    {
      identifier = ECamSettingItemVideoNameBaseType;
      setting_page_resource = r_cam_settings_list_settings_page;
      associated_resource = r_cam_date_or_text_texts;
      name = qtn_lcam_sett_attr_video_name;
      },
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemRestoreCameraSettings;
			setting_page_resource = r_cam_settings_list_settings_page;
			name = qtn_lcam_sett_attr_reset;
			}
		};

	}

//----------------------------------------------------
//
//    r_cam_video_settings_with_location_item_list_camcorder
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_ITEM_LIST r_cam_video_settings_with_location_item_list_camcorder
    {
    items =
        {
    AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemVideoQuality;
            setting_page_resource = r_cam_settings_quality_settings_page;
            associated_resource = r_cam_video_quality_texts;
            name = qtn_lcam_sett_attr_vi_type;
            },
    AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemRecLocation;
            // The quality page resource is used to prevent crashing in the construction phase
            // The type and editor resource are included but are not used
            // The custom quality control is used instead
            setting_page_resource = r_cam_settings_location_settings_page;
            associated_resource = r_cam_photo_location_texts;
            name = qtn_lcam_sett_attr_rec_location;
            },
    AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemVideoStab;
            setting_page_resource = r_cam_settings_list_settings_page;
            associated_resource = r_cam_on_off_texts_vid_stable;
            name = qtn_lcam_sett_attr_vid_stable;
            },
    AVKON_SETTING_ITEM
      {
      identifier            = ECamSettingItemVideoAudioRec;
      setting_page_resource = r_cam_settings_list_settings_page;
      associated_resource   = r_cam_texts_vid_audiomute_land;
      name                  = qtn_lcam_sett_attr_audio_rec;
      },
    AVKON_SETTING_ITEM   
          {
          identifier            = ECamSettingItemContinuousAutofocus;  
          setting_page_resource = r_cam_settings_list_settings_page;
          associated_resource   = r_cam_texts_vid_continuous_af;
          name                  = qtn_lcam_sett_attr_cont_af;
          },
 
    AVKON_SETTING_ITEM
            {
            identifier            = ECamSettingItemVideoShowCapturedVideo;
            setting_page_resource = r_cam_settings_list_settings_page;
            associated_resource   = r_cam_on_off_texts_vid_showcap_land;
            name                  = qtn_lcam_sett_attr_post_vi;
            },

        AVKON_SETTING_ITEM
        {
      identifier = ECamSettingItemVideoNameBaseType;
      setting_page_resource = r_cam_settings_list_settings_page;
      associated_resource = r_cam_date_or_text_texts;
      name = qtn_lcam_sett_attr_video_name;
      },
        AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemVideoMediaStorage;
            setting_page_resource = r_cam_image_memory_selection_dialog;
            name = qtn_lcam_sett_attr_store;
            },
        AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemRestoreCameraSettings;
            setting_page_resource = r_cam_settings_list_settings_page;
            name = qtn_lcam_sett_attr_reset;
            }
        };

    }

//----------------------------------------------------
//
//    r_cam_video_settings_item_list_portrait
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_ITEM_LIST r_cam_video_settings_item_list_portrait
	{
	items =
		{
    AVKON_SETTING_ITEM
          {
          identifier            = ECamSettingItemVideoAudioRec;
          setting_page_resource = r_cam_settings_list_settings_page;
          associated_resource   = r_cam_texts_vid_audiomute_port;
          name                  = qtn_lcam_sett_attr_audio_rec;
          },


    AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemVideoShowCapturedVideo;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_on_off_texts_vid_showcap_port;
			name                  = qtn_lcam_sett_attr_post_vi;
			},

    AVKON_SETTING_ITEM
      {
      identifier = ECamSettingItemVideoNameBaseType;
      setting_page_resource = r_cam_settings_list_settings_page;
      associated_resource = r_cam_date_or_text_texts;
      name = qtn_lcam_sett_attr_video_name;
      },

		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			}
		};

	}

//----------------------------------------------------
//
//    r_cam_embedded_video_settings_item_list_camcorder
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_embedded_video_settings_item_list_camcorder
	{
	items =
		{
        AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoQuality;
			setting_page_resource = r_cam_settings_quality_settings_page;
			associated_resource = r_cam_video_quality_texts;
			name = qtn_lcam_sett_attr_vi_type;
			},

		AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemVideoAudioRec;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_texts_vid_audiomute_land;
			name                  = qtn_lcam_sett_attr_audio_rec;
			},
    AVKON_SETTING_ITEM   
          {
          identifier            = ECamSettingItemContinuousAutofocus;  
          setting_page_resource = r_cam_settings_list_settings_page;
          associated_resource   = r_cam_texts_vid_continuous_af;
          name                  = qtn_lcam_sett_attr_cont_af;
          },
 
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemRestoreCameraSettings;
			setting_page_resource = r_cam_settings_list_settings_page;
			name = qtn_lcam_sett_attr_reset;
			}
		};

	}

//----------------------------------------------------
//
//    r_cam_embedded_video_settings_item_list_portrait
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_embedded_video_settings_item_list_portrait
	{
	items =
		{
		AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemVideoAudioRec;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_texts_vid_audiomute_port;
			name                  = qtn_lcam_sett_attr_audio_rec;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemVideoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			}
		};

	}

//----------------------------------------------------
//
//    r_cam_video_quality_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_video_quality_texts
    {
    setting_texts_resource = r_cam_video_quality_text_array;
    }

//----------------------------------------------------
//    r_cam_video_resolution_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_video_resolution_texts
    {
    setting_texts_resource = r_cam_video_resolution_text_array;
    }

// IMAGE SETTINGS RESOURCES


//----------------------------------------------------
//
//    r_cam_settings_list_settings_page
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_PAGE
r_cam_settings_list_settings_page
	{
	type = EAknCtPopupSettingList;
	editor_resource_id = r_cam_setting_listbox;
	softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
	}


// ---------------------------------------------------------
//
//    r_cam_image_memory_selection_dialog
//    Memory selection dialog
//
// ---------------------------------------------------------
//
RESOURCE MEMORYSELECTIONDIALOG r_cam_image_memory_selection_dialog
    {
    title = qtn_lcam_sett_attr_store;
    softkey_1 = text_softkey_ok;
    softkey_2 = text_softkey_cancel;

    locations =
        {
        LOCATION
            {
            root_path = text_phone_memory_root_path;
            default_folder = text_images_path;
            },
        LOCATION
            {
            root_path = text_memory_card_root_path;
            }
        };
    }

// ---------------------------------------------------------
//
//    r_cam_setting_listbox
//    Listbox of setting page
//
// ---------------------------------------------------------
//
RESOURCE POPUP_SETTING_LIST r_cam_setting_listbox
    {
    flags = 0;
    }

//----------------------------------------------------
//
//    r_cam_photo_settings_item_list_camcorder
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_photo_settings_item_list_camcorder
	{
	items =
		{
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoQuality;
			setting_page_resource = r_cam_settings_quality_settings_page;
			associated_resource = r_cam_photo_quality_texts;
			name = qtn_lcam_sett_attr_quality;
			},

    AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemShowCapturedPhoto;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_on_off_texts_img_showcap_land;
			name                  = qtn_lcam_sett_attr_post_ph;
			},

		AVKON_SETTING_ITEM
			{
      identifier = ECamSettingItemPhotoNameBaseType;
      setting_page_resource = r_cam_settings_list_settings_page;
      associated_resource = r_cam_date_or_text_texts;
      name = qtn_lcam_sett_attr_name_base;
      },

      // If optical zoom is supported, could use setting for digital zoom only.
      // If optical zoom not supported, this setting is needed for extended zoom only.

	AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemPhotoDigitalZoom;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_ext_zoom_texts;
			name                  = qtn_lcam_sett_attr_zoom;         // "Extended digital zoom"
			},
    AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoCaptureTone;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource = r_cam_capture_tone_list_texts;
			name = qtn_lcam_sett_attr_tone;
			},
		AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemImageRotation;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_on_off_texts_img_rotate;
			name                  = qtn_lcam_sett_attr_tsensor;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemRestoreCameraSettings;
			setting_page_resource = r_cam_settings_list_settings_page;
			name = qtn_lcam_sett_attr_reset;
			}
		};
	}


//----------------------------------------------------
//
//    r_cam_photo_settings_with_location_item_list_camcorder
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_photo_settings_with_location_item_list_camcorder
    {
    items =
        {
        AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemPhotoQuality;
            setting_page_resource = r_cam_settings_quality_settings_page;
            associated_resource = r_cam_photo_quality_texts;
            name = qtn_lcam_sett_attr_quality;
            },
        AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemRecLocation;
            // The quality page resource is used to prevent crashing in the construction phase
            // The type and editor resource are included but are not used
            // The custom quality control is used instead
            setting_page_resource = r_cam_settings_location_settings_page;
            associated_resource = r_cam_photo_location_texts;
            name = qtn_lcam_sett_attr_rec_location;
            },

    AVKON_SETTING_ITEM
            {
            identifier            = ECamSettingItemShowCapturedPhoto;
            setting_page_resource = r_cam_settings_list_settings_page;
            associated_resource   = r_cam_on_off_texts_img_showcap_land;
            name                  = qtn_lcam_sett_attr_post_ph;
            },

        AVKON_SETTING_ITEM
            {
      identifier = ECamSettingItemPhotoNameBaseType;
      setting_page_resource = r_cam_settings_list_settings_page;
      associated_resource = r_cam_date_or_text_texts;
      name = qtn_lcam_sett_attr_name_base;
      },

      // If optical zoom is supported, could use setting for digital zoom only.
      // If optical zoom not supported, this setting is needed for extended zoom only.

    AVKON_SETTING_ITEM
            {
            identifier            = ECamSettingItemPhotoDigitalZoom;
            setting_page_resource = r_cam_settings_list_settings_page;
            associated_resource   = r_cam_ext_zoom_texts;
            name                  = qtn_lcam_sett_attr_zoom;         // "Extended digital zoom"
            },
    AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemPhotoCaptureTone;
            setting_page_resource = r_cam_settings_list_settings_page;
            associated_resource = r_cam_capture_tone_list_texts;
            name = qtn_lcam_sett_attr_tone;
            },
        AVKON_SETTING_ITEM
            {
            identifier            = ECamSettingItemImageRotation;
            setting_page_resource = r_cam_settings_list_settings_page;
            associated_resource   = r_cam_on_off_texts_img_rotate;
            name                  = qtn_lcam_sett_attr_tsensor;
            },
        AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemPhotoMediaStorage;
            setting_page_resource = r_cam_image_memory_selection_dialog;
            name = qtn_lcam_sett_attr_store;
            },
        AVKON_SETTING_ITEM
            {
            identifier = ECamSettingItemRestoreCameraSettings;
            setting_page_resource = r_cam_settings_list_settings_page;
            name = qtn_lcam_sett_attr_reset;
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_photo_settings_item_list_portrait
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_photo_settings_item_list_portrait
	{
	items =
		{

        AVKON_SETTING_ITEM
			{
			identifier            = ECamSettingItemShowCapturedPhoto;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource   = r_cam_on_off_texts_img_showcap_port;
			name                  = qtn_lcam_sett_attr_post_ph;
			},

		AVKON_SETTING_ITEM
		    {
		    identifier = ECamSettingItemPhotoNameBaseType;
		    setting_page_resource = r_cam_settings_list_settings_page;
		    associated_resource = r_cam_date_or_text_texts;
		    name = qtn_lcam_sett_attr_name_base;
		    },

		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			}
		};
	}

//----------------------------------------------------
//
//    r_cam_embedded_photo_settings_item_list_camcorder
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_embedded_photo_settings_item_list_camcorder
	{
	items =
		{
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoSize;
			setting_page_resource = r_cam_settings_list_settings_page;
			associated_resource = r_cam_photo_size_texts;
			name = qtn_lcam_sett_attr_ph_resolut;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoQuality;
			setting_page_resource = r_cam_settings_quality_settings_page;
			associated_resource = r_cam_photo_quality_texts;
			name = qtn_lcam_sett_attr_quality;
			},

 		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemRestoreCameraSettings;
			setting_page_resource = r_cam_settings_list_settings_page;
			name = qtn_lcam_sett_attr_reset;
			}
		};

	}

//----------------------------------------------------
//
//    r_cam_embedded_photo_settings_item_list_portrait
//
//----------------------------------------------------
//

RESOURCE AVKON_SETTING_ITEM_LIST
r_cam_embedded_photo_settings_item_list_portrait
	{
	items =
		{

		AVKON_SETTING_ITEM
			{
			identifier = ECamSettingItemPhotoMediaStorage;
			setting_page_resource = r_cam_image_memory_selection_dialog;
			name = qtn_lcam_sett_attr_store;
			}
		};

	}

//----------------------------------------------------
//
//    r_cam_photo_quality_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_photo_quality_texts
    {
    setting_texts_resource = r_cam_photo_quality_text_array;
    }

//----------------------------------------------------
//
//    r_cam_photo_location_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_photo_location_texts
    {
    setting_texts_resource = r_cam_photo_location_text_array;
    popped_up_texts_resource = r_cam_off_on_loc_text_list;
    }

//----------------------------------------------------
//
//    r_cam_photo_size_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_photo_size_texts
    {
    setting_texts_resource = r_cam_photo_size_text_array;
    }


// ---------------------------------------------------------------------------
// Setting page texts for photo "Add to album" setting item, landscape
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_setting_texts_img_add_to_album_land
  {
  setting_texts_resource   = r_cam_text_and_value_array_img_add_to_album_land;
  popped_up_texts_resource = r_cam_text_array_img_add_to_album_land;
  }

// ---------------------------------------------------------------------------
// Setting page texts for photo "Add to album" setting item, portrait
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_setting_texts_img_add_to_album_port
  {
  setting_texts_resource   = r_cam_text_and_value_array_img_add_to_album_port;
  popped_up_texts_resource = r_cam_text_array_img_add_to_album_port;
  }

// ---------------------------------------------------------------------------
// Setting page texts for video "Add to album" setting item, landscape
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_setting_texts_vid_add_to_album_land
  {
  setting_texts_resource   = r_cam_text_and_value_array_vid_add_to_album_land;
  popped_up_texts_resource = r_cam_text_array_vid_add_to_album_land;
  }

// ---------------------------------------------------------------------------
// Setting page texts for video "Add to album" setting item, portrait
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_setting_texts_vid_add_to_album_port
  {
  setting_texts_resource   = r_cam_text_and_value_array_vid_add_to_album_port;
  popped_up_texts_resource = r_cam_text_array_vid_add_to_album_port;
  }

//----------------------------------------------------
//
//    r_cam_on_off_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
/* Only context specific setting texts to be used.
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts
  {
  setting_texts_resource = r_cam_on_off_text_array;
  }
*/

// ---------------------------------------------------------------------------
// Video stabilisation setting page texts
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts_vid_stable
  {
  setting_texts_resource = r_cam_text_array_vid_stable;
  }

// ---------------------------------------------------------------------------
// Image rotation setting page texts
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts_img_rotate
  {
  setting_texts_resource = r_cam_text_array_img_rotate;
  }

// ---------------------------------------------------------------------------
// Show video post capture on/off setting page texts, landscape
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts_vid_showcap_land
  {
  setting_texts_resource = r_cam_text_array_vid_showcap_land;
  }

// ---------------------------------------------------------------------------
// Show video post capture on/off setting page texts, portrait
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts_vid_showcap_port
  {
  setting_texts_resource = r_cam_text_array_vid_showcap_port;
  }

// ---------------------------------------------------------------------------
// Show photo post capture on/off setting page texts, landscape
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts_img_showcap_land
  {
  setting_texts_resource = r_cam_text_array_img_showcap_land;
  }

// ---------------------------------------------------------------------------
// Show photo post capture on/off setting page texts, portrait
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_off_texts_img_showcap_port
  {
  setting_texts_resource = r_cam_text_array_img_showcap_port;
  }

//----------------------------------------------------
//
//    r_cam_on_mute_texts
//    Defines list for audio enabled setting page
//
//----------------------------------------------------
//
/*
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_on_mute_texts
  {
  setting_texts_resource = r_cam_on_mute_text_array;
  }
*/

// ---------------------------------------------------------------------------
// Option texts for video mute audio setting, landscape
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_texts_vid_audiomute_land
  {
  setting_texts_resource = r_cam_text_array_audiomute_land;
  }

// ---------------------------------------------------------------------------
// Option texts for video continuous autofocus setting   
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_texts_vid_continuous_af
  {
  setting_texts_resource = r_cam_text_array_continuous_af;
  }

// ---------------------------------------------------------------------------
// Option texts for video mute audio setting, portrait
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_texts_vid_audiomute_port
  {
  setting_texts_resource = r_cam_text_array_audiomute_port;
  }


//----------------------------------------------------
//
//    r_cam_ext_zoom_texts
//    Defines list for digital/extended zoom page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_ext_zoom_texts
    {
    setting_texts_resource = r_cam_zoom_text_array;
    }


//----------------------------------------------------
//
//    r_cam_capture_tone_list_texts
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_capture_tone_list_texts
    {
    setting_texts_resource = r_cam_capture_tone_text_and_value_array;
    }


//----------------------------------------------------
//
//    r_cam_date_or_text_texts
//    Defines list for base name setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_POPUP_SETTING_TEXTS r_cam_date_or_text_texts
    {
    setting_texts_resource = r_cam_date_or_text_array;
    }


//----------------------------------------------------
//
//    r_cam_date_or_text_array
//    Defines list for setting page
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_date_or_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamNameBaseDate;
            text = qtn_lcam_set_pop_date;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamNameBaseText;
            text = qtn_lcam_set_pop_text;
            }
        };
    }


//----------------------------------------------------
//
//    r_cam_photo_size_text_array
//    Defines options for settings/still/image resolution.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_photo_size_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamPhotoSize2MP;    // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_resolut_2m;              // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamPhotoSizeVGA; // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_resolut_vga;             // Text visible in the UI
            }

        };
    }


//----------------------------------------------------
//
//    r_cam_photo_quality_text_array
//    Defines options for settings/still/image quality.
//    Visible in the setting item.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_photo_quality_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint12m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print12largem; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrintW9m;    // refers to id in r_cam_image_quality_array
            text  = qtn_lcam_sett_attr_quality_print9mlarge; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint8m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print8mlarge; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrintW6m;    // refers to id in r_cam_image_quality_array
            text  = qtn_lcam_sett_attr_quality_print6mlarge; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint5m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print5mlarge; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint3m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print3mlarge; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint2m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print2mlarge; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint3m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print3mmed; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint2m;  // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print2mmed; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityEmail1m;  // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print1med; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityPrint1_3m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print1_3small; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityEmail1m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print1_0small; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityEmail08m;    // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_print0_8med; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamImageQualityMMS;        // refers to id in
                                                // r_cam_image_quality_array
            text = qtn_lcam_sett_attr_quality_mms; // Text visible in the UI
            }
        // Add new quality setting texts here if necessary
        };
    }

//----------------------------------------------------
//
//    r_cam_photo_location_text_array
//    Defines options for recording location.
//    Visible in the setting item.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_photo_location_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamLocationOff;        // refers to id in
                                                // r_cam_image_location_array
            text = qtn_lcam_location_set_off; // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamLocationOn;    // refers to id in
                                                // r_cam_image_location_array
            text = qtn_lcam_location_set_on; // Text visible in the UI
            }
        // Add new location setting texts here if necessary
        };
    }

//----------------------------------------------------
//
//    r_cam_video_quality_text_array
//    Defines options for settings/video quality.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_video_quality_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityHigh;
            text = qtn_lcam_set_type_highdefinition;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityHigh;
            text = qtn_lcam_set_type_widescreen;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityHigh;
            text = qtn_lcam_set_type_tvhigh;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityHigh;
            text = qtn_lcam_set_type_high;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormalHigh;
            text = qtn_lcam_set_type_widescreen;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormalHigh;
            text = qtn_lcam_set_type_widescr_normal;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormalHigh;
            text = qtn_lcam_set_type_tvnorm;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormal;
            text = qtn_lcam_set_type_normal;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormal;
            text = qtn_lcam_set_type_webhigh;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormalLow;
            text = qtn_lcam_set_type_webnorm;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualitySharing;
            text = qtn_lcam_set_type_mms;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualitySharing;
            text = qtn_lcam_set_type_sharing;
            }

        // Add new resolutions here if necessary
        };
    }

//----------------------------------------------------
//
//    r_cam_video_resolution_text_array
//    Defines options for settings/video resolution.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_video_resolution_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoResolutionQVGA;
            text = qtn_lcam_set_resolut_med;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoResolutionVGA;
            text = qtn_lcam_set_resolut_lar;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoResolutionCIF;
            text = qtn_lcam_set_resolut_lar;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoResolutionQCIF;
            text = qtn_lcam_set_resolut_med;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoResolutionSubQCIF; // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_resolut_sma; //"SubQCIF";             // Text visible in the UI
            }

        // Add new resolutions here if necessary
        };
    }


// ---------------------------------------------------------------------------
// Text and value array for image add to album setting, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_and_value_array_img_add_to_album_land
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettNo;  text = qtn_lcam_set_land_img_add_toalbum_no;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettYes; text = qtn_lcam_set_land_img_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Text and value array for image add to album setting, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_and_value_array_img_add_to_album_port
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettNo;  text = qtn_lcam_set_port_img_add_toalbum_no;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettYes; text = qtn_lcam_set_port_img_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Text and value array for video add to album setting, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_and_value_array_vid_add_to_album_land
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettNo;  text = qtn_lcam_set_land_vid_add_toalbum_no;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettYes; text = qtn_lcam_set_land_vid_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Text and value array for video add to album setting, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_and_value_array_vid_add_to_album_port
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettNo;  text = qtn_lcam_set_port_vid_add_toalbum_no;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettYes; text = qtn_lcam_set_port_vid_add_toalbum_yes; }
    };
  }


// ---------------------------------------------------------------------------
// Option texts for photo adding to album setting, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_img_add_to_album_land
  {
  items =
    {
    LBUF { txt = qtn_lcam_set_land_img_add_toalbum_no;  },
    LBUF { txt = qtn_lcam_set_land_img_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Option texts for photo adding to album setting, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_img_add_to_album_port
  {
  items =
    {
    LBUF { txt = qtn_lcam_set_port_img_add_toalbum_no;  },
    LBUF { txt = qtn_lcam_set_port_img_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Option texts for video adding to album setting, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_vid_add_to_album_land
  {
  items =
    {
    LBUF { txt = qtn_lcam_set_land_vid_add_toalbum_no;  },
    LBUF { txt = qtn_lcam_set_land_vid_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Option texts for video adding to album setting, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_vid_add_to_album_port
  {
  items =
    {
    LBUF { txt = qtn_lcam_set_port_vid_add_toalbum_no;  },
    LBUF { txt = qtn_lcam_set_port_vid_add_toalbum_yes; }
    };
  }

// ---------------------------------------------------------------------------
// Video stabilisation setting texts and values
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_vid_stable
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_land_vidstab_on;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_land_vidstab_off; }
    };
  }

// ---------------------------------------------------------------------------
// Image rotation setting texts and values
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_img_rotate
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_land_rotate_img_on;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_land_rotate_img_off; }
    };
  }


// ---------------------------------------------------------------------------
// Video post capture showing setting values and texts, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_vid_showcap_land
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_land_showcap_vid_on;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_land_showcap_vid_off; }
    };
  }

// ---------------------------------------------------------------------------
// Video post capture showing setting values and texts, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_vid_showcap_port
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_port_showcap_vid_on;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_port_showcap_vid_off; }
    };
  }

// ---------------------------------------------------------------------------
// Photo post capture showing setting values and texts, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_img_showcap_land
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_land_showcap_img_on;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_land_showcap_img_off; }
    };
  }

// ---------------------------------------------------------------------------
// Photo post capture showing setting values and texts, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_img_showcap_port
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_port_showcap_img_on;  },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_port_showcap_img_off; }
    };
  }



//----------------------------------------------------
//
//    r_cam_on_mute_text_array
//    Defines text for on_mute options.
//
//----------------------------------------------------
//
/*
RESOURCE ARRAY r_cam_on_mute_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_on;        },
        AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_audio_off; }
        };
    }
*/

// ---------------------------------------------------------------------------
// Texts array for audio mute setting on video settings, landscape
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_audiomute_land
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_land_audio_vid_on; },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_audio_off;         }
    };
  }

// ---------------------------------------------------------------------------
// Texts array for continuous autofocus setting on video settings
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_continuous_af
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_sett_attr_cont_af_on; },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_sett_attr_cont_af_off;}
    };
  } 

// ---------------------------------------------------------------------------
// Texts array for audio mute setting on video settings, portrait
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_cam_text_array_audiomute_port
  {
  items =
    {
    AVKON_ENUMERATED_TEXT { value = ECamSettOn;  text = qtn_lcam_set_port_audio_vid_on; },
    AVKON_ENUMERATED_TEXT { value = ECamSettOff; text = qtn_lcam_set_audio_off;         }
    };
  }


//----------------------------------------------------
//
//    r_cam_zoom_text_array
//    Defines text for digital/extended zoom options.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_zoom_text_array
    {
    items =
        {
// Products with optical zoom and paused extended zoom have
//   [Digital zoom]
//     Off, On (paused), On (continuous),
//     Extended on (paused), Extended on (continuous)
//
// Products with optical zoom and on/off extended zoom have
//   [Extended digital zoom]
//     Off, On
//
// Products with *no* optical zoom but paused extended zoom have
//   [Extended digital zoom]
//     Off, On (paused), On (continuous)
//
// Products with *no* optical zoom and on/off extended zoom have
//   [Extended digital zoom]
//     Off, On (continuous)
//
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettDigZoomNormalCont;
            text  = qtn_lcam_ex_set_off;        // "Off"
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettDigZoomExtendPause;
            text  = qtn_lcam_ex_set_onpause;       // "On (paused)"
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettDigZoomExtendCont;
            text  = qtn_lcam_ex_set_oncont;        // "On (continuous)"
            }
        };
    }



//----------------------------------------------------
//
//    r_cam_capture_tone_text_and_value_array
//    Defines text for list of capture-tones.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_tone_text_and_value_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettTone1;
            text = qtn_lcam_set_camera_1;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettTone2;
            text = qtn_lcam_set_camera_2;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettTone3;
            text = qtn_lcam_set_camera_3;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamSettTone4;
            text = qtn_lcam_set_camera_4;
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_clip_length_text_array
//    Defines text for video clip length options.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_video_clip_length_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoClipMax;    // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_video_long;   // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoClipShort; // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_video_short;             // Text visible in the UI
            }
        };
    }


//----------------------------------------------------
//
//    r_cam_video_file_type_text_array
//    Defines text for video clip length options.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_video_file_type_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoMpeg4;    // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_type_normal;   // Text visible in the UI
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoH263; // Refers to id in
                                           // r_cam_image_resolution_array.
            text = qtn_lcam_set_type_mobile;             // Text visible in the UI
            }
        };
    }


//----------------------------------------------------
//
//    r_cam_front_camera_video_quality_text_array
//    Defines options for settings/video quality.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_front_camera_video_quality_text_array
    {
    items =
        {
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualityNormal;
            text = qtn_lcam_set_type_normal;
            },
        AVKON_ENUMERATED_TEXT
            {
            value = ECamVideoQualitySharing;
            text = qtn_lcam_set_type_sharing;
            }

        // Add new resolutions here if necessary
        };
    }


// ---------------------------------------------------
//
//    r_cam_restore_settings_note
//    Restore camera settings confirmation note
//
// ---------------------------------------------------
//
RESOURCE DIALOG r_cam_restore_settings_note
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;

    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationQueryLayout;
                label = "";
                };
            }
        };
    }


//-----------------------------------------------------------------------------
//
//    r_cam_restore_settings_note_text
//    Delete confirmation query text.
//
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_cam_restore_settings_note_text
    {
    buf = qtn_lcam_restore_query;
    }


//--------------------------------------------------
//
//    r_cam_off_on_loc_text_list
//    Defines text for on-off options.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_off_on_loc_text_list
    {
    items=
        {
        LOCATION_SETTING_LIST_ITEM
            {
            item_text = qtn_lcam_location_set_off;
            setting_value_id = ECamLocationOff;
            },
        LOCATION_SETTING_LIST_ITEM
            {
            item_text = qtn_lcam_location_set_on;
            setting_value_id = ECamLocationOn;
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_off_on_loc_text_list_summary
//    Defines text for on-off options.
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_off_on_loc_text_list_summary
	{
    items =
        {
        CAM_LOCATION_SELECT_SUMMARY
            {
            setting_value_id = ECamLocationOff;
            summary_icon = -1;
            summary_description_text = qtn_lcam_descr_location_on; 
            },
        CAM_LOCATION_SELECT_SUMMARY
            {
            setting_value_id = ECamLocationOn;
            summary_icon = -1;
            summary_description_text = qtn_lcam_descr_location_on;
            }
        };
    }


// The following layouts are used with location setting selection
RESOURCE CAM_LOCATION_SELECT_SUMMARY_LAYOUT r_cam_location_setup_list_summary_layout
    {
    summary_rect =
        {
        AVKON_LAYOUT_RECT
            {
            C = 215;
            l = KCamLocationSummaryRectLeftX;
            t = KCamLocationSummaryRectTop;
            W = KCamLocationSummaryRectWidth;
            H = KCamLocationSummaryRectHeight;
            }
        };
    summary_inner_rect =
        {
        AVKON_LAYOUT_RECT
            {
            l = KCamLocationSummaryInnerRectLeftX;
            t = KCamLocationSummaryInnerRectTop;
            W = KCamLocationSummaryInnerRectWidth;
            H = KCamLocationSummaryInnerRectHeight;
            }
        };
    summary_icon =
        {
        AVKON_LAYOUT_RECT
            {
            l = KCamLocationSummaryIconLeftX;
            t = KCamLocationSummaryIconTop;
            W = KCamLocationSummaryIconWidth;
            H = KCamLocationSummaryIconHeight;
            }
        };
    summary_description =
        {
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline1;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline2;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline3;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline4;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline5;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline6;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline7;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline8;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline9;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline10;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            }
        };
    }

RESOURCE AVKON_LAYOUT_RECT r_cam_location_setup_list_listbox_layout
    {
    l = KCamLocationListboxLeftX;
    t = KCamLocationListboxTop;
    W = KCamLocationListboxWidth;
    H = KCamLocationListboxHeight;
    }



// The following layouts are used with location setting selection apac
RESOURCE CAM_LOCATION_SELECT_SUMMARY_LAYOUT r_cam_location_setup_list_summary_layout_apac
    {
    summary_rect =
        {
        AVKON_LAYOUT_RECT
            {
            C = 215;
            l = KCamLocationSummaryRectLeftX;
            t = KCamLocationSummaryRectTop;
            W = KCamLocationSummaryRectWidth;
            H = KCamLocationSummaryRectHeight;
            }
        };
    summary_inner_rect =
        {
        AVKON_LAYOUT_RECT
            {
            l = KCamLocationSummaryInnerRectLeftX;
            t = KCamLocationSummaryInnerRectTop;
            W = KCamLocationSummaryInnerRectWidth;
            H = KCamLocationSummaryInnerRectHeight;
            }
        };
    summary_icon =
        {
        AVKON_LAYOUT_RECT
            {
            l = KCamLocationSummaryIconLeftX;
            t = KCamLocationSummaryIconTop;
            W = KCamLocationSummaryIconWidth;
            H = KCamLocationSummaryIconHeight;
            }
        };
    summary_description =
        {
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline1;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline2;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline3;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline4;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline5;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline6;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline7;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline8;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline9;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            l = KCamLocationSummaryDescrLeftX;
            r = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline10;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignLeft;
            }
        };
    }

RESOURCE AVKON_LAYOUT_RECT r_cam_location_setup_list_listbox_layout_apac
    {
    l = KCamLocationListboxLeftX;
    t = KCamLocationListboxTop;
    W = KCamLocationListboxWidth;
    H = KCamLocationListboxHeight;
    }




// The following layouts are used with location setting selection ah
RESOURCE CAM_LOCATION_SELECT_SUMMARY_LAYOUT r_cam_location_setup_list_summary_layout_ah
    {
    summary_rect =
        {
        AVKON_LAYOUT_RECT
            {
            C = 215;
            r = KCamLocationSummaryRectLeftX;
            t = KCamLocationSummaryRectTop;
            W = KCamLocationSummaryRectWidth;
            H = KCamLocationSummaryRectHeight;
            }
        };
    summary_inner_rect =
        {
        AVKON_LAYOUT_RECT
            {
            r = KCamLocationSummaryInnerRectLeftX;
            t = KCamLocationSummaryInnerRectTop;
            W = KCamLocationSummaryInnerRectWidth;
            H = KCamLocationSummaryInnerRectHeight;
            }
        };
    summary_icon =
        {
        AVKON_LAYOUT_RECT
            {
            r = KCamLocationSummaryIconLeftX;
            t = KCamLocationSummaryIconTop;
            W = KCamLocationSummaryIconWidth;
            H = KCamLocationSummaryIconHeight;
            }
        };
    summary_description =
        {
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline1;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline2;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline3;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline4;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline5;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline6;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline7;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline8;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline9;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            },
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontSecondaryFont;
            C = KCamLocationSummaryDescrFontColor;
            r = KCamLocationSummaryDescrLeftX;
            l = KCamLocationSummaryDescrRightX;
            B = KCamLocationSummaryTitleBaseline10;
            W = KCamLocationSummaryDescrWidth;
            J = ELayoutAlignRight;
            }
        };
    }

RESOURCE AVKON_LAYOUT_RECT r_cam_location_setup_list_listbox_layout_ah
    {
    //l = KCamLocationListboxLeftX;
    r = KCamLocationListboxLeftX;
    t = KCamLocationListboxTop;
    W = KCamLocationListboxWidth;
    H = KCamLocationListboxHeight;
    }


// ----------------------------------------------------------------------------
//    r_cam_video_setting_slider_resolution_icon_top
//     video slider setting resolution indicator top icon
// ----------------------------------------------------------------------------
RESOURCE AVKON_LAYOUT_RECT r_cam_video_setting_slider_resolution_icon_top
    {
    l = 9; t = 10; W = 31; H = 16;
    }

// ----------------------------------------------------------------------------
//    r_cam_video_setting_slider_resolution_icon_bottom
//    video slider setting resolution indicator bottom icon
// ----------------------------------------------------------------------------
RESOURCE AVKON_LAYOUT_RECT r_cam_video_setting_slider_resolution_icon_bottom
    {
    l = 9; t = 166; W = 31; H = 16;
    }

// ----------------------------------------------------------------------------
//    r_cam_image_setting_slider_resolution_icon_top
//    Image setting slider resolution top icon
// ----------------------------------------------------------------------------
RESOURCE AVKON_LAYOUT_RECT r_cam_image_setting_slider_resolution_icon_top
    {
    l = 6; t = 10; W = 27; H = 14;
    }


// ----------------------------------------------------------------------------
//    r_cam_image_setting_slider_resolution_icon_bottom
//    Image setting slider resolution bottom icon
// ----------------------------------------------------------------------------
RESOURCE AVKON_LAYOUT_RECT r_cam_image_setting_slider_resolution_icon_bottom
    {
    l = 6; t = 166; W = 27; H = 14;
    }

//----------------------------------------------------
//
//    r_cam_postcapture_addtoalbum_setting_page
//    Add to album setting items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_addtoalbum_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_lcam_set_land_img_add_toalbum_yes;
            },
        LBUF
            {
            txt = qtn_lcam_set_land_img_add_toalbum_no;
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_postcapture_addtoalbum_setting_page
//    Add to album setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_cam_addtoalbum_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_lcam_sett_attr_add_toalbum;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }

// -----------------------------------------------------------------------------
//
// r_setting_listbox
// Common listbox editor resource for setting pages with multiple selection.
//
// -----------------------------------------------------------------------------
//
RESOURCE LISTBOX r_setting_listbox
    {
    flags = EEikListBoxMultipleSelection;
    }

//----------------------------------------------------
//
//    r_lcam_sett_mem_device
//
//----------------------------------------------------
//
RESOURCE TBUF r_lcam_sett_mem_device
    {
    buf = qtn_lcam_sett_mem_device;
    }

//----------------------------------------------------
//
//    r_lcam_sett_mem_mass_storage
//
//----------------------------------------------------
//
RESOURCE TBUF r_lcam_sett_mem_mass_storage
    {
    buf = qtn_lcam_sett_mem_mass_storage;
    }

//----------------------------------------------------
//
//    r_lcam_sett_mem_memory_card
//
//----------------------------------------------------
//
RESOURCE TBUF r_lcam_sett_mem_memory_card
    {
    buf = qtn_lcam_sett_mem_memory_card;
    }
