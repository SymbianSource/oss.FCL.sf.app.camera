/*
* Copyright (c)  Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for the Camera Application*
*/


//#ifndef CAMERAAPP_PLUGIN_BUILD

#define KSetupStandardFontColour        215
#define KSetupListboxIconLeft           0
#define KSetupListboxIconRightAH        KSetupListboxIconLeft
#define KSetupListboxIconTop            2
#define KSetupListboxIconWidth          25  
#define KSetupListboxIconHeight         20
#define KSetupListboxRadioLeft          27 -10
#define KSetupListboxRadioRightAH       KSetupListboxRadioLeft
#define KSetupListboxRadioTop           2
#define KSetupListboxRadioWidth         32
#define KSetupListboxRadioHeight        20
#define KSetupListboxTextLeft           52 - 10
#define KSetupSceneListboxTextLeft      35
#define KSetupListboxTextRight          0
#define KSetupListboxTextLeftAH         KSetupListboxTextRight
#define KSetupListboxTextRightAH        KSetupListboxTextLeft
#define KSetupSceneListboxTextRightAH   KSetupSceneListboxTextLeft
#define KSetupListboxTextBottom         16
#define KSetupListboxTextBottomAPAC     19
#define KSetupListboxTextWidth          170 
#define KSetupContainerTitleLeft        170
#define KSetupContainerTitleRight       5
#define KSetupContainerTitleBottom      30
#define KSetupContainerTitleBottomAPAC  26
#define KSetupContainerTitleWidth       165
#define KSetupControlX                  167 
#define KSetupControlXAH                4
#define KSetupControlY                  38
#define KSetupViewFinderLeft            4
#define KSetupViewFinderRightAH         8
#define KSetupViewFinderTop             30
#define KSetupViewFinderWidth           160
#define KSetupViewFinderHeight          140
#define KSetupMenuLeft                  16
#define KSetupMenuTop                   30
#define KSetupMenuTopAPAC               28
#define KSetupMenuWidth                 288
#define KSetupMenuHeight                190
#define KSetupMenuHeightAPAC            192
#define KSetupMenuTextLeft              12
#define KSetupMenuTextLeftAH            72
#define KSetupMenuTextRight             70 
#define KSetupMenuTextRightAH           12 
#define KSetupMenuTextBottom            28
#define KSetupMenuTextBottomAPAC        30
#define KSetupMenuTextWidth             206
#define KSetupMenuIconLeft              232
#define KSetupMenuIconLeftAH            16
#define KSetupMenuIconTop               4
#define KSetupMenuIconWidth             56
#define KSetupMenuIconHeight            30
#define KSetupMenuIconTextRight         16
#define KSetupMenuIconTextBottom        24
#define KSetupMenuIconTextBottomAPAC    26
#define KSetupMenuHighlightOffset       5
#define KSetupMenuListItemHeight        32
#define KSetupMenuSliderShaftLeft       250
#define KSetupMenuSliderShaftLeftAH     46
#define KSetupMenuSliderShaftTop        44
#define KSetupMenuSliderShaftWidth      15
#define KSetupMenuSliderShaftHeight     99
#define KSetupMenuSliderThumbWidth      15
#define KSetupMenuSliderThumbHeight     8
#define KSetupMenuSliderIconLeft        220
#define KSetupMenuSliderIconLeftAH      56
#define KSetupMenuSliderMiddleIconTop   90
#define KSetupMenuSliderIconWidth       20
#define KSetupMenuSliderIconHeight      20
#define KSetupMenuSliderLegendRight     0
#define KSetupMenuSliderLegendWidth     180
#define KSetupMenuSliderTopLegendBottom 50
#define KSetupMenuSliderBottomLegendBottom 156
#define KSetupMenuEVLegendAHOffset      (-195)
#define KSetupMenuEVLegendRight         73
#define KSetupMenuEVLegendRightAH       236
#define KSetupMenuEVLegendWidth         48
#define KSetupMenuEVPlus2LegendBottom   50
#define KSetupMenuEVPlus1LegendBottom   74
#define KSetupMenuEV0LegendBottom       98
#define KSetupMenuEVMinus1LegendBottom  122
#define KSetupMenuEVMinus2LegendBottom  146

	#define KSetupListboxIconWidthLoc          0  
	#define KSetupListboxRadioLeftLoc         0
	#define KSetupListboxRadioRightLocAH       KSetupListboxRadioLeftLoc
	#define KSetupListboxTextLeftLoc           27//=>38 with the listbox location
	#define KSetupListboxTextRightLocAH        KSetupListboxTextLeftLoc
	#define KSetupListboxTextRightLoc          0//168//0//155
	#define KSetupListboxTextLeftLocAH         KSetupListboxTextRightLoc
	#define KSetupListboxTextWidthLoc          126//170//126 

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_icon_rect
//    Layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capsetup_listbox_icon_rect
    {
    C = ELayoutEmpty;
    l = KSetupListboxIconLeft; 
    t = KSetupListboxIconTop; 
    r = ELayoutEmpty; 
    b = ELayoutEmpty; 
    W = KSetupListboxIconWidth; 
    H = KSetupListboxIconHeight;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_icon_rect_ah
//    Arabic/Hebrew layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capsetup_listbox_icon_rect_ah
    {
    C = ELayoutEmpty;
    r = KSetupListboxIconRightAH;
    t = KSetupListboxIconTop;
    b = ELayoutEmpty; 
    W = KSetupListboxIconWidth; 
    H = KSetupListboxIconHeight;    
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_mode_listbox_icon_rect_ah
//    Arabic/Hebrew layout rect for icons in mode setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capsetup_mode_listbox_icon_rect_ah
    {
    C = ELayoutEmpty;
    r = KSetupListboxIconRightAH + 6;
    t = KSetupListboxIconTop;
    b = ELayoutEmpty; 
    W = KSetupListboxIconWidth; 
    H = KSetupListboxIconHeight;    
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_radiobut_rect
//    Layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capsetup_listbox_radiobut_rect
    {
    C = ELayoutEmpty;
    l = KSetupListboxRadioLeft; 
    t = KSetupListboxRadioTop;
    r = ELayoutEmpty; 
    b = ELayoutEmpty;
    W = KSetupListboxRadioWidth; 
    H = KSetupListboxRadioHeight;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_radiobut_rect_ah
//    Arabic/Hebrew layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capsetup_listbox_radiobut_rect_ah
    {
    C = ELayoutEmpty;
    l = ELayoutEmpty; 
    t = KSetupListboxRadioTop;
    r = KSetupListboxRadioRightAH; 
    b = ELayoutEmpty;
    W = KSetupListboxRadioWidth; 
    H = KSetupListboxRadioHeight;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_text_rect
//    Layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capsetup_listbox_text_rect
    {
    font = EAknLogicalFontSecondaryFont; 
    C=KSetupStandardFontColour; 
    l=KSetupListboxTextLeft; 
    r=KSetupListboxTextRight; 
    B=KSetupListboxTextBottom; 
    W=KSetupListboxTextWidth; 
    J=ELayoutAlignLeft;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_text_rect_apac
//    APAC layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capsetup_listbox_text_rect_apac
    {
    font = EAknLogicalFontSecondaryFont; 
    C=KSetupStandardFontColour; 
    l=KSetupListboxTextLeft; 
    r=KSetupListboxTextRight; 
    B=KSetupListboxTextBottomAPAC; 
    W=KSetupListboxTextWidth; 
    J=ELayoutAlignLeft;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_listbox_text_rect_ah
//    Arabic/Hebrew layout rect for icons in capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capsetup_listbox_text_rect_ah
    {
    font = EAknLogicalFontSecondaryFont; 
    C=KSetupStandardFontColour; 
    l=KSetupListboxTextLeftAH; 
    r=KSetupListboxTextRightAH; 
    B=KSetupListboxTextBottom; 
    W=KSetupListboxTextWidth; 
    J=ELayoutAlignRight;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_scene_listbox_text_rect
//    Layout rect for text in scene capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capsetup_scene_listbox_text_rect
    {
    font = EAknLogicalFontSecondaryFont; 
    C=KSetupStandardFontColour; 
    l=KSetupSceneListboxTextLeft; 
    r=KSetupListboxTextRight; 
    B=KSetupListboxTextBottom; 
    W=KSetupListboxTextWidth; 
    J=ELayoutAlignLeft;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_scene_listbox_text_rect_apac
//    APAC layout rect for text in scene capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capsetup_scene_listbox_text_rect_apac
    {
    font = EAknLogicalFontSecondaryFont; 
    C=KSetupStandardFontColour; 
    l=KSetupSceneListboxTextLeft; 
    r=KSetupListboxTextRight; 
    B=KSetupListboxTextBottomAPAC; 
    W=KSetupListboxTextWidth; 
    J=ELayoutAlignLeft;
    }

// ---------------------------------------------------
//
//    r_cam_capsetup_scene_listbox_text_rect_ah
//    Arabic/Hebrew layout rect for text in scene capture setup list-box.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capsetup_scene_listbox_text_rect_ah
    {
    font = EAknLogicalFontSecondaryFont; 
    C=KSetupStandardFontColour; 
    l=KSetupListboxTextLeftAH; 
    r=KSetupSceneListboxTextRightAH; 
    B=KSetupListboxTextBottom; 
    W=KSetupListboxTextWidth; 
    J=ELayoutAlignRight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_cont_titletext_layout_apac
//    APAC layout for capture setup container title text
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capture_setup_cont_titletext_layout_apac
    {
    font = EAknLogicalFontPrimarySmallFont; 
    C=KSetupStandardFontColour; 
    l=KSetupContainerTitleLeft; 
    r=KSetupContainerTitleRight; 
    B=KSetupContainerTitleBottomAPAC; 
    W=KSetupContainerTitleWidth; 
    J=ELayoutAlignCenter;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_cont_titletext_layout_ah
//    Arabic/Hebrew layout for capture setup container title text
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capture_setup_cont_titletext_layout_ah
    {
    font = EAknLogicalFontPrimarySmallFont; 
    C=KSetupStandardFontColour;
    r=KSetupContainerTitleLeft;
    l=KSetupContainerTitleRight;
    B=KSetupContainerTitleBottom; 
    W=KSetupContainerTitleWidth; 
    J=ELayoutAlignCenter;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_cont_titletext_layout
//    Layout for capture setup container title text
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capture_setup_cont_titletext_layout
    {
    font = EAknLogicalFontPrimarySmallFont; 
    C=KSetupStandardFontColour; 
    l=KSetupContainerTitleLeft; 
    r=KSetupContainerTitleRight; 
    B=KSetupContainerTitleBottom; 
    W=KSetupContainerTitleWidth; 
    J=ELayoutAlignCenter;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_cont_novf_titletext_layout
//    Layout for capture setup container title text (with no viewfiner)
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capture_setup_cont_novf_titletext_layout
    {
    font = EAknLogicalFontPrimarySmallFont; 
    C=KSetupStandardFontColour; 
    l=0; 
    r=0; 
    B=KSetupContainerTitleBottom; 
    J=ELayoutAlignCenter;
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_cont_novf_titletext_layout_ah
//    APAC Layout for capture setup container title text (with no viewfiner)
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capture_setup_cont_novf_titletext_layout_ah
    {
    font = EAknLogicalFontPrimarySmallFont; 
    C=KSetupStandardFontColour; 
    l=0; 
    r=0; 
    B=KSetupContainerTitleBottomAPAC; 
    J=ELayoutAlignCenter;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_cont_novf_titletext_layout_apac
//    APAC Layout for capture setup container title text (with no viewfiner)
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_capture_setup_cont_novf_titletext_layout_apac
    {
    font = EAknLogicalFontPrimarySmallFont; 
    C=KSetupStandardFontColour; 
    l=0; 
    r=0; 
    B=KSetupContainerTitleBottomAPAC; 
    J=ELayoutAlignCenter;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_control_position
//    Position of capture setup control when viewfinder is present
//
//----------------------------------------------------
//
RESOURCE POINT r_cam_capture_setup_control_position
    {
    x = KSetupControlX;
    y = KSetupControlY;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_control_position_ah
//    Position of capture setup control when viewfinder is present for Arabic/Hebrew
//
//----------------------------------------------------
//
RESOURCE POINT r_cam_capture_setup_control_position_ah
    {
    x = KSetupControlXAH;
    y = KSetupControlY;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_contvf_rect
//    Layout for capture setup container cropped viewfinder rect
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_contvf_rect 
    { 
    l = KSetupViewFinderLeft;  
    t = KSetupViewFinderTop;  
    W = KSetupViewFinderWidth; 
    H = KSetupViewFinderHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_contvf_rect_ah
//    Arabic/Hebrew layout for capture setup container cropped viewfinder rect
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_contvf_rect_ah
    { 
    r = KSetupViewFinderLeft;
    t = KSetupViewFinderTop;  
    W = KSetupViewFinderWidth; 
    H = KSetupViewFinderHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_list_photo_imagesharpness
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_photo_imagesharpness
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_hard;
            setting_value_id = ECamImageSharpnessHard;
            bitmap_id = EMbmCameraappQgn_indi_cam4_sharpness_hard;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_normal;
            setting_value_id = ECamImageSharpnessNorm;
            bitmap_id = EMbmCameraappQgn_indi_cam4_sharpness_normal;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_soft;
            setting_value_id = ECamImageSharpnessSoft;
            bitmap_id = EMbmCameraappQgn_indi_cam4_sharpness_soft;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_list_still_whitebalance
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_still_whitebalance
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_awb;
            setting_value_id = ECamWhiteBalanceAWB;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_auto;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_day;
            setting_value_id = ECamWhiteBalanceDaylight;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_sunny;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_cloud;
            setting_value_id = ECamWhiteBalanceCloudy;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_cloudy; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_tung;
            setting_value_id = ECamWhiteBalanceTungsten;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_tungsten;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_flu;
            setting_value_id = ECamWhiteBalanceFlourescent;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_fluorecent;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_list_still_coloureffect
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_still_coloureffect
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_col;
            setting_value_id = ECamColourFilterColour;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_normal; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_sep;
            setting_value_id = ECamColourFilterSepia;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_sepia; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_bw;
            setting_value_id = ECamColourFilterBlackAndWhite;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_bw;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_viv;
            setting_value_id = ECamColourFilterVivid;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_vivid;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_neg;
            setting_value_id = ECamColourFilterNegative;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_negative;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_list_still_flash
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_still_flash
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_set_auto;
            setting_value_id = ECamFlashAuto;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_autoflash;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_set_redeye;
            setting_value_id = ECamFlashAntiRedEye;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_antired; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_set_force;
            setting_value_id = ECamFlashForced;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_flash_on; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            // item_text = qtn_lcam_set_off;
            item_text        = qtn_lcam_set_flash_off;
            setting_value_id = ECamFlashOff;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_flash_off; 
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_list_still_light_sensitivity
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_still_light_sensitivity
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isoauto;
            setting_value_id = ECamLightSensitivityAuto;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_auto; 
            },
            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isolow;
            setting_value_id = ECamLightSensitivityLow;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low; 
            },

        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isomedium;
            setting_value_id = ECamLightSensitivityMed;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medium;
            },
            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isohigh;
            setting_value_id = ECamLightSensitivityHigh;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_high; 
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_list_still_extended_light_sensitivity
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_still_extended_light_sensitivity
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isoauto;
            setting_value_id = ECamLightSensitivityAuto;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_auto; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isolow;
            setting_value_id = ECamLightSensitivityLow;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low; 
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_low_medium;
            setting_value_id = ECamLightSensitivityLowMed;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low;
            },            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isomedium;
            setting_value_id = ECamLightSensitivityMed;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medium;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_medium_high;
            setting_value_id = ECamLightSensitivityMedHigh;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medhigh;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_isohigh;
            setting_value_id = ECamLightSensitivityHigh;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_high; 
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_list_video_whitebalance
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_video_whitebalance
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_awb;
            setting_value_id = ECamWhiteBalanceAWB;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_auto;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_day;
            setting_value_id = ECamWhiteBalanceDaylight;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_sunny;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_cloud;
            setting_value_id = ECamWhiteBalanceCloudy;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_cloudy;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_tung;
            setting_value_id = ECamWhiteBalanceTungsten;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_tungsten;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_flu;
            setting_value_id = ECamWhiteBalanceFlourescent;
            bitmap_id = EMbmCameraappQgn_indi_cam4_wb_fluorecent;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_list_video_coloureffect
//    Array of list items for capture setup radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_video_coloureffect
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_col;
            setting_value_id = ECamColourFilterColour;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_normal;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_sep;
            setting_value_id = ECamColourFilterSepia;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_sepia;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_bw;
            setting_value_id = ECamColourFilterBlackAndWhite;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_bw;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_viv;
            setting_value_id = ECamColourFilterVivid;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_vivid;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_neg;
            setting_value_id = ECamColourFilterNegative;
            bitmap_id = EMbmCameraappQgn_indi_cam4_colour_negative;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_listbox_width
//    Width of capture set-up list-box
//
//----------------------------------------------------
//
RESOURCE INT16 r_cam_capture_setup_listbox_width
    {
    value = 151;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_listbox_width_novf
//    Width of capture set-up list-box with no viewfinder
//
//----------------------------------------------------
//
RESOURCE INT16 r_cam_capture_setup_listbox_width_novf
    {
    value = 180;
    }
    

//----------------------------------------------------
//   
//    r_cam_capture_setup_listbox_item_height
//    Width of capture set-up list-box
//
//----------------------------------------------------
//
RESOURCE INT16 r_cam_capture_setup_listbox_item_height
    {
    value = 26;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_data
//    Lists all the contents and layout data for the photo capture setup menu.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_photo_data
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = KSetupMenuLeft; 
        t = KSetupMenuTop;  
        W = KSetupMenuWidth; 
        H = KSetupMenuHeight; 
        };

    contents = 
        {

        };
    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont;
            C=KSetupStandardFontColour;
            l=KSetupMenuTextLeft;
            r=KSetupMenuTextRight;
            B=KSetupMenuTextBottom;
            W=KSetupMenuTextWidth;
            J=ELayoutAlignLeft;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = KSetupMenuIconLeft;
            t = KSetupMenuIconTop;  
            W = KSetupMenuIconWidth; 
            H = KSetupMenuIconHeight; 
            };

    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont; 
        C=KSetupStandardFontColour; 
        l=KSetupMenuIconLeft; 
        r=KSetupMenuIconTextRight; 
        B=KSetupMenuIconTextBottom; 
        W=KSetupMenuIconWidth; 
        J=ELayoutAlignRight;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = KSetupMenuHighlightOffset;

    // The height for a list item
    list_item_height = KSetupMenuListItemHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_data_apac
//    Lists all the contents and APAC layout data for the photo capture setup menu.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_photo_data_apac
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = KSetupMenuLeft;
        t = KSetupMenuTopAPAC;  
        W = KSetupMenuWidth; 
        H = KSetupMenuHeightAPAC; 
        };

    contents = 
        {

        };
    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont;
            C=KSetupStandardFontColour;
            l=KSetupMenuTextLeft; 
            r=KSetupMenuTextRight; 
            B=KSetupMenuTextBottomAPAC; 
            W=KSetupMenuTextWidth; 
            J=ELayoutAlignLeft;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = KSetupMenuIconLeft;
            t = KSetupMenuIconTop;  
            W = KSetupMenuIconWidth; 
            H = KSetupMenuIconHeight; 
            };

    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont; 
        C=KSetupStandardFontColour; 
        l=KSetupMenuIconLeft; 
        r=KSetupMenuIconTextRight; 
        B=KSetupMenuIconTextBottomAPAC; 
        W=KSetupMenuIconWidth; 
        J=ELayoutAlignRight;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = KSetupMenuHighlightOffset;

    // The height for a list item
    list_item_height = KSetupMenuListItemHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_data_ah
//    Lists all the contents and Arabic/Hebrew layout data for the photo capture setup menu.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_photo_data_ah
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = KSetupMenuLeft; 
        t = KSetupMenuTop;  
        W = KSetupMenuWidth; 
        H = KSetupMenuHeight; 
        };

    contents = 
        {

        };
    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont;
            C=KSetupStandardFontColour;
            l=KSetupMenuTextLeftAH;
            r=KSetupMenuTextRightAH;
            B=KSetupMenuTextBottom;
            W=KSetupMenuTextWidth;
            J=ELayoutAlignRight;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = KSetupMenuIconLeftAH;
            t = KSetupMenuIconTop;  
            W = KSetupMenuIconWidth; 
            H = KSetupMenuIconHeight; 
            };

    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont;
        C=KSetupStandardFontColour; 
        l=KSetupMenuIconLeftAH; 
        r=KSetupMenuIconTextRight; 
        B=KSetupMenuIconTextBottom; 
        W=KSetupMenuIconWidth; 
        J=ELayoutAlignLeft;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = KSetupMenuHighlightOffset;

    // The height for a list item
    list_item_height = KSetupMenuListItemHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_scene_array
//    Mapping of photo scene setting values
//    to actual bitmaps. These must match the order of
//    TCamSceneId in CamSettings.hrh
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_scene_array
    {
    id = ECamSettingItemDynamicPhotoScene;
    text = qtn_lcam_tt_scene;
    capture_setup_menu_item =
        {    
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
           {
            id     = ECamSceneNight;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_night;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_night_s;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneMacro;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_closeup;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_macro_s;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamScenePortrait;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_portrait;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_port_s;
            },  

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneAuto;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_auto;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_auto_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneScenery;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_landscape;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_land_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneSports;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_sport;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_sport_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            // Normal is video auto scene.
            // Therefore "Auto" icon.
            id = ECamSceneNormal;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_auto;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_norm_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneUser;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_userscene;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_user_s;
            },

  /*      CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneNightScenery;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_sce_nightland;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_nightland_s;
            }, */

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneNightPortrait;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_portrait_night;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_nightport_s;
  /*          },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneCandlelight;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_sce_candle;
   */         //bitmap = EMbmCameraappQgn_ico_lcam_sce_candle_s;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_flash_array
//    Mapping of photo scene setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_flash_array
    {
    id = ECamSettingItemDynamicPhotoFlash;
    text = qtn_lcam_tt_flash;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamFlashAuto;
            bitmap = EMbmCameraappQgn_indi_cam4_autoflash;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamFlashForced;
            bitmap = EMbmCameraappQgn_indi_cam4_flash_on;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamFlashAntiRedEye;
            bitmap = EMbmCameraappQgn_indi_cam4_antired;
            },            
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamFlashOff;
            bitmap = EMbmCameraappQgn_indi_cam4_flash_off;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_flash_array
//    Mapping of video flash setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_flash_array
    {
    id = ECamSettingItemDynamicVideoFlash;
    text = qtn_lcam_tt_flashoff;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamFlashForced;
            bitmap = EMbmCameraappQgn_indi_vid4_light_on;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamFlashOff;
            bitmap = EMbmCameraappQgn_indi_vid4_light_off;
            }
        };
    }

// ---------------------------------------------------------
// r_cam_active_palette_video_flash_tooltip_array
//
// Array for video flash active palette item tooltips.
// ---------------------------------------------------------
//
RESOURCE ARRAY r_cam_active_palette_video_flash_tooltip_array
  {
  items =
    {
    CAM_AP_TT_ITEM 
        {
        text = qtn_lcam_tt_videoflash; 
        },
    CAM_AP_TT_ITEM 
        {
        text = qtn_lcam_tt_flashoff; }
    };
  }    


//----------------------------------------------------
//   
//    r_cam_active_palette_precapture_facetracking_array
//    Mapping of facetracking setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_precapture_facetracking_array
    {
    id = ECamSettingItemFaceTracking;
    text = qtn_lcam_tt_facedet_off_v2;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamSettOn;
            bitmap = EMbmCameraappQgn_indi_cam4_tb_facedet;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamSettOff;
            bitmap = EMbmCameraappQgn_indi_cam4_tb_facedet_off;
            }
        };
    }

// ---------------------------------------------------------
// r_cam_active_palette_facetracking_tooltip_array
//
// Array for facetracking active palette item tooltips.
// ---------------------------------------------------------
//
RESOURCE ARRAY r_cam_active_palette_facetracking_tooltip_array
  {
  items =
    {
    CAM_AP_TT_ITEM 
        {
        text = qtn_lcam_tt_facedet_on_v2;
        },
    CAM_AP_TT_ITEM 
        {
        text = qtn_lcam_tt_facedet_off_v2;
        }
    };
  }
      
//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_white_balance_array
//    Mapping of white balance setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_white_balance_array
    {
    id = ECamSettingItemDynamicPhotoWhiteBalance;
    text = qtn_lcam_tt_wb;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceAWB;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_auto;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceDaylight;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_sunny;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceCloudy;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_cloudy;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceTungsten;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_tungsten;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceFlourescent;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_fluorecent;
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_exposure_array
//    Mapping of exposure setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_exposure_array
    {
    id = ECamSettingItemDynamicPhotoExposure;
    text = qtn_lcam_tt_ev;
    capture_setup_menu_item =
        {
/*        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -6;
            icontext = qtn_lcam_ev_minus2;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus2;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -5;
            icontext = qtn_lcam_ev_minus1_7;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus1_7;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -4;
            icontext = qtn_lcam_ev_minus1_3;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus1_3;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -3;
            icontext = qtn_lcam_ev_minus1;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus1;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -2;
            icontext = qtn_lcam_ev_minus0_7;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus0_7;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -1;
            icontext = qtn_lcam_ev_minus0_3;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus0_3;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 0;
            icontext = qtn_lcam_ev_0;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_0;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 1;
            icontext = qtn_lcam_ev_plus0_3;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus0_3;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 2;
            icontext = qtn_lcam_ev_plus0_7;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus0_7;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 3;
            icontext = qtn_lcam_ev_plus1;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus1;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 4;
            icontext = qtn_lcam_ev_plus1_3;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus1_3;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 5;
            icontext = qtn_lcam_ev_plus1_7;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus1_7;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 6;
            icontext = qtn_lcam_ev_plus2;
		 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus2;
            }
    */    };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_exposure_array2
//    Mapping of exposure setting values
//    to actual bitmaps. (range -2.0 to 2.0 steps of 1/2)
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_exposure_array2
    {
    id = ECamSettingItemDynamicPhotoExposure;
    text = qtn_lcam_tt_ev;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -4;
            icontext = qtn_lcam_ev_minus2;
		 	      bitmap = EMbmCameraappQgn_indi_cam4_exposure_minus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -3;
            icontext = qtn_lcam_ev_minus1_5;
      		 	bitmap = EMbmCameraappQgn_indi_cam4_exposure_minus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -2;
            icontext = qtn_lcam_ev_minus1;
		 	      bitmap = EMbmCameraappQgn_indi_cam4_exposure_minus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -1;
            icontext = qtn_lcam_ev_minus0_5;
      		 	bitmap = EMbmCameraappQgn_indi_cam4_exposure_minus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 0;
            icontext = qtn_lcam_ev_0;
      		 	bitmap = EMbmCameraappQgn_indi_cam4_exposure;
            },
            CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 1;
            icontext = qtn_lcam_ev_plus0_5;
      		 	bitmap = EMbmCameraappQgn_indi_cam4_exposure_plus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 2;
            icontext = qtn_lcam_ev_plus1;
	      	 	bitmap = EMbmCameraappQgn_indi_cam4_exposure_plus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 3;
            icontext = qtn_lcam_ev_plus1_5;
	      	 	bitmap = EMbmCameraappQgn_indi_cam4_exposure_plus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 4;
            icontext = qtn_lcam_ev_plus2;
		       	bitmap = EMbmCameraappQgn_indi_cam4_exposure_plus;
            } 
        };
    }
    
 //----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_exposure_array3
//    Mapping of exposure setting values
//    to actual bitmaps. range -2.0 to 2.0 steps of 1)
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_exposure_array3
    {
    id = ECamSettingItemDynamicPhotoExposure;
    text = qtn_lcam_tt_ev;
    capture_setup_menu_item =
        {
    /*    CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -2;
            icontext = qtn_lcam_ev_minus2;
		       	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus2;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = -1;
            icontext = qtn_lcam_ev_minus1;
	      	 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_minus1;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 0;
            icontext = qtn_lcam_ev_0;
		       	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_0;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 1;
            icontext = qtn_lcam_ev_plus1;
	      	 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus1;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 2;
            icontext = qtn_lcam_ev_plus2;
	      	 	bitmap = EMbmCameraappQgn_indi_lcam_ap_ev_plus2;
            } */
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_colourfilter_array
//    Mapping of photo colour filter setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_colourfilter_array
    {
    id = ECamSettingItemDynamicPhotoColourFilter;
    text = qtn_lcam_tt_coltone;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterColour;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_normal;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterBlackAndWhite;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_bw;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterSepia;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_sepia;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterNegative;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_negative;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterVivid;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_vivid;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_imagesharpness_array
//    Mapping of photo image sharpness setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_imagesharpness_array
    {
    id = ECamSettingItemDynamicPhotoImageSharpness;
    text = qtn_lcam_tt_sharp;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamImageSharpnessHard;
            bitmap = EMbmCameraappQgn_indi_cam4_sharpness_hard;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamImageSharpnessNorm;
            bitmap = EMbmCameraappQgn_indi_cam4_sharpness_normal;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamImageSharpnessSoft;
            bitmap = EMbmCameraappQgn_indi_cam4_sharpness_soft;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_brightness_array
//    Mapping of photo brightness setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_brightness_array
    {
    id = ECamSettingItemDynamicPhotoBrightness;
    text = qtn_lcam_tt_bright;
    capture_setup_menu_item =
        {
       CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamBrightnessNorm;
  //          bitmap = EMbmCameraappQgn_indi_lcam_ap_brightnorm;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamBrightnessPlus;
    //        bitmap = EMbmCameraappQgn_indi_lcam_ap_brightplus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamBrightnessNeg;
      //      bitmap = EMbmCameraappQgn_indi_lcam_ap_brightneg;
            } 
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_contrast_array
//    Mapping of photo contrast setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_contrast_array
    {
    id = ECamSettingItemDynamicPhotoContrast;
    text = qtn_lcam_tt_contr;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamContrastNorm;
            bitmap = EMbmCameraappQgn_indi_cam4_contrast;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamContrastPlus;
            bitmap = EMbmCameraappQgn_indi_cam4_contrast_plus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamContrastNeg;
            bitmap = EMbmCameraappQgn_indi_cam4_contrast_minus;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_photo_coloursaturation_array
//    Mapping of photo colour saturation setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_photo_coloursaturation_array
    {
    id = ECamSettingItemDynamicPhotoColourSaturation;
    text = qtn_lcam_popm_colsat;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationNorm;
    //        bitmap = EMbmCameraappQgn_indi_lcam_ap_colsatnorm;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationPlus;
      //      bitmap = EMbmCameraappQgn_indi_lcam_ap_colsatplus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationNeg;
        //    bitmap = EMbmCameraappQgn_indi_lcam_ap_colsatneg;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_light_sensitivity_array
//    Mapping of photo scene setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_light_sensitivity_array
    {
    id = ECamSettingItemDynamicPhotoLightSensitivity;
    text = qtn_lcam_tt_isosetting;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationNorm;
            bitmap = EMbmCameraappQgn_indi_cam4_iso_auto;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityLow;
            bitmap = EMbmCameraappQgn_indi_cam4_iso_low;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityMed;
            bitmap = EMbmCameraappQgn_indi_cam4_iso_medium;
            },            
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityHigh;
            bitmap = EMbmCameraappQgn_indi_cam4_iso_high;
            }
        };
    }

    
//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_data
//    Lists all the contents and layout data for the photo capture setup menu.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_video_data
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = KSetupMenuLeft; 
        t = KSetupMenuTop;  
        W = KSetupMenuWidth; 
        H = KSetupMenuHeight; 
        };

    contents = 
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_scene_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_white_balance_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_colourfilter_array;
            }
#if 0
            ,
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_brightness_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_contrast_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_coloursaturation_array;
            }
#endif           
        };

    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont;
            C=KSetupStandardFontColour;
            l=KSetupMenuTextLeft;
            r=KSetupMenuTextRight;
            B=KSetupMenuTextBottom;
            W=KSetupMenuTextWidth;
            J=ELayoutAlignLeft;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = KSetupMenuIconLeft;
            t = KSetupMenuIconTop;  
            W = KSetupMenuIconWidth; 
            H = KSetupMenuIconHeight; 
            };

    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont;
        C=KSetupStandardFontColour; 
        l=KSetupMenuIconLeft; 
        r=KSetupMenuIconTextRight; 
        B=KSetupMenuIconTextBottom; 
        W=KSetupMenuIconWidth; 
        J=ELayoutAlignRight;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = KSetupMenuHighlightOffset;

    // The height for a list item
    list_item_height = KSetupMenuListItemHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_data_apac
//    Lists all the contents and APAC layout data for the photo capture setup menu.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_video_data_apac
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = KSetupMenuLeft;
        t = KSetupMenuTopAPAC;  
        W = KSetupMenuWidth; 
        H = KSetupMenuHeightAPAC; 
        };

    contents = 
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_scene_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_white_balance_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_colourfilter_array;
            }
#if 0
          ,
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_brightness_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_contrast_array;
            }
#endif
        };

    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont;
            C=KSetupStandardFontColour;
            l=KSetupMenuTextLeft; 
            r=KSetupMenuTextRight; 
            B=KSetupMenuTextBottomAPAC; 
            W=KSetupMenuTextWidth; 
            J=ELayoutAlignLeft;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = KSetupMenuIconLeft;
            t = KSetupMenuIconTop;  
            W = KSetupMenuIconWidth; 
            H = KSetupMenuIconHeight; 
            };

    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont; 
        C=KSetupStandardFontColour; 
        l=KSetupMenuIconLeft; 
        r=KSetupMenuIconTextRight; 
        B=KSetupMenuIconTextBottomAPAC; 
        W=KSetupMenuIconWidth; 
        J=ELayoutAlignRight;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = KSetupMenuHighlightOffset;

    // The height for a list item
    list_item_height = KSetupMenuListItemHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_data_ah
//    Lists all the contents and Arabic/Hebrew layout data for the photo capture setup menu.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_video_data_ah
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = KSetupMenuLeft; 
        t = KSetupMenuTop;  
        W = KSetupMenuWidth; 
        H = KSetupMenuHeight; 
        };

    contents = 
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_scene_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_white_balance_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_colourfilter_array;
            }
#if 0
          ,
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_brightness_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_contrast_array;
            }
#endif
        };

    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont;
            C=KSetupStandardFontColour;
            l=KSetupMenuTextLeftAH;
            r=KSetupMenuTextRightAH;
            B=KSetupMenuTextBottom;
            W=KSetupMenuTextWidth;
            J=ELayoutAlignRight;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = KSetupMenuIconLeftAH;
            t = KSetupMenuIconTop;  
            W = KSetupMenuIconWidth; 
            H = KSetupMenuIconHeight; 
            };

    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont;
        C=KSetupStandardFontColour; 
        l=KSetupMenuIconLeftAH; 
        r=KSetupMenuIconTextRight; 
        B=KSetupMenuIconTextBottom; 
        W=KSetupMenuIconWidth; 
        J=ELayoutAlignLeft;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = KSetupMenuHighlightOffset;

    // The height for a list item
    list_item_height = KSetupMenuListItemHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_scene_array
//    Mapping of photo scene setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_scene_array
    {
    id = ECamSettingItemDynamicVideoScene;
    text = qtn_lcam_tt_scene;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {          
            id     = ECamSceneNight;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_night;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_night_s;
            },
    
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneMacro;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_closeup;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_macro_s;
            },
    
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamScenePortrait;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_portrait;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_port_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneAuto;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_auto;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_auto_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneScenery;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_landscape;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_land_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneSports;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_sport;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_sport_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            // Normal is video auto scene.
            // Therefore "Auto" icon.
            id     = ECamSceneNormal;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_auto;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_auto_s;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneUser;
            bitmap = EMbmCameraappQgn_indi_cam4_mode_userscene;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_user_s;
            },
            
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id     = ECamSceneLowLight;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_tungsten;
            //bitmap = EMbmCameraappQgn_ico_lcam_sce_user_s;
            }

        };
    }


//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_white_balance_array
//    Mapping of white balance setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_white_balance_array
    {
    id = ECamSettingItemDynamicVideoWhiteBalance;
    text = qtn_lcam_tt_wb;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceAWB;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_auto;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceDaylight;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_sunny;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceCloudy;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_cloudy;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceTungsten;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_tungsten;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamWhiteBalanceFlourescent;
            bitmap = EMbmCameraappQgn_indi_cam4_wb_fluorecent;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_colourfilter_array
//    Mapping of video colour filter setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_colourfilter_array
    {
    id = ECamSettingItemDynamicVideoColourFilter;
    text = qtn_lcam_tt_coltone;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterColour;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_normal;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterBlackAndWhite;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_bw;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterSepia;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_sepia;
            },

        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterNegative;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_negative;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourFilterVivid;
            bitmap = EMbmCameraappQgn_indi_cam4_colour_vivid;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_brightness_array
//    Mapping of video brightness setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_brightness_array
    {
    id = ECamSettingItemDynamicVideoBrightness;
    text = qtn_lcam_tt_bright;
    capture_setup_menu_item =
        {
    /*    CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamBrightnessNorm;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_brightnorm;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamBrightnessPlus;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_brightplus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamBrightnessNeg;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_brightneg;
            } */
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_contrast_array
//    Mapping of video contrast setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_contrast_array
    {
    id = ECamSettingItemDynamicVideoContrast;
    text = qtn_lcam_popm_contrast;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamContrastNorm;
            bitmap = EMbmCameraappQgn_indi_cam4_contrast;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamContrastPlus;
            bitmap = EMbmCameraappQgn_indi_cam4_contrast_plus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamContrastNeg;
            bitmap = EMbmCameraappQgn_indi_cam4_contrast_minus;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_video_coloursaturation_array
//    Mapping of photo brightness setting values
//    to actual bitmaps.
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_capture_setup_menu_video_coloursaturation_array
    {
    id = ECamSettingItemDynamicVideoColourSaturation;
    text = qtn_lcam_popm_colsat;
    capture_setup_menu_item =
        {
   /*     CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationNorm;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_colsatnorm;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationPlus;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_colsatplus;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamColourSaturationNeg;
            bitmap = EMbmCameraappQgn_indi_lcam_ap_colsatneg;
            } */
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_brightness_array
//    Location and string data for the brightness 
//    slider legend text
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_brightness_array
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                l=KSetupMenuSliderIconLeft; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderTopLegendBottom; 
                W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft;
                };  
            text = qtn_lcam_set_plus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                l=KSetupMenuSliderIconLeft; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderBottomLegendBottom - 10; 
                W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_set_minus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = KSetupMenuSliderIconLeft - 7; 
                t = KSetupMenuSliderMiddleIconTop - 7; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
      //      bitmap_id = EMbmCameraappQgn_indi_lcam_ap_brightnorm;
      //      mask_id   = EMbmCameraappQgn_indi_lcam_ap_brightnorm_mask;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_brightness_array_ah
//    Location and string data for the brightness 
//    slider legend text (Arabic\Hebrew Layout)
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_brightness_array_ah
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                l=KSetupMenuSliderIconLeftAH; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderTopLegendBottom; 
                W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_set_plus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                l=KSetupMenuSliderIconLeftAH; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderBottomLegendBottom; 
                W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_set_minus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = KSetupMenuSliderIconLeftAH; 
                t = KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_ap_brightnorm;
//            mask_id   = EMbmCameraappQgn_indi_lcam_ap_brightnorm_mask;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_coloursaturation_array
//    Location and string data for the colour saturation 
//    slider legend text
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_coloursaturation_array
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT { font = EAknLogicalFontPrimaryFont; C=KSetupStandardFontColour; l=268; r=44; B=65; W=8; J=ELayoutAlignLeft; };
            text = qtn_lcam_set_plus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT { font = EAknLogicalFontPrimaryFont; C=KSetupStandardFontColour; l=268; r=44; B=255; W=8; J=ELayoutAlignLeft; };
            text = qtn_lcam_set_minus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { l = 243; t = 138; W = 30; H = 30; };
      //      bitmap_id = EMbmCameraappQgn_indi_lcam_ap_colsatnorm;
      //      mask_id = EMbmCameraappQgn_indi_lcam_ap_colsatnorm_mask;
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_contrast_array
//    Location and string data for the contrast 
//    slider legend text
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_contrast_array
    {
    items = 
        {
        CAM_SLIDER_CONTRAST_LEGEND_ITEM
            {
            item = ECamSliderLegendItemText;
            text = qtn_lcam_set_plus;
            },
        CAM_SLIDER_CONTRAST_LEGEND_ITEM
            {
            item = ECamSliderLegendItemText;
            text = qtn_lcam_set_minus;
            },
        CAM_SLIDER_CONTRAST_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            bitmap_id = EMbmCameraappQgn_indi_cam4_contrast;
            mask_id   = EMbmCameraappQgn_indi_cam4_contrast_mask;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_contrast_array_ah
//    Location and string data for the contrast 
//    slider legend text (Arabic\Hebrew Layout)
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_contrast_array_ah
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                l=KSetupMenuSliderIconLeftAH; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderTopLegendBottom; 
                W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_set_plus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                l=KSetupMenuSliderIconLeftAH; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderBottomLegendBottom; 
                W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_set_minus;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = KSetupMenuSliderIconLeftAH; 
                t = KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_contrast;
            mask_id   = EMbmCameraappQgn_indi_cam4_contrast_mask;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_light_sensitivity_array
//    Location and string data for the light sensitivity 
//    slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_light_sensitivity_array
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                l=245; //KSetupMenuSliderIconLeft;
                r=KSetupMenuSliderLegendRight;
                B=KSetupMenuSliderTopLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft;
                };  
            text = qtn_lcam_isohigh;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                l=245; //KSetupMenuSliderIconLeft; 
                r=KSetupMenuSliderLegendRight; 
                B=85; //KSetupMenuSliderBottomLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_isomedium;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                l=245; //KSetupMenuSliderIconLeft; 
                r=KSetupMenuSliderLegendRight; 
                B=120; //KSetupMenuSliderBottomLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_isolow;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                l=245; //KSetupMenuSliderIconLeft; 
                r=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderBottomLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_isoauto;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = 190; //KSetupMenuSliderIconLeft; 
                t = 40; // KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_high;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_high_mask;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = 190;//240; //KSetupMenuSliderIconLeft; 
                t = 70; //KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medium;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_medium_mask;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = 190; //KSetupMenuSliderIconLeft; 
                t = 95; //KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_low_mask;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                l = 190;//240; //KSetupMenuSliderIconLeft; 
                t = 128; //KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_auto;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_auto_mask;
            }


        };
    }
   
//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_light_sensitivity_array_ah
//    Location and string data for the light sensitivity 
//    slider legend text (for Arabic/Hebrew variant)
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_light_sensitivity_array_ah
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont; 
                C=KSetupStandardFontColour; 
                r=245; //KSetupMenuSliderIconLeft;
                l=KSetupMenuSliderLegendRight;
                B=KSetupMenuSliderTopLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft;
                };  
            text = qtn_lcam_isohigh;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                r=245; //KSetupMenuSliderIconLeft; 
                l=KSetupMenuSliderLegendRight; 
                B=85; //KSetupMenuSliderBottomLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_isomedium;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                r=245; //KSetupMenuSliderIconLeft; 
                l=KSetupMenuSliderLegendRight; 
                B=120; //KSetupMenuSliderBottomLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_isolow;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            position = AVKON_LAYOUT_TEXT 
                { 
                font = EAknLogicalFontSecondaryFont;
                C=KSetupStandardFontColour; 
                r=245; //KSetupMenuSliderIconLeft; 
                l=KSetupMenuSliderLegendRight; 
                B=KSetupMenuSliderBottomLegendBottom; 
                //W=KSetupMenuSliderLegendWidth; 
                J=ELayoutAlignLeft; 
                };  
            text = qtn_lcam_isoauto;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                r = 190; //KSetupMenuSliderIconLeft; 
                t = 40; // KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_high;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_high_mask;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                r = 190;//240; //KSetupMenuSliderIconLeft; 
                t = 70; //KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medium;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_medium_mask;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                r = 190; //KSetupMenuSliderIconLeft; 
                t = 95; //KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_low_mask;
            },

        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT 
                { 
                r = 190;//240; //KSetupMenuSliderIconLeft; 
                t = 128; //KSetupMenuSliderMiddleIconTop; 
                W = KSetupMenuSliderIconWidth; 
                H = KSetupMenuSliderIconHeight; 
                };
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_auto;
            mask_id = EMbmCameraappQgn_indi_cam4_iso_auto_mask;
            }


        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_control_position
//    Position of capture setup slider control when viewfinder is present
//
//----------------------------------------------------
//
RESOURCE POINT r_cam_capture_setup_slider_control_position
    {
    x = KSetupControlX;
    y = KSetupControlY;
    }


//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_control_position_ah
//    Position of capture setup slider control when viewfinder is present
//    for Arabic/Hebrew layouts
//
//----------------------------------------------------
//
RESOURCE POINT r_cam_capture_setup_slider_control_position_ah
    {
    x = KSetupControlXAH;
    y = KSetupControlY;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_bright_contrast_contvf_rect
//    Layout for capture setup container cropped viewfinder 
//    rect displayed with slider controls
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_slider_contvf_rect 
    { 
    l = KSetupViewFinderLeft;  
    t = KSetupViewFinderTop;  
    W = KSetupViewFinderWidth; 
    H = KSetupViewFinderHeight; 
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_bright_contrast_contvf_rect_ah
//    Arabic/Hebrew layout for capture setup container 
//    cropped viewfinder rect displayed with slider controls
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_slider_contvf_rect_ah
    { 
    r = KSetupViewFinderLeft;
    t = KSetupViewFinderTop;
    W = KSetupViewFinderWidth;
    H = KSetupViewFinderHeight;
    }


//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_ev_array
//    Location and string data for the EV-Slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_ev_array2
    {  
    items = 
        {
        CAM_SLIDER_EV_ITEM  // +2.0
            {
            text = qtn_lcam_ev_plus2;
            },
        CAM_SLIDER_EV_ITEM  // +1.7
            {
            text = qtn_lcam_ev_plus1_7;
            },
        CAM_SLIDER_EV_ITEM  // +1.3
            {
            text = qtn_lcam_ev_plus1_3;
            },
        CAM_SLIDER_EV_ITEM  // +1.0
            {
            text = qtn_lcam_ev_plus1;
            },
        CAM_SLIDER_EV_ITEM  // +0.7
            {
            text = qtn_lcam_ev_plus0_7;
            },
        CAM_SLIDER_EV_ITEM  // +0.3
            {
            text = qtn_lcam_ev_plus0_3;
            },
        CAM_SLIDER_EV_ITEM  // +0.0
            {
            text = qtn_lcam_ev_0;
            },
        CAM_SLIDER_EV_ITEM  // -0.3
            {
            text = qtn_lcam_ev_minus0_3;
            },
		CAM_SLIDER_EV_ITEM  // -0.7
            {
            text = qtn_lcam_ev_minus0_7;
            },
        CAM_SLIDER_EV_ITEM  // -1.0
            {
            text = qtn_lcam_ev_minus1;
            },
		CAM_SLIDER_EV_ITEM  // -1.3
            {
            text = qtn_lcam_ev_minus1_3;
            },
        CAM_SLIDER_EV_ITEM  // -1.7
            {
            text = qtn_lcam_ev_minus1_7;
            },
        CAM_SLIDER_EV_ITEM  // -2.0
            {
            text = qtn_lcam_ev_minus2;
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_ev_array2
//    Location and string data for the EV-Slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_ev_array
    {  
    items = 
        {
        CAM_SLIDER_EV_ITEM  // +2.0
            {
            text = qtn_lcam_ev_plus2;
            },
        CAM_SLIDER_EV_ITEM  // +1.5
            {
            text = qtn_lcam_ev_plus1_5;
            },
        CAM_SLIDER_EV_ITEM  // +1.0
            {
            text = qtn_lcam_ev_plus1;
            },
        CAM_SLIDER_EV_ITEM  // +0.5
            {
            text = qtn_lcam_ev_plus0_5;
            },
        CAM_SLIDER_EV_ITEM  // +0.0
            {
            text = qtn_lcam_ev_0;
            },
        CAM_SLIDER_EV_ITEM  // -0.5
            {
            text = qtn_lcam_ev_minus0_5;
            },
        CAM_SLIDER_EV_ITEM  // -1.0
            {
            text = qtn_lcam_ev_minus1;
            },
        CAM_SLIDER_EV_ITEM  // -1.5
            {
            text = qtn_lcam_ev_minus1_5;
            },
        CAM_SLIDER_EV_ITEM  // -2.0
            {
            text = qtn_lcam_ev_minus2;
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_ev_array3
//    Location and string data for the EV-Slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_ev_array3
    {  
    items = 
        {
        CAM_SLIDER_EV_ITEM  // +2.0
            {
            text = qtn_lcam_ev_plus2;
            },
        CAM_SLIDER_EV_ITEM  // +1.5
            {
            text = qtn_lcam_ev_plus1_5;
            },
        CAM_SLIDER_EV_ITEM  // +1.0
            {
            text = qtn_lcam_ev_plus1;
            },
        CAM_SLIDER_EV_ITEM  // +0.5
            {
            text = qtn_lcam_ev_plus0_5;
            },
        CAM_SLIDER_EV_ITEM  // +0.0
            {
            text = qtn_lcam_ev_0;
            },
        CAM_SLIDER_EV_ITEM  // -0.5
            {
            text = qtn_lcam_ev_minus0_5;
            },
        CAM_SLIDER_EV_ITEM  // -1.0
            {
            text = qtn_lcam_ev_minus1;
            },
        CAM_SLIDER_EV_ITEM  // -1.5
            {
            text = qtn_lcam_ev_minus1_5;
            },
        CAM_SLIDER_EV_ITEM  // -2.0
            {
            text = qtn_lcam_ev_minus2;
            }
        };
    }


//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_ev_array_ah
//    Arabic/Hebrew location and string data for the EV-Slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_ev_array_ah
    {
    items = 
        {
        CAM_SLIDER_EV_ITEM  // +2.0
            {
            text = qtn_lcam_ev_plus2;
            },
        CAM_SLIDER_EV_ITEM  // +1.7
            {
            text = qtn_lcam_ev_plus1_7;
            },
        CAM_SLIDER_EV_ITEM  // +1.3
            {
            text = qtn_lcam_ev_plus1_3;
            },
        CAM_SLIDER_EV_ITEM  // +1.0
            {
            text = qtn_lcam_ev_plus1;
            },
        CAM_SLIDER_EV_ITEM  // +0.7
            {
            text = qtn_lcam_ev_plus0_7;
            },
        CAM_SLIDER_EV_ITEM  // +0.3
            {
            text = qtn_lcam_ev_plus0_3;
            },
        CAM_SLIDER_EV_ITEM  // +0.0
            {
            text = qtn_lcam_ev_0;
            },
        CAM_SLIDER_EV_ITEM  // -0.3
            {
            text = qtn_lcam_ev_minus0_3;
            },
		CAM_SLIDER_EV_ITEM  // -0.7
            {
            text = qtn_lcam_ev_minus0_7;
            },
        CAM_SLIDER_EV_ITEM  // -1.0
            {
            text = qtn_lcam_ev_minus1;
            },
		CAM_SLIDER_EV_ITEM  // -1.3
            {
            text = qtn_lcam_ev_minus1_3;
            },
        CAM_SLIDER_EV_ITEM  // -1.7
            {
            text = qtn_lcam_ev_minus1_7;
            },
        CAM_SLIDER_EV_ITEM  // -2.0
            {
            text = qtn_lcam_ev_minus2;
			}
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_ev_array2_ah
//    Arabic/Hebrew location and string data for the EV-Slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_ev_array2_ah
    {
    items = 
        {
        CAM_SLIDER_EV_ITEM  // +2.0
            {
            text = qtn_lcam_ev_plus2;
            },
        CAM_SLIDER_EV_ITEM  // +1.5
            {
            text = qtn_lcam_ev_plus1_5;
            },
        CAM_SLIDER_EV_ITEM  // +1.0
            {
            text = qtn_lcam_ev_plus1;
            },
        CAM_SLIDER_EV_ITEM  // +0.5
            {
            text = qtn_lcam_ev_plus0_5;
            },
        CAM_SLIDER_EV_ITEM  // +0.0
            {
            text = qtn_lcam_ev_0;
            },
        CAM_SLIDER_EV_ITEM  // -0.5
            {
            text = qtn_lcam_ev_minus0_5;
            },
        CAM_SLIDER_EV_ITEM  // -1.0
            {
            text = qtn_lcam_ev_minus1;
            },
        CAM_SLIDER_EV_ITEM  // -1.5
            {
            text = qtn_lcam_ev_minus1_5;
            },
        CAM_SLIDER_EV_ITEM  // -2.0
            {
            text = qtn_lcam_ev_minus2;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_ev_array3_ah
//    Arabic/Hebrew location and string data for the EV-Slider legend text
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_capture_setup_slider_ev_array3_ah
    {
    items = 
        {
        CAM_SLIDER_EV_ITEM  // +2.0
            {
            text = qtn_lcam_ev_plus2;
            },
        CAM_SLIDER_EV_ITEM  // +1.5
            {
            text = qtn_lcam_ev_plus1_5;
            },
        CAM_SLIDER_EV_ITEM  // +1.0
            {
            text = qtn_lcam_ev_plus1;
            },
        CAM_SLIDER_EV_ITEM  // +0.5
            {
            text = qtn_lcam_ev_plus0_5;
            },
        CAM_SLIDER_EV_ITEM  // +0.0
            {
            text = qtn_lcam_ev_0;
            },
        CAM_SLIDER_EV_ITEM  // -0.5
            {
            text = qtn_lcam_ev_minus0_5;
            },
        CAM_SLIDER_EV_ITEM  // -1.0
            {
            text = qtn_lcam_ev_minus1;
            },
        CAM_SLIDER_EV_ITEM  // -1.5
            {
            text = qtn_lcam_ev_minus1_5;
            },
        CAM_SLIDER_EV_ITEM  // -2.0
            {
            text = qtn_lcam_ev_minus2;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_shaft
//    Location for the capture setup control slider shaft
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_slider_shaft
    { 
    l = KSetupMenuSliderShaftLeft;  
    t = KSetupMenuSliderShaftTop;
    W = KSetupMenuSliderShaftWidth; 
    H = KSetupMenuSliderShaftHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_shaft_ah
//    Location for the capture setup control slider shaft
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_slider_shaft_ah
    { 
    r = KSetupMenuSliderShaftLeft;  
    t = KSetupMenuSliderShaftTop;
    W = KSetupMenuSliderShaftWidth; 
    H = KSetupMenuSliderShaftHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_thumb
//    Location for the capture setup control slider thumb
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_slider_thumb
    { 
    l = 200; //KSetupMenuSliderShaftLeft;  
    t = KSetupMenuSliderShaftTop;
    W = KSetupMenuSliderThumbWidth; 
    H = KSetupMenuSliderThumbHeight; 
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_slider_thumb_ah
//    Location for the capture setup control slider thumb (Arabic/Hebrew layout)
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_slider_thumb_ah
    {
    r = 200; //KSetupMenuSliderShaftLeft;
    t = KSetupMenuSliderShaftTop;
    W = KSetupMenuSliderThumbWidth; 
    H = KSetupMenuSliderThumbHeight; 
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_iso_slider_shaft
//    Location for the capture setup control slider shaft
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_iso_slider_shaft
    {
    l = 220; //KSetupMenuSliderShaftLeft;
    t = KSetupMenuSliderShaftTop;
    W = KSetupMenuSliderShaftWidth;
    H = KSetupMenuSliderShaftHeight;
    }


//----------------------------------------------------
//   
//    r_cam_capture_setup_iso_slider_thumb
//    Location for the capture setup control slider thumb
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_capture_setup_iso_slider_thumb
    {
    l = 220; //KSetupMenuSliderShaftLeft;
    t = KSetupMenuSliderShaftTop;
    W = KSetupMenuSliderThumbWidth;
    H = KSetupMenuSliderThumbHeight;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_whitebalance
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_whitebalance
     {
     buf = qtn_lcam_title_subm_wb;
     }

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_coloureffect
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_coloureffect
     {
     buf = qtn_lcam_title_subm_ceff;
     }
     
//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_ev
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_ev
     {
     buf = qtn_lcam_title_subm_ev;
     }

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_flash
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_flash
     {
     buf = qtn_lcam_title_subm_flash;
     }
     
//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_brightness
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_brightness
     {
     buf = qtn_lcam_title_subm_bright;
     } 
         
//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_light_sensitivity
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_light_sensitivity
     {
     buf = qtn_lcam_title_subm_iso;
     }

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_contrast
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_contrast
     {
     buf = qtn_lcam_title_subm_contr;
     }

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_imagesharpness
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_imagesharpness
     {
     buf = qtn_lcam_title_subm_sharp;
     }     

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_coloursaturation
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_coloursaturation
     {
     buf = qtn_lcam_title_subm_colsat;
     }     

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_video
//    Title name used in video capture setup views
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_cam_capture_setup_title_video
     {
     txt = qtn_lcam_title_text_vidsetup;
     }

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_photo
//    Title name used in still capture setup views
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_cam_capture_setup_title_still
     {
     txt = qtn_lcam_title_text_photsetup;
     }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_second_camera_photo_data
//    Lists all the contents and layout data for the photo
//    capture setup menu for the secondary camera
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_second_camera_photo_data
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = 16; t = 150; W = 320; H = 130; 
        };

    contents = 
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_photo_scene_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_photo_brightness_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_photo_contrast_array;
            }

        };
        
    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont; C=KSetupStandardFontColour; l=5; r=30; B=26; W=115; J=ELayoutAlignLeft;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = 268; t = 3; W = 32; H = 20; 
            };
    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont; C=KSetupStandardFontColour; l=286; r=16; B=24; W=80; J=ELayoutAlignRight;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = 3;

    // The height for a list item
    list_item_height = 41;
    }

//----------------------------------------------------
//   
//    r_cam_capture_setup_menu_second_camera_video_data
//    Lists all the contents and layout data for the video
//    capture setup menu for the secondary camera
//
//----------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_DATA r_cam_capture_setup_menu_second_camera_video_data
    {
    // The rectangular layout for the listbox.
    listbox_layout = AVKON_LAYOUT_RECT
        {
        l = 16; t = 150; W = 320; H = 130; 
        };

    contents = 
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_scene_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_brightness_array;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_REF
            {
            capture_setup_menu_item_ref = r_cam_capture_setup_menu_video_contrast_array;
            }

        };

    // The text layouts for the text items of this listbox.
    text_layout = 
        AVKON_LAYOUT_TEXT
            {
            font = EAknLogicalFontPrimaryFont; C=KSetupStandardFontColour; l=5; r=30; B=26; W=115; J=ELayoutAlignLeft;
            };

    // The rectangular layouts for the bitmap items of this listbox.
    bitmap_layout = 
        AVKON_LAYOUT_RECT
            {
            l = 268; t = 3; W = 32; H = 20; 
            };
            
    // The layout for any icon text items of this listbox.
    icontext_layout = AVKON_LAYOUT_TEXT
        {
        font = EAknLogicalFontPrimaryFont; C=KSetupStandardFontColour; l=286; r=16; B=24; W=80; J=ELayoutAlignLeft;
        };

    // The offset of the highlighted rectangle (when list item selected)
    // from the normal rectangle of a list item.
    highlighted_offset = 3;

    // The height for a list item
    list_item_height = 41;
    }

//----------------------------------------------------
//
//  r_cam_active_palette_precapture_sequence_mode_array
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  image precapture sequence mode active palette item.
//
//-----------------------------------------------------

RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_precapture_sequence_mode_array
    {
    id = ECamSettingItemSequenceMode;
    text = qtn_lcam_tt_sequence;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapseOff;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapseMin;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_burst;
            }/*,
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse5sec;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_5s;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse10sec;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_10s;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse30sec;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_30s;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse1min;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_1min;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse5min;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_5min;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse10min;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_10min; 
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamTimeLapse30min;
            bitmap = EMbmCameraappQgn_indi_cam4_sequence_30min;
            }*/
        };
    }
    
RESOURCE ARRAY r_cam_active_palette_precapture_sequence_mode_tooltip_array
    {
    items =
        {
        CAM_AP_TT_ITEM
            {
            text = qtn_lcam_tt_sequence;
            },
        CAM_AP_TT_ITEM
            {
            text = qtn_lcam_tt_normal;
            }
        };
    }    
    
RESOURCE ARRAY r_cam_active_palette_precapture_advanced_sequence_mode_tooltip_array
    {
    items =
        {
        CAM_AP_TT_ITEM
            {
            text = qtn_lcam_tt_sequence;
            },
        CAM_AP_TT_ITEM
            {
            text = qtn_lcam_tt_normal;
            }
        };
    }    

//----------------------------------------------------
//
//  r_cam_active_palette_image_precapture_mode_select
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  image precapture mode select active palette item.
//
//-----------------------------------------------------

RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_precapture_video_mode_select
    {
    id = ECamSettingItemVideoModeSelect;
    text = qtn_lcam_tt_switch_video;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 0;
        //    bitmap = EMbmCameraappQgn_indi_lcam_ap_mode_switch_c;
              bitmap = EMbmCameraappQgn_indi_vid4_video;
            }          
        };
    }    

//----------------------------------------------------
//
//  r_cam_active_palette_precapture_image_switch_camera
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  switch camera active palette item.
//
//-----------------------------------------------------

RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_precapture_switch_camera
    {
    id = ECamSettingItemSwitchCamera;
    text = qtn_lcam_tt_camera_main;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 0;
            bitmap = EMbmCameraappQgn_indi_tb_cam4_goto_main;
            }          
        };
    }   

//----------------------------------------------------
//
//  r_cam_active_palette_video_precapture_mode_select
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  video precapture mode select active palette item.
//
//-----------------------------------------------------

RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_precapture_image_mode_select
    {
    id = ECamSettingItemImageModeSelect;
    text = qtn_lcam_tt_switch_image;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = 0;
         //   bitmap = EMbmCameraappQgn_indi_lcam_ap_mode_switch_v;
            bitmap = EMbmCameraappQgn_indi_cam4_camera;
            }          
        };
    }    
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_list_self_timer
//    Array of list items for self timer radio button list 
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_self_timer
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            // item_text = qtn_lcam_set_off;
            item_text        = qtn_lcam_st_off;
            setting_value_id = ECamSelfTimerOff;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_selftimer_off;
            },        
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_st_2;
            setting_value_id = ECamSelfTimer2;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_selftimer_2sec;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_st_10;
            setting_value_id = ECamSelfTimer10;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_selftimer_10s;
            },            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_st_20;
            setting_value_id = ECamSelfTimer20;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_selftimer_20s;
            }
        };
    }    

//----------------------------------------------------
//   
//    r_cam_capture_setup_title_name_self_timer
//    Title name used in capture setup
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_capture_setup_title_name_self_timer
     {
     buf = qtn_lcam_title_selftimer;
     }    
     
//----------------------------------------------------
//
//  r_cam_active_palette_self_timer_select
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  precapture mode select active palette item.
//
//-----------------------------------------------------    
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_self_timer_select
    {
    id = ECamSettingItemDynamicSelfTimer;
    text = qtn_lcam_tt_st;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamSelfTimerOff;            
            bitmap = EMbmCameraappQgn_indi_cam4_selftimer_off;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamSelfTimer2;            
            bitmap = EMbmCameraappQgn_indi_cam4_selftimer_2sec;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamSelfTimer10;            
            bitmap = EMbmCameraappQgn_indi_cam4_selftimer_10s;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamSelfTimer20;            
            bitmap = EMbmCameraappQgn_indi_cam4_selftimer_20s;
            }                                               
        };
    }     

// ---------------------------------------------------------------------------
// Go to photos toolbar AP item data (tooltip, icons)
// ---------------------------------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_goto_photos_set_array
  {
  id   = ECamSettingItemGotoPhotos;
  text = qtn_lcam_tt_go_to_photos;
  capture_setup_menu_item =
    {
    // For item of type ECamActivePaletteItemTypeCommand, there's only one icon.
    // Command id defined in CAM_DYNAMIC_ACTIVE_PALETTE_ITEM or 
    // CAM_ACTIVE_PALETTE_ITEM resource for this item is used to identify the icon.
    CAM_CAPTURE_SETUP_MENU_ITEM_DATA
      {
      id     = ECamCmdPhotos;
      bitmap = EMbmCameraappQgn_indi_cam4_goto_gallery;
      }
    };
  } 

//----------------------------------------------------
//
//  r_cam_active_palette_light_sensitivity_select
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  precapture mode select light sensitivity item.
//
//-----------------------------------------------------    
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_light_sensitivity_select
    {
    id = ECamSettingItemDynamicPhotoLightSensitivity;
    text = qtn_lcam_tt_isosetting;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityAuto;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_auto;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityLow;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_low;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityMed;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_medium;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityHigh;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_high;
            }                                              
        };
    }          

//----------------------------------------------------
//
//  r_cam_active_palette_extended_light_sensitivity_select
//
//  Lists the Ids, tooltip text and bitmaps used by the
//  precapture mode select light sensitivity item.
//
//-----------------------------------------------------    
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_extended_light_sensitivity_select
    {
    id = ECamSettingItemDynamicPhotoLightSensitivity;
    text = qtn_lcam_tt_isosetting;
    capture_setup_menu_item =
        {
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityAuto;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_auto;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityLow;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_low;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityLowMed;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_low;
            },            
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityMed;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_medium;
            },
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityMedHigh;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_medhigh;
            },            
        CAM_CAPTURE_SETUP_MENU_ITEM_DATA
            {
            id = ECamLightSensitivityHigh;            
            bitmap = EMbmCameraappQgn_indi_cam4_iso_high;
            }                                              
        };
    }          


//----------------------------------------------------
// r_cam_light_sensitivity_title
//
// Light sensitivity setting page title
//
//----------------------------------------------------
RESOURCE TITLE_PANE r_cam_light_sensitivity_title
     {
     txt = qtn_lcam_title_selector_iso; //qtn_lcam_title_selector_iso_phot;
     }  



//----------------------------------------------------
//   
//    r_cam_capture_setup_list_light_sensitivity
//    Light sensitivity listbox item names and icons
//    (Displayed in InfoListBox)
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_light_sensitivity
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_auto;
            setting_value_id = ECamLightSensitivityAuto;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_auto;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_low;
            setting_value_id = ECamLightSensitivityLow;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_medium;
            setting_value_id = ECamLightSensitivityMed;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medium;
            },
        CAPTURE_SETUP_LIST_ITEM    
            {
            item_text = qtn_lcam_set_iso_high;
            setting_value_id = ECamLightSensitivityHigh;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_high;
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_list_light_sensitivity_summary
//    Light sensitivity listbox item summaries
//    (Displayed in InfoListBoxContainer)
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_light_sensitivity_summary
    {
    items =
        {
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityAuto;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_auto;
            summary_title_text = qtn_lcam_set_iso_auto;
            summary_description_text = qtn_lcam_set_iso_auto_ex;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityLow;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_low;
            summary_title_text = qtn_lcam_set_iso_low;
            summary_description_text = qtn_lcam_set_iso_low_ex;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityMed;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_medium;
            summary_title_text = qtn_lcam_set_iso_medium;
            summary_description_text = qtn_lcam_set_iso_medium_ex;
            },                     
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityHigh;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_high;
            summary_title_text = qtn_lcam_set_iso_high;
            summary_description_text = qtn_lcam_set_iso_high_ex;
            }          
        };
    }


//----------------------------------------------------
//   
//    r_cam_capture_setup_list_extended_light_sensitivity
//    Light sensitivity listbox item names and icons
//    (Displayed in InfoListBox)
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_extended_light_sensitivity
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_auto;
            setting_value_id = ECamLightSensitivityAuto;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_auto;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_low;
            setting_value_id = ECamLightSensitivityLow;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_low_medium;
            setting_value_id = ECamLightSensitivityLowMed;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_low;
            },            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_medium;
            setting_value_id = ECamLightSensitivityMed;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medium;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text = qtn_lcam_set_iso_medium_high;
            setting_value_id = ECamLightSensitivityMedHigh;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_medhigh;
            },
        CAPTURE_SETUP_LIST_ITEM    
            {
            item_text = qtn_lcam_set_iso_high;
            setting_value_id = ECamLightSensitivityHigh;
            bitmap_id = EMbmCameraappQgn_indi_cam4_iso_high;
            }
        };
    }
    
//----------------------------------------------------
//   
//    r_cam_capture_setup_list_extended_light_sensitivity_summary
//    Light sensitivity listbox item summaries
//    (Displayed in InfoListBoxContainer)
//
//----------------------------------------------------
//
RESOURCE ARRAY r_cam_capture_setup_list_extended_light_sensitivity_summary
    {
    items =
        {
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityAuto;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_auto;
            summary_title_text = qtn_lcam_set_iso_auto;
            summary_description_text = qtn_lcam_set_iso_auto_ex;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityLow;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_low;
            summary_title_text = qtn_lcam_set_iso_low;
            summary_description_text = qtn_lcam_set_iso_low_ex;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityLowMed;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_low;
            summary_title_text = qtn_lcam_set_iso_low_medium;
            summary_description_text = qtn_lcam_set_iso_low_medium_ex;
            },               
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityMed;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_medium;
            summary_title_text = qtn_lcam_set_iso_medium;
            summary_description_text = qtn_lcam_set_iso_medium_ex;
            },                     
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityMedHigh;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_medhigh;
            summary_title_text = qtn_lcam_set_iso_medium_high;
            summary_description_text = qtn_lcam_set_iso_medium_high_ex;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id = ECamLightSensitivityHigh;
            summary_icon = EMbmCameraappQgn_indi_cam4_iso_high;
            summary_title_text = qtn_lcam_set_iso_high;
            summary_description_text = qtn_lcam_set_iso_high_ex;
            }          
        };
    }



// ---------------------------------------------------------
// Viewfinder grid

// ---------------------------------------------------------
//
//  r_cam_active_palette_vf_grid_set_array
//
//  Lists the ids, tooltip texts and bitmaps used by the
//  viewfinder grid setup active palette item.
//
// ---------------------------------------------------------
//
RESOURCE CAM_CAPTURE_SETUP_MENU_ITEM_ARRAY r_cam_active_palette_vf_grid_set_array
  {
  id   = ECamSettingItemViewfinderGrid;
  text = qtn_lcam_tt_show_viewfinder_grid;
  capture_setup_menu_item =
    {
    // The icons indicate the current setting value.
    CAM_CAPTURE_SETUP_MENU_ITEM_DATA
      {
      id     = ECamViewfinderGridOn;            
      bitmap = EMbmCameraappQgn_indi_cam4_viewfinder_on;
      },
    CAM_CAPTURE_SETUP_MENU_ITEM_DATA
      {
      id     = ECamViewfinderGridOff;            
      bitmap = EMbmCameraappQgn_indi_cam4_viewfinder_off;
      }            
    };
  }


// ---------------------------------------------------------
// r_cam_active_palette_vf_grid_tooltip_array
//
// Array for viewfinder grid active palette item tooltips.
// ---------------------------------------------------------
//
RESOURCE ARRAY r_cam_active_palette_vf_grid_tooltip_array
  {
  items =
    {
    // These are indexed in CamActivePaletteHander with values of type 
    // TCamVfGridState based on current setting value.
    // 
    // Note the order of texts: 
    //   When current value is ECamViewfinderGridOn (0) the tooltip 
    //   must be "hide viewfinder grid" and vice versa.
    CAM_AP_TT_ITEM { text = qtn_lcam_tt_hide_viewfinder_grid; },
    CAM_AP_TT_ITEM { text = qtn_lcam_tt_show_viewfinder_grid; }
    };
  }    


//#endif //CAMERAAPP_PLUGIN_BUILD

//****************************************************************
// THE FOLLOWING ARE RESOURCES NEEDED BY SETTINGS PLUGIN AND CAMERA
//***************************************************************

//----------------------------------------------------
//   
//    r_cam_quality_slider_shaft
//    Location for the quality slider shaft
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_quality_slider_shaft
    { 
        l = 44;  
        t = 16;
        W = 12; 
        H = 155; 
    }

//----------------------------------------------------
//   
//    r_cam_quality_slider_shaft_ah
//    Location for the quality slider shaft (Arabic/Hebrew)
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_quality_slider_shaft_ah
    { 
        r = 44;
        t = 16;
        W = 12;
        H = 155;
    }

//----------------------------------------------------
//   
//    r_cam_quality_slider_thumb
//    Location for the quality slider thumb
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_quality_slider_thumb
    { 
        l = 40; 
        t = 0; // not used
        W = 13;
        H = 7;
    }

//----------------------------------------------------
//   
//    r_cam_quality_slider_thumb_ah
//    Location for the quality slider thumb (Arabic/Hebrew)
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_quality_slider_thumb_ah
    { 
        r = 40; 
        t = 0; // not used
        W = 13;
        H = 7;
    }
