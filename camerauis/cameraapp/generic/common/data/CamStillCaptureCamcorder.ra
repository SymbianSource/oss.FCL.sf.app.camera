/*
* Copyright (c) 2008 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for the Camera Application*
*/




#define KPhotoQualitySliderLegendCentreX    20


//----------------------------------------------------
//   
//    r_cam_photo_quality_slider_array_camcorder
//    Legend data for the photo quality slider 
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_photo_quality_slider_array_camcorder
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { l = KPhotoQualitySliderLegendCentreX - KResolutionBurstQXGAIconWidth/2; 
                                            t = 10; 
                                            W = KResolutionBurstQXGAIconWidth; 
                                            H = KResolutionBurstQXGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_qxga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_qxga_list;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { l = KPhotoQualitySliderLegendCentreX - KResolutionBurstUXGAIconWidth/2; 
                                            t = 62; 
                                            W = KResolutionBurstUXGAIconWidth; 
                                            H = KResolutionBurstUXGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_uxga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_uxga_list;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { l = KPhotoQualitySliderLegendCentreX - KResolutionBurstSXGAIconWidth/2; 
                                            t = 114; 
                                            W = KResolutionBurstSXGAIconWidth; 
                                            H = KResolutionBurstSXGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_sxga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_sxga_list;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { l = KPhotoQualitySliderLegendCentreX - KResolutionBurstVGAIconWidth/2; 
                                            t = 166; 
                                            W = KResolutionBurstVGAIconWidth; 
                                            H = KResolutionBurstVGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_vga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_vga_list;
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_photo_quality_slider_array_ah_camcorder
//    Legend data for the photo quality slider (Arabic/Hebrew)
//
//----------------------------------------------------
//   
RESOURCE ARRAY r_cam_photo_quality_slider_array_ah_camcorder
    {
    items = 
        {
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { r = KPhotoQualitySliderLegendCentreX - KResolutionBurstQXGAIconWidth/2; 
                                            t = 10; 
                                            W = KResolutionBurstQXGAIconWidth; 
                                            H = KResolutionBurstQXGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_qxga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_qxga_list;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { r = KPhotoQualitySliderLegendCentreX - KResolutionBurstUXGAIconWidth/2; 
                                            t = 62; 
                                            W = KResolutionBurstUXGAIconWidth; 
                                            H = KResolutionBurstUXGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_uxga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_uxga_list;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { r = KPhotoQualitySliderLegendCentreX - KResolutionBurstSXGAIconWidth/2; 
                                            t = 114; 
                                            W = KResolutionBurstSXGAIconWidth; 
                                            H = KResolutionBurstSXGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_sxga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_sxga_list;
            },
        CAM_SLIDER_LEGEND_ITEM
            {
            item = ECamSliderLegendItemIcon;
            position = AVKON_LAYOUT_RECT { r = KPhotoQualitySliderLegendCentreX - KResolutionBurstVGAIconWidth/2; 
                                            t = 166; 
                                            W = KResolutionBurstVGAIconWidth; 
                                            H = KResolutionBurstVGAIconHeight; };
//            bitmap_id = EMbmCameraappQgn_indi_lcam_res_vga_list;
//            mask_id = EMbmCameraappQgn_indi_lcam_res_vga_list;
            }
        };
    }

//***********************************************************
// THE FOLLOWING RESOURCES BELOW ARE COMPILED ONLY FOR CAMERA
//***********************************************************

#ifndef CAMERAAPP_PLUGIN_BUILD 
// ---------------------------------------------------
//
//    r_cam_img_precap_imgcounter
//    Layout for remaining images in navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_img_precap_imgcounter
    {
    font = ELatinPlain12; C=0; r=237; l=51; B=233; J=ELayoutAlignRight;
    }

// ---------------------------------------------------
//
//    r_cam_img_precap_imgcounter_ah
//    Arabic/Hebrew layout for remaining images in navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_img_precap_imgcounter_ah
    {
    //font = ELatinBold12; C=0; l=23; B=234; W=100; J=ELayoutAlignLeft;
    //font = ELatinPlain12; C=0; r=243; l=52; B=233; J=ELayoutAlignLeft;
    font = ELatinPlain12; C=0; r=216; l=72; B=233; J=ELayoutAlignLeft;
    }

//----------------------------------------------------
//   
//    r_cam_post_capture_image_size_layout_camcorder
//    Layout for image size in post-capture navi-counter
//
//----------------------------------------------------
//  
RESOURCE AVKON_LAYOUT_TEXT r_cam_post_capture_image_size_layout_camcorder
    {
    font = EAknLogicalFontSecondaryFont; C=0; l=20; r = 320-20-50; B=234; W=50; J=ELayoutAlignRight;
    }

//----------------------------------------------------
//   
//    r_cam_post_capture_image_size_layout_ah_camcorder
//    Layout for image size in post-capture navi-counter
//
//----------------------------------------------------
//  
RESOURCE AVKON_LAYOUT_TEXT r_cam_post_capture_image_size_layout_ah_camcorder
    {
    font = EAknLogicalFontSecondaryFont; C=35; r=20; B=234; W=100; J=ELayoutAlignRight;
    }

//-----------------------------------------------------------------------------
//
//    r_cam_snapshot_rect_still_camcorder
//    The size and position of the snapshot in still post capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_snapshot_rect_still_camcorder
    { l = 0; t = 0; W = 320; H = 240; }
    
//-----------------------------------------------------------------------------
//
//    r_cam_snapshot_rect_still_rotated
//    The size and position of the snapshot in still post capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_snapshot_rect_still_rotated
    { l = 0; t = 0; W = 240; H = 320; }

//-----------------------------------------------------------------------------
//
//    r_cam_snapshot_rect_cif_camcorder
//    The size and position of the snapshot in video post capture view
//    for Large (CIF) resolutions
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_snapshot_rect_cif_camcorder
    { l = 0; t = 0; W = 320; H = 240; }
    
//-----------------------------------------------------------------------------
//
//    r_cam_snapshot_rect_near_cif_camcorder
//    The size and position of the snapshot in video post capture view
//    for Large (CIF) resolutions in secondary camera
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_snapshot_rect_near_cif_camcorder
    { l = 72; t = 48; W = 176; H = 144; }    

//-----------------------------------------------------------------------------
//
//    r_cam_snapshot_rect_sqcif_camcorder
//    The size and position of the snapshot in video post capture view
//    for Small resolution
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_snapshot_rect_sqcif_camcorder
    { l = 96; t = 72; W = 128; H = 96; }

//-----------------------------------------------------------------------------
//
//    r_cam_still_displayed_rect_secondary_camcorder
//    The size and position of the viewfinder frame or snapshot in still capture 
//    (secondary camera)
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_still_displayed_rect_secondary_camcorder
    { l = 4; t = 0; W = 344; H = 264; }    
    
//-----------------------------------------------------------------------------
//
//    r_cam_still_requested_rect_secondary_camcorder
//    The size of the viewfinder and snapshot image requested from the engine in 
//    still capture (secondary camera). This is different from the displayed size
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_still_requested_rect_secondary_camcorder
    { l = 0; t = 0; W = 352; H = 288; }      


//----------------------------------------------------
//   
//    r_cam_post_capture_image_name_layout_camcorder
//    Layout for image name in post-capture navi-counter
//
//----------------------------------------------------
//  
RESOURCE AVKON_LAYOUT_TEXT r_cam_post_capture_image_name_layout_camcorder
	{
    font = EAknLogicalFontSecondaryFont; C=35; l=4; B=13; W=150; J=ELayoutAlignLeft;
	}

//----------------------------------------------------
//   
//    r_cam_post_capture_image_name_layout_ah_camcorder
//    Arabic/Hebrew layout for video name in post-capture
//    navi-counter
//
//----------------------------------------------------
//  
RESOURCE AVKON_LAYOUT_TEXT r_cam_post_capture_image_name_layout_ah_camcorder
	{
    font = EAknLogicalFontPrimaryFont; C=35; r=9; B=13; W=100; J=ELayoutAlignRight;
	}


//----------------------------------------------------------------------------
// 
//    r_cam_still_pre_capture_ap_items_secondary
//    Still pre-capture active palette items for secondary camera
// 
//----------------------------------------------------------------------------
//  
RESOURCE ARRAY r_cam_still_pre_capture_ap_items_secondary
    {
    // Note:
    //   Current implementation of ActivePalette2 does not
    //   support the positioning with index so the order
    //   of items here is what matters.
    //   !!! position attribute is ignored !!! 
    items =
        {
        CAM_ACTIVE_PALETTE_ITEM
            {
            item_id  = ECamSettingItemVideoModeSelect; 
            cmd_id   = ECamCmdNewVideo;
            position = ECamAPSlotPhotoPreCaptureMode;
            type     = ECamActivePaletteItemTypePreCaptureNonSetting;
            },
        CAM_ACTIVE_PALETTE_ITEM
            {
            item_id  = ECamSettingItemGotoPhotos;
            cmd_id   = ECamCmdPhotos;
            position = ECamAPSlotPhotoPreCaptureGotoPhotos;
            type     = ECamActivePaletteItemTypeCommand;    
            },
        CAM_ACTIVE_PALETTE_ITEM
            {
            item_id  = ECamSettingItemSwitchCamera;
            cmd_id   = ECamCmdSwitchCamera;
            position = ECamAPSlotPhotoPreCaptureMode;
            type     = ECamActivePaletteItemTypePreCaptureNonSetting;    
            }
        };
    }      
      
//----------------------------------------------------------------------------
// r_cam_still_pre_capture_ap_items_advanced
//
// Still pre-capture active palette items in advanced user mode.
// (See r_cam_still_pre_capture_ap_items_novice)
//----------------------------------------------------------------------------
//  
RESOURCE ARRAY r_cam_still_pre_capture_ap_items_advanced
  {
  // Note:
  //   Current implementation of ActivePalette2 does not
  //   support the positioning with index so the order
  //   of items here is what matters.
  //   !!! position attribute is ignored !!! 
  items =
    {
   	CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemVideoModeSelect; 
      cmd_id   = ECamCmdNewVideo;
      position = ECamAPSlotPhotoPreCaptureMode;
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoScene;       
      cmd_id   = ECamCmdCaptureSetupSceneStill;
      position = ECamAPSlotPhotoPreCaptureScene;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoFlash;
      cmd_id   = ECamCmdCaptureSetupFlashStill;
      position = ECamAPSlotPhotoPreCaptureFlash;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemFaceTracking; 
      cmd_id   = ECamCmdToggleFacetracking;
      position = ECamAPSlotPhotoPreCaptureFacetracking;
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicSelfTimer;
      cmd_id   = ECamCmdCaptureSetupSelfTimer;
      position = ECamAPSlotPhotoPreCaptureSelfTimer;
      type     = ECamActivePaletteItemTypePreCapture;    
      },                  
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemGotoPhotos;
      cmd_id   = ECamCmdPhotos;
      position = ECamAPSlotPhotoPreCaptureGotoPhotos;
      type     = ECamActivePaletteItemTypeCommand;    
      },    
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemSequenceMode;
      cmd_id   = ECamCmdToggleMulti;
      position = ECamAPSlotPhotoPreCaptureSequence; 
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoColourFilter;
      cmd_id   = ECamCmdCaptureSetupColourFilterStill; 
      position = ECamAPSlotPhotoPreCaptureColour;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemViewfinderGrid;
      cmd_id   = ECamCmdViewfinderGrid; 
      position = ECamAPSlotPhotoPreCaptureVfGrid; 
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoWhiteBalance;
      cmd_id   = ECamCmdCaptureSetupWhiteBalanceStill;
      position = ECamAPSlotPhotoPreCaptureWB;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoExposure;
      cmd_id   = ECamCmdCaptureSetupExposureStill; 
      position = ECamAPSlotPhotoPreCaptureEV; 
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoImageSharpness;
      cmd_id   = ECamCmdCaptureSetupImageSharpnessStill; 
      position = ECamAPSlotPhotoPreCaptureSharpness;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoBrightness;
      cmd_id   = ECamCmdCaptureSetupBrightnessStill; 
      position = ECamAPSlotPhotoPreCaptureBrightness;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoContrast;
      cmd_id   = ECamCmdCaptureSetupContrastStill; 
      position = ECamAPSlotPhotoPreCaptureContrast;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM  
      {
      item_id  = ECamSettingItemDynamicPhotoLightSensitivity;
      cmd_id   = ECamCmdCaptureSetupLightSensitivityStill; 
      position = ECamAPSlotPhotoPreCaptureISO;
      type     = ECamActivePaletteItemTypePreCapture;
      }
            
    };
  }


//----------------------------------------------------------------------------
// r_cam_still_pre_capture_ap_items_novice
//
// Still pre-capture active palette items in novice user mode.
// (Less items than in advanced user mode.)
//----------------------------------------------------------------------------
//  
RESOURCE ARRAY r_cam_still_pre_capture_ap_items_novice
  {
  // Note:
  //   Current implementation of ActivePalette2 does not
  //   support the positioning with index so the order
  //   of items here is what matters.
  //   !!! position attribute is ignored !!! 
  items =
    {
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemVideoModeSelect; 
      cmd_id   = ECamCmdNewVideo;
      position = ECamAPSlotPhotoPreCaptureMode;
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoScene;       
      cmd_id   = ECamCmdCaptureSetupSceneStill;
      position = ECamAPSlotPhotoPreCaptureScene;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoFlash;
      cmd_id   = ECamCmdCaptureSetupFlashStill;
      position = ECamAPSlotPhotoPreCaptureFlash;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicSelfTimer;
      cmd_id   = ECamCmdCaptureSetupSelfTimer;
      position = ECamAPSlotPhotoPreCaptureSelfTimer;
      type     = ECamActivePaletteItemTypePreCapture;    
      },                          
    /*CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemSequenceMode;
      cmd_id   = ECamCmdToggleMulti; 
      position = ECamAPSlotPhotoPreCaptureSequence; 
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },*/
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoColourFilter;
      cmd_id   = ECamCmdCaptureSetupColourFilterStill; 
      position = ECamAPSlotPhotoPreCaptureColour;
      type     = ECamActivePaletteItemTypePreCapture;
      }
             
    };
  }




//----------------------------------------------------------------------------
// r_cam_emb_still_pre_capture_ap_items
//
// Embedded still pre-capture active palette items in advanced user mode.
// (See r_cam_emb_still_pre_capture_ap_items_novice)
//----------------------------------------------------------------------------
//  
RESOURCE ARRAY r_cam_emb_still_pre_capture_ap_items_advanced
  {
  items =
    {
    /*
    * NOTE: The position attribute is ignored by current
    *       Active Palette implementation.
    */
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemVideoModeSelect; 
      cmd_id   = ECamCmdNewVideo;
      position = ECamAPSlotPhotoPreCaptureMode;
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoScene;       
      cmd_id   = ECamCmdCaptureSetupSceneStill;
      position = ECamAPSlotPhotoPreCaptureScene;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoFlash;
      cmd_id   = ECamCmdCaptureSetupFlashStill;
      position = ECamAPSlotPhotoPreCaptureFlash;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemFaceTracking; 
      cmd_id   = ECamCmdToggleFacetracking;
      position = ECamAPSlotPhotoPreCaptureFacetracking;
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },      
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicSelfTimer;
      cmd_id   = ECamCmdCaptureSetupSelfTimer;
      position = ECamAPSlotPhotoPreCaptureSelfTimer;
      type     = ECamActivePaletteItemTypePreCapture;    
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoColourFilter;
      cmd_id   = ECamCmdCaptureSetupColourFilterStill; 
      position = ECamAPSlotPhotoPreCaptureColour;
      type     = ECamActivePaletteItemTypePreCapture;
      } ,
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemViewfinderGrid;
      cmd_id   = ECamCmdViewfinderGrid; 
      position = ECamAPSlotPhotoPreCaptureVfGrid; 
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoWhiteBalance;
      cmd_id   = ECamCmdCaptureSetupWhiteBalanceStill;
      position = ECamAPSlotPhotoPreCaptureWB;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoExposure;
      cmd_id   = ECamCmdCaptureSetupExposureStill; 
      position = ECamAPSlotPhotoPreCaptureEV; 
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoImageSharpness;
      cmd_id   = ECamCmdCaptureSetupImageSharpnessStill; 
      position = ECamAPSlotPhotoPreCaptureSharpness;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoContrast;
      cmd_id   = ECamCmdCaptureSetupContrastStill; 
      position = ECamAPSlotPhotoPreCaptureContrast;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM 
      {
      item_id  = ECamSettingItemDynamicPhotoLightSensitivity;
      cmd_id   = ECamCmdCaptureSetupLightSensitivityStill; 
      position = ECamAPSlotPhotoPreCaptureISO;
      type     = ECamActivePaletteItemTypePreCapture;
      }
    };
  }

//----------------------------------------------------------------------------
// r_cam_emb_still_pre_capture_ap_items_novice
//
// Embedded still pre-capture active palette items in novice user mode.
// (Less items than in advanced user mode.)
//----------------------------------------------------------------------------
//   
RESOURCE ARRAY r_cam_emb_still_pre_capture_ap_items_novice
  {
  items =
    {
    /*
    * NOTE: The position attribute is ignored by current
    *       Active Palette implementation.
    */
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemVideoModeSelect; 
      cmd_id   = ECamCmdNewVideo;
      position = ECamAPSlotPhotoPreCaptureMode;
      type     = ECamActivePaletteItemTypePreCaptureNonSetting;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoScene;       
      cmd_id   = ECamCmdCaptureSetupSceneStill;
      position = ECamAPSlotPhotoPreCaptureScene;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoFlash;
      cmd_id   = ECamCmdCaptureSetupFlashStill;
      position = ECamAPSlotPhotoPreCaptureFlash;
      type     = ECamActivePaletteItemTypePreCapture;
      },
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicSelfTimer;
      cmd_id   = ECamCmdCaptureSetupSelfTimer;
      position = ECamAPSlotPhotoPreCaptureSelfTimer;
      type     = ECamActivePaletteItemTypePreCapture;    
      },                          
    CAM_ACTIVE_PALETTE_ITEM
      {
      item_id  = ECamSettingItemDynamicPhotoColourFilter;
      cmd_id   = ECamCmdCaptureSetupColourFilterStill; 
      position = ECamAPSlotPhotoPreCaptureColour;
      type     = ECamActivePaletteItemTypePreCapture;
      }
    };
  }


//----------------------------------------------------
//   
//    r_cam_still_post_capture_ap_items_secondary
//    Still post-capture active palette items
//    for secondary camera.
//
//----------------------------------------------------
//  
RESOURCE ARRAY r_cam_still_post_capture_ap_items_secondary
    {
    items =
        {
        CAM_ACTIVE_PALETTE_ITEM
            { 
            cmd_id = ECamCmdSend;
            position = 0;
            type = ECamActivePaletteItemTypePostCapture;
            },
        CAM_ACTIVE_PALETTE_ITEM
            { 
            cmd_id = ECamCmdSendToCallerMultimedia;
            position = 1;
            type = ECamActivePaletteItemTypePostCapture;
            },            
        CAM_ACTIVE_PALETTE_ITEM
            {
            cmd_id = ECamCmdOneClickUpload;
            position = 2;
            type = ECamActivePaletteItemTypePostCapture;               
            }, 
        CAM_ACTIVE_PALETTE_ITEM
            { 
            cmd_id = ECamCmdPhotos;
            position = 6;
            type = ECamActivePaletteItemTypePostCapture;
            },           
        CAM_ACTIVE_PALETTE_ITEM
            {
            cmd_id = ECamCmdDelete; 
            position = 4; 
            type = ECamActivePaletteItemTypePostCapture;
            }
        };            
    }

//----------------------------------------------------
//   
//    r_cam_still_post_capture_ap_items
//    Still post-capture active palette items
//
//----------------------------------------------------
//	
RESOURCE ARRAY r_cam_still_post_capture_ap_items
        {
        items =
            {
            CAM_ACTIVE_PALETTE_ITEM
                { 
                cmd_id = ECamCmdSend;
                position = 0;
                type = ECamActivePaletteItemTypePostCapture;
                },
            CAM_ACTIVE_PALETTE_ITEM
                { 
                cmd_id = ECamCmdSendToCallerMultimedia;
                position = 1;
                type = ECamActivePaletteItemTypePostCapture;
                },
            CAM_ACTIVE_PALETTE_ITEM
                {
                cmd_id = ECamCmdOneClickUpload;
                position = 2;
                type = ECamActivePaletteItemTypePostCapture;
                },
            CAM_ACTIVE_PALETTE_ITEM
                {
                cmd_id = ECamCmdAddToAlbum; 
                position = 3; 
                type = ECamActivePaletteItemTypePostCapture;
                },
	   CAM_ACTIVE_PALETTE_ITEM
                {
                cmd_id = ECamCmdProperties; 
                position = 4; 
                type = ECamActivePaletteItemTypePostCapture;
                },
            CAM_ACTIVE_PALETTE_ITEM
                {
                cmd_id   = ECamCmdPhotos;
                position = 5;
                type     = ECamActivePaletteItemTypePostCapture;    
                },                  
             CAM_ACTIVE_PALETTE_ITEM
                {
                cmd_id = ECamCmdDelete; 
                position = 7; 
                type = ECamActivePaletteItemTypePostCapture;
                }
			};
        }

//----------------------------------------------------
//   
//    r_cam_still_pre_capture_view_camcorder
//    Still pre-capture view
//
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_cam_still_pre_capture_view_camcorder
    {
    menubar = r_cam_still_pre_capture_menubar_camcorder;
    cba = r_cam_softkeys_options_exit;    
    toolbar = r_cam_still_precapture_toolbar;
    }

// ---------------------------------------------------------
//   
//   r_cam_still_pre_capture_menubar_camcorder
//   Menubar for still image pre-capture view
//
// ---------------------------------------------------------
//
RESOURCE MENU_BAR r_cam_still_pre_capture_menubar_camcorder
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_cam_still_pre_capture_menu_camcorder;
            }
        };
    }

// ---------------------------------------------------------
//   
//   r_cam_still_pre_capture_menu_camcorder
//   Options menu for still image pre capture view
//
// ---------------------------------------------------------
//
RESOURCE MENU_PANE r_cam_still_pre_capture_menu_camcorder
  {
  items = 
    {
    MENU_ITEM
      {
      command = ECamCmdSwitchCamera;
      txt     = qtn_lcam_options_cam2;
      },
    MENU_ITEM
      {
      command = ECamCmdSettings;
      txt     = qtn_lcam_cmd_settings;
      },
    MENU_ITEM
      {
      command = ECamCmdNewVideo;
      txt     = qtn_lcam_options_video_mode;
      },
      
    MENU_ITEM
      {
      command = ECamCmdPhotos;
      txt     = qtn_lcam_options_go_to_photos;
      },
    MENU_ITEM
      {
      command = EAknCmdHelp;
      txt     = qtn_options_help;
      },
    MENU_ITEM
      {
      command = ECamCmdInternalExit;
      txt     = qtn_options_exit;
      }
    };
  }

//----------------------------------------------------
//   
//    r_cam_still_post_capture_view_camcorder
//    Still post-capture view
//
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_cam_still_post_capture_view_camcorder
    {
    menubar = r_cam_still_post_capture_menubar_camcorder;
    cba = r_cam_softkeys_back;
    toolbar = r_cam_still_postcapture_toolbar;
    }

// ---------------------------------------------------------
//   
//   r_cam_still_post_capture_menubar_camcorder
//   Menubar for still image post capture view
//
// ---------------------------------------------------------
//
RESOURCE MENU_BAR r_cam_still_post_capture_menubar_camcorder
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_cam_still_post_capture_menu_camcorder;
            }
        };
    }

// ---------------------------------------------------------
//   
//   r_cam_still_post_capture_menu_camcorder
//   Options menu for still image post capture view
//
// ---------------------------------------------------------
//
RESOURCE MENU_PANE r_cam_still_post_capture_menu_camcorder
    {
    items = 
        {
        MENU_ITEM
            {
            command = ECamCmdSend;
            txt = qtn_options_send_via;
            },
        MENU_ITEM
            {
            command = ECamCmdSendToCallerMultimedia;
            txt = qtn_lcam_options_send_to_call;
            },
        MENU_ITEM
            {
            command = KAiwCmdAssign;
            txt     = qtn_lcam_use_image_postcapture_menu;
            cascade = AIW_INTELLIGENT_CASCADE_ID;
            },
        MENU_ITEM
            {
            command = ECamCmdShareOnOvi;
            // AIW provider fills the menu item title.
            // No submenu, only 1 provider acccepted.
            txt     = "";
            },
        MENU_ITEM
            {
            command = ECamCmdRenameImage;
            txt = qtn_lcam_cmd_rename_image;
            }, 
        MENU_ITEM
            {
            command = ECamCmdAddToAlbum;
            txt = qtn_lcam_options_add_to_album;
            },             
        MENU_ITEM
            {
            command = ECamCmdProperties;
            txt = qtn_lcam_options_tags;
            },   
        MENU_ITEM
            {
            command = ECamCmdPhotos;
            txt     = qtn_lcam_options_go_to_photos ;
            },            
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = ECamCmdInternalExit;
            txt = qtn_options_exit;
            }
        };
    }



// ---------------------------------------------------------
//   
//   r_cam_still_precap_navicounter_decorations_camcorder
//   Decorations for the navicounter in still precap
//
// ---------------------------------------------------------
//
RESOURCE CAM_DECORATIONS r_cam_still_precap_navicounter_decorations_camcorder
	{
	decorations = 
		{
		CAM_DECORATION
			{
			type = ECamScreenDecorationBlendedBackground;
			decoration = 
				{
				CAM_BLENDED_BACKGROUND
					{
					// Extended under the battery icon.
					// Blended background height modified 1 pixel higher.
					tl_x  = 0;   // 20; // 0 
					tl_y  = 219+120; // 220;
					width = 107; //92;  // 72; // 86
					}
				};
			}
		};
	}

// ---------------------------------------------------------
//   
//   r_cam_still_precap_navicounter_decorations_camcorder_location
//   Decorations for the navicounter in still precap with location icon
//
// ---------------------------------------------------------
//
RESOURCE CAM_DECORATIONS r_cam_still_precap_navicounter_decorations_camcorder_location
	{
	decorations = 
		{
		CAM_DECORATION
			{
			type = ECamScreenDecorationBlendedBackground;
			decoration = 
				{
				CAM_BLENDED_BACKGROUND
					{
					tl_x = 0; //20;  
					tl_y = 220;
					width = 122; //91;//86;
					}
				};
			}
		};
	}

// ---------------------------------------------------------
//   
//   r_cam_still_postcap_navicounter_decorations_camcorder
//   Decorations for the navicounter in still precap
//
// ---------------------------------------------------------
//
RESOURCE CAM_DECORATIONS r_cam_still_postcap_navicounter_decorations_camcorder
	{
	decorations = 
		{
		CAM_DECORATION
			{
			type = ECamScreenDecorationBlendedBackground;
			decoration = 
				{
				CAM_BLENDED_BACKGROUND
					{
          // Background height increased by one pixel
					tl_x = 0;
					tl_y  = 219; // 220;
					width = 22; //75; //for battery icon.
					}
				};
			}
		};
	}

#endif //CAMERAAPP_PLUGIN_BUILD
