/*
* Copyright (c) 2008-2010 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for the Camera Application*
*/


//  RESOURCE IDENTIFIER
NAME    NCSE // 4 letter ID, must be same as vgacamsettings.rss ID

#include <eikon.rh>     // signature
#include <avkon.rh>     // AVKON_LAYOUT_TEXT AVKON_NOTE  
#include <avkon.rsg>    // R_AVKON_SOFTKEYS_EMPTY
#include <appinfo.rh>   // LOCALISABLE_APP_INFO 
#include <avkon.mbg> 
#include <aknsconstants.hrh>  // EAknsMajorGeneric
#include <e32keys.h>          // For EStdKeyDevice3
#include <AiwCommon.rh>       // For AIW_INTEREST
#include <cameraapp.mbg>      // EMbmCameraappQgn_*
#include <cam.loc>
#include <avkon.loc>

#include "Cam.rh" // CAM_ENGINE_UPDATE
#include "CamConstantsCamcorder.hrh"  
#include "CamConstantsViewMode.hrh"
#include "CamConstantsPortrait.hrh"

// ===========================================================================
// Constants  
#define KCamCaptureSoundFile1 "z:\\system\\sounds\\digital\\cameraappCapture1.wav"
#define KCamCaptureSoundFile2 "z:\\system\\sounds\\digital\\cameraappCapture2.wav"
#define KCamCaptureSoundFile3 "z:\\system\\sounds\\digital\\cameraappCapture3.wav"
#define KCamCaptureSoundFile4 "z:\\system\\sounds\\digital\\cameraappCapture4.wav"
#define KCamBurstCaptureSoundFile1 "z:\\system\\sounds\\digital\\cameraappCaptureShort1.wav"
#define KCamBurstCaptureSoundFile2 "z:\\system\\sounds\\digital\\cameraappCaptureShort2.wav"
#define KCamBurstCaptureSoundFile3 "z:\\system\\sounds\\digital\\cameraappCaptureShort3.wav"
#define KCamBurstCaptureSoundFile4 "z:\\system\\sounds\\digital\\cameraappCaptureShort4.wav"

#define KCamStartSoundFile "z:\\system\\sounds\\digital\\cameraappStart.wav"
#define KCamStopSoundFile  "z:\\system\\sounds\\digital\\cameraappStop.wav"
#define KCamPauseSoundFile "z:\\system\\sounds\\digital\\cameraappStop.wav"

#define KCamAutoFocusSuccFile "z:\\system\\sounds\\digital\\cameraappFocusSucc.wav"

#define CAMERAAPP_BITMAP_FILE "z:\\resource\\apps\\cameraapp.mif"



//  RESOURCE DEFINITIONS 
RESOURCE RSS_SIGNATURE { }
RESOURCE TBUF { buf = "NCSE"; }


/********************************************
*               TBUF
*********************************************/

// ---------------------------------------------------
//
//    r_cam_scene_title_auto
//    Title of Auto scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_auto
    {
    buf = qtn_lcam_scene_auto;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_user
//    Title of User scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_user
    {
    buf = qtn_lcam_scene_user;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_macro
//    Title of Macro scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_macro
    {
    buf = qtn_lcam_scene_macro;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_landscape
//    Title of Landscape scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_landscape
    {
    buf = qtn_lcam_scene_land;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_portrait
//    Title of Portrait scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_portrait
    {
    buf = qtn_lcam_scene_port;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_text
//    Title of Text scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_text
    {
    buf = qtn_lcam_scene_text;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_night
//    Title of Night scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_night
    {
    buf = qtn_lcam_scene_night;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_sports
//    Title of Sports scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_sports
    {
    buf = qtn_lcam_scene_sport;
    }   

// ---------------------------------------------------
//
//    r_cam_scene_title_normal
//    Title of Normal scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_normal
    {
    buf = qtn_lcam_scene_auto;
    }   

// ---------------------------------------------------
//
//    r_cam_scene_title_night_landscape
//    Title of Night Landscape scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_night_landscape
    {
    buf = qtn_lcam_scene_nightland;
    }   

// ---------------------------------------------------
//
//    r_cam_scene_title_night_portrait
//    Description of Night Portrait scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_night_portrait
    {
    buf = qtn_lcam_scene_nightport;
    }

// ---------------------------------------------------
//
//    r_cam_scene_title_candlelight
//    Description of Candlelight scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_title_candlelight
    {
    buf = qtn_lcam_scene_candle;
    }

/**************************************
*       Explanation text TBUF         *
**************************************/

// ---------------------------------------------------
//
//    r_cam_scene_title_auto
//    Description of Auto scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_auto
    {
    buf = qtn_lcam_scene_auto_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_user
//    Description of User scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_user
    {
    buf = qtn_lcam_scene_user_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_macro
//    Description of macro scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_macro
    {
    buf = qtn_lcam_scene_macro_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_landscape
//    Description of Landscape scene in scene settings view
//    this is used when autofocus is not supported
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_landscape
    {
     buf = qtn_lcam_scene_land2_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_landscape_autofocus
//    Description of Landscape scene in scene settings view
//    this is used when autofocus is supported
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_landscape_autofocus
    {
     buf = qtn_lcam_scene_land_ex;
    }


// ---------------------------------------------------
//
//    r_cam_scene_description_portrait
//    Description of Portrait scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_portrait
    {
    buf = qtn_lcam_scene_port2_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_text
//    Description of Text scene in scene settings view
//
// ---------------------------------------------------
//

RESOURCE TBUF r_cam_scene_description_text
    {
    buf = qtn_lcam_scene_text_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_night
//    Description of Night scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_night
    {
    buf = qtn_lcam_scene_night_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_sports
//    Description of Sports scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_sports
    {
    buf = qtn_lcam_scene_sport_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_normal
//    Description of Normal scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_normal
    {
    buf = qtn_lcam_scene_normal_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_night_landscape
//    Description of Night Landscape scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_night_landscape
    {
    buf = qtn_lcam_scene_nightland_ex;
    }

// ---------------------------------------------------
//
//    r_cam_scene_description_night_portrait
//    Description of Night Portrait scene in scene settings view
//
// ---------------------------------------------------
//
RESOURCE TBUF r_cam_scene_description_night_portrait
    {
    buf = qtn_lcam_scene_nightport_ex;
    }

//-----------------------------------------------------------------------------
//
//    r_qtn_lcam_tt_image_editor
//    Tooltip for "Image editor" button in postcapture view.
//    Uses string defined in cam.loc
//
//-----------------------------------------------------------------------------
//	
RESOURCE TBUF r_qtn_lcam_tt_image_editor
	{
	buf = qtn_lcam_tt_image_editor;
	}

//-----------------------------------------------------------------------------
//
//    r_qtn_lcam_tt_video_editor
//    Tooltip for "Video editor" button in postcapture view.
//    Uses string defined in cam.loc
//
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tt_video_editor
	{
	buf = qtn_lcam_tt_video_editor;
	}

//-----------------------------------------------------------------------------
//
//    r_qtn_lcam_hdmi_cable_detected
//    This popup note is displayed when HDMI cable is plugged to the device
//    while video recording is ongoing. Video recording is not allowed
//    with HDMI connection.
//    popup_note_window
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_hdmi_cable_detected
	{
	buf = qtn_lcam_hdmi_cable_detected;
	}

//-----------------------------------------------------------------------------
//
//    r_qtn_lcam_hdmi_remove_cable
//    This popup note is displayed when user tries to start 
//    video recording while HDMI cable is plugged. 
//    Video recording is not allowed with HDMI connection.
//    popup_note_window
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_hdmi_remove_cable
	{
	buf = qtn_lcam_hdmi_remove_cable;
	}

	
/**************************************
*         Other structures            *
**************************************/

//----------------------------------------------------
//   
//    r_cam_photo_user_scene_setup_list_scenebase_data
//    The data for the scene base item in the 
//    photo user scene setup list
//
//----------------------------------------------------
//
RESOURCE CAM_USER_SCENE_SETUP_LIST_ITEM_DATA r_cam_photo_user_scene_setup_list_scenebase_data
    {
    id = ECamSettingItemUserSceneBasedOnScene;
    text = qtn_lcam_set_user_scene;
    user_scene_setup_list_item_values =
        {
        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {          
            id = ECamSceneNight;
            text = qtn_lcam_user_scene_night;
            },
   
        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneMacro;
            text = qtn_lcam_user_scene_macro;
            },
   
        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamScenePortrait;
            text = qtn_lcam_user_scene_port;
            },

        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneAuto;
            text = qtn_lcam_user_scene_auto;
            },

        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneScenery;
            text = qtn_lcam_user_scene_land;
            },

        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneSports;
            text = qtn_lcam_user_scene_sport;
            },

        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneNormal;
            text = qtn_lcam_user_scene_auto;
            },
            
        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneNightScenery;
            text = qtn_lcam_scene_nightland;
            },
            
        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneNightPortrait;
            text = qtn_lcam_user_scene_nightport;
            },
            
        CAM_USER_SCENE_SETUP_LIST_ITEM_VALUE
            {
            id = ECamSceneCandlelight;
            text = qtn_lcam_scene_candle;
            }
        
        };
    }

RESOURCE ARRAY r_cam_capture_setup_list_user_scene_shooting_mode
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_auto;
            setting_value_id = ECamSceneAuto;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_auto;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_auto_s;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_macro;
            setting_value_id = ECamSceneMacro;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_closeup;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_macro_s;
            },            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_port;
            setting_value_id = ECamScenePortrait;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_portrait;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_port_s;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_land;
            setting_value_id = ECamSceneScenery;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_landscape;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_land_s;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_sport;
            setting_value_id = ECamSceneSports;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_sport;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_sport_s;
            },  
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_night;
            setting_value_id = ECamSceneNight;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_night;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_night_s;
            },                          
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_user_scene_nightport;
            setting_value_id = ECamSceneNightPortrait;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_portrait_night;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_nightport_s;
            }                                                                              
        };
    }

RESOURCE ARRAY r_cam_capture_setup_list_user_scene_shooting_mode_summary
    {
    items =
        {
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneAuto;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_auto;
            summary_title_text       = qtn_lcam_scene_auto;
            summary_description_text = qtn_lcam_scene_auto_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_auto_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneMacro;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_closeup;
            summary_title_text       = qtn_lcam_scene_macro;
            summary_description_text = qtn_lcam_scene_macro_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_macro_l;
            },            
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamScenePortrait;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_portrait;
            summary_title_text       = qtn_lcam_scene_port;
            summary_description_text = qtn_lcam_scene_port2_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_port_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneScenery;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_landscape;
            summary_title_text       = qtn_lcam_scene_land;
            // this is used when autofocus is not supported
            summary_description_text = qtn_lcam_scene_land2_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_land_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneSports;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_sport;
            summary_title_text       = qtn_lcam_scene_sport;
            summary_description_text = qtn_lcam_scene_sport_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_sport_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneNight;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_night;
            summary_title_text       = qtn_lcam_scene_night;
            summary_description_text = qtn_lcam_scene_night_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_night_l;
            },            
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneNightPortrait;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_portrait_night;
            summary_title_text       = qtn_lcam_scene_nightport;
            summary_description_text = qtn_lcam_scene_nightport_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_nightport_l;
            }
        };
    } 

RESOURCE ARRAY r_cam_capture_setup_list_photo_shooting_mode
    {
    items=
        {
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_auto;
            setting_value_id = ECamSceneAuto;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_auto;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_auto_s;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_user;
            setting_value_id = ECamSceneUser;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_userscene;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_user_s;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_macro;
            setting_value_id = ECamSceneMacro;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_closeup;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_macro_s;
            },            
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_port;
            setting_value_id = ECamScenePortrait;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_portrait;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_port_s;
            },
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_land;
            setting_value_id = ECamSceneScenery;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_landscape;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_land_s;
            },
        CAPTURE_SETUP_LIST_ITEM    
            {
            item_text        = qtn_lcam_scene_sport;
            setting_value_id = ECamSceneSports;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_sport;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_sport_s;
            },  
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_night;
            setting_value_id = ECamSceneNight;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_night;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_night_s;
            },                               
        CAPTURE_SETUP_LIST_ITEM
            {
            item_text        = qtn_lcam_scene_nightport;
            setting_value_id = ECamSceneNightPortrait;
            bitmap_id        = EMbmCameraappQgn_indi_cam4_mode_portrait_night;
            //bitmap_id = EMbmCameraappQgn_ico_lcam_sce_nightport_s;
            }                                                                       
        };
    }


RESOURCE ARRAY r_cam_capture_setup_list_photo_shooting_mode_summary
    {
    items =
        {
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneAuto;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_auto;
            summary_title_text       = qtn_lcam_scene_auto;
            summary_description_text = qtn_lcam_scene_auto_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_auto_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneUser;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_userscene;
            summary_title_text       = qtn_lcam_scene_user;
            summary_description_text = qtn_lcam_scene_user_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_user_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneMacro;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_closeup;
            summary_title_text       = qtn_lcam_scene_macro;
            summary_description_text = qtn_lcam_scene_macro_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_macro_l;
            },               
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamScenePortrait;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_portrait;
            summary_title_text       = qtn_lcam_scene_port;
            summary_description_text = qtn_lcam_scene_port2_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_port_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneScenery;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_landscape;
            summary_title_text       = qtn_lcam_scene_land;
            // this is used when autofocus is not supported
            summary_description_text = qtn_lcam_scene_land2_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_land_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneSports;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_sport;
            summary_title_text       = qtn_lcam_scene_sport;
            summary_description_text = qtn_lcam_scene_sport_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_sport_l;
            },
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneNight;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_night;
            summary_title_text       = qtn_lcam_scene_night;
            summary_description_text = qtn_lcam_scene_night_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_night_l;
            },                        
        CAM_MODE_SELECT_SUMMARY
            {
            setting_value_id         = ECamSceneNightPortrait;
            summary_icon             = EMbmCameraappQgn_indi_cam4_mode_portrait_night;
            summary_title_text       = qtn_lcam_scene_nightport; 
            summary_description_text = qtn_lcam_scene_nightport_ex;
            //summary_icon = EMbmCameraappQgn_ico_lcam_sce_nightport_l;
            }
        };
    }

////////////////////////////////////////////
// Common for both VGA and NHD resourses
////////////////////////////////////////////

//----------------------------------------------------
//   
//    r_cam_namebase_video
//    Base name for video files
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_namebase_video
    {
    buf = qtn_lcam_namebase_video;
    }


//----------------------------------------------------
//   
//    r_cam_namebase_image
//    Base name for image files
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_namebase_image
    {
    buf = qtn_lcam_namebase_image;
    }


//----------------------------------------------------
//   
//    r_cam_generic_title_name
//    Title name used in case of error
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_generic_title_name
	{
	buf = qtn_lcam_title_text_camera;
	}
	
	
//----------------------------------------------------
//   
//    r_cam_camera_subfolder
//    Camera specific subfolder
//
//----------------------------------------------------
//
RESOURCE TBUF r_cam_camera_subfolder
	{
	buf = qtn_lcam_camera_subfolder;
	}


//----------------------------------------------------
//   
//    r_cam_sound_list
//    Sound info list containing the Camera sounds
//
//----------------------------------------------------
//
RESOURCE AVKON_SOUND_INFO_LIST r_cam_sound_list
    {
    list = 
        {
        // Still image snap sounds
        AVKON_SOUND_INFO 
            { 
            sid = ECamStillCaptureSoundId1; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamCaptureSoundFile1;
            volume = 5;
            },
        AVKON_SOUND_INFO 
            { 
            sid = ECamStillCaptureSoundId2; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamCaptureSoundFile2;
            volume = 5;
            },
        AVKON_SOUND_INFO 
            { 
            sid = ECamStillCaptureSoundId3; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamCaptureSoundFile3;
            volume = 5;
            },
        AVKON_SOUND_INFO 
            { 
            sid = ECamStillCaptureSoundId4; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamCaptureSoundFile4;
            volume = 5;
            },            
        AVKON_SOUND_INFO 
            { 
            sid = ECamVideoStartSoundId; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamStartSoundFile;
            volume = 5;
            },
        AVKON_SOUND_INFO 
            { 
            sid = ECamVideoStopSoundId; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamStopSoundFile;
            volume = 5;
            },
        AVKON_SOUND_INFO 
            { 
            sid = ECamVideoPauseSoundId; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamPauseSoundFile;
            volume = 5;
            },
        AVKON_SOUND_INFO 
            { 
            sid = ECamAutoFocusComplete; 
            priority = EAvkonKeyClickPriority;
            preference = EAknAudioPrefCamera;
            file = KCamAutoFocusSuccFile;
            volume = 5;
            }
         
        };
    }

//----------------------------------------------------
//   
//    r_cam_silent_ok_key_list
//    Sound key list to disable selection key sound  
//
//----------------------------------------------------
//
RESOURCE AVKON_SKEY_LIST r_cam_silent_ok_key_list
    {
    list=
        {
        AVKON_SKEY_INFO 
            {
            key = EStdKeyDevice3;
            sid = EAvkonSIDNoSound;
            },
        AVKON_SKEY_INFO
            {
            key = EStdKeyDevice3;
            sid = EAvkonSIDNoSound;
            type = ESKeyTypeLong;
            },
        AVKON_SKEY_INFO
            {
            key = EStdKeyDevice3;
            sid = EAvkonSIDNoSound; 
            type = ESKeyTypeRepeat;
            },
        AVKON_SKEY_INFO
            {
            key = EStdKeyUpArrow;
            sid = EAvkonSIDNoSound;
            type = ESKeyTypeRepeat;
            },
        AVKON_SKEY_INFO
            {
            key = EStdKeyUpArrow;
            sid = EAvkonSIDNoSound;
            type = ESKeyTypeLong;
            },
        AVKON_SKEY_INFO
            {
            key = EStdKeyDownArrow;
            sid = EAvkonSIDNoSound;
            type = ESKeyTypeRepeat;
            },
        AVKON_SKEY_INFO
            {
            key = EStdKeyDownArrow;
            sid = EAvkonSIDNoSound;
            type = ESKeyTypeLong;
            }
        };
    }  

//----------------------------------------------------
//
// Button state extensions for toolbar and toolbar extension buttons.
// These is required to support skinned graphics for the buttons.
//
//----------------------------------------------------
//

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_capture
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbCapture;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_video
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4Video;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_mode_camera
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4ModeCamera;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_record
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbRecord;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_camera
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4Camera;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_capture
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4Capture;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_autoflash
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4Autoflash;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_goto_photos
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4GotoGallery;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_add_to_album
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbAddToAlbum;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_send
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbSend;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_delete
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbDelete;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_light_off
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbLightOff;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_play
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbPlay;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_goto_photos
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbGotoGallery;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_upload
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbUpload;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_mark
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbMark;
    }
	
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_cam_ext_qgn_indi_cam4_tb_edit
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiMgTbEdit; //We are reusing the media gallery skinid 
    }


//----------------------------------------------------
//   
//    r_cam_still_precapture_toolbar_portrait
//    Toolbar for still pre-capture view for secondary
//    camera
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_precapture_toolbar_portrait
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdCaptureImage;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_capture;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_capture_mask;
                        helptxt = qtn_lcam_tt_capture;
                        extension = r_cam_ext_qgn_indi_cam4_tb_capture;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewVideo;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_video; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_video_mask;
                        helptxt = qtn_lcam_tt_video_mode;
                        extension = r_cam_ext_qgn_indi_cam4_video;
                        }
                    };
                };
            },
         TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSwitchCamera;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_tb_cam4_goto_main;
                        bmpmask = EMbmCameraappQgn_indi_tb_cam4_goto_main_mask;
                        helptxt = qtn_lcam_tt_camera_main;
                        extension = r_cam_ext_qgn_indi_cam4_mode_camera;
                        }
                    };
                };
            }
        };
    }
            
//----------------------------------------------------
//   
//    r_cam_still_precapture_toolbar_landscape        
//    Toolbar for still pre-capture view for secondary
//    camera
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_precapture_toolbar_landscape
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        /*TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdCaptureImage;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_capture;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_capture_mask;
                        helptxt = qtn_lcam_tt_capture;
                        extension = r_cam_ext_qgn_indi_cam4_tb_capture;
                        }
                    };
                };
            },*/
        
         TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewVideo;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_video; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_video_mask;
                        helptxt = qtn_lcam_tt_video_mode;
                        extension = r_cam_ext_qgn_indi_cam4_video;
                        }
                    };
                };
            },
         TBAR_CTRL
             {
             type = EAknCtButton;
             id = ECamCmdPhotos;
             control = AVKON_BUTTON
                 {
                 flags = KAknButtonNoFrame; 
                 states =
                     {
                     AVKON_BUTTON_STATE
                         {
                         bmpfile = CAMERAAPP_BITMAP_FILE;
                         bmpid = EMbmCameraappQgn_indi_cam4_goto_gallery;
                         bmpmask = EMbmCameraappQgn_indi_cam4_goto_gallery_mask;
                         helptxt = qtn_lcam_tt_go_to_photos;
                         extension = r_cam_ext_qgn_indi_cam4_goto_photos;
                         }
                     };
                 };
             },   
         TBAR_CTRL
             {
             type = EAknCtButton;
             id = ECamCmdSwitchCamera;
             control = AVKON_BUTTON
                 {
                 flags = KAknButtonNoFrame; 
                 states =
                     {
                     AVKON_BUTTON_STATE
                         {
                         bmpfile = CAMERAAPP_BITMAP_FILE;
                         bmpid = EMbmCameraappQgn_indi_tb_cam4_goto_main;
                         bmpmask = EMbmCameraappQgn_indi_tb_cam4_goto_main_mask;
                         helptxt = qtn_lcam_tt_camera_main;
                         extension = r_cam_ext_qgn_indi_cam4_mode_camera;
                         }
                     };
                 };
             }  
        };
    }

//----------------------------------------------------
//   
//    r_cam_video_precapture_toolbar_portrait
//    Toolbar and toolbar extension for video pre-capture view for secondary
//    camera
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_precapture_toolbar_portrait
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdRecord;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_record;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_record_mask;
                        helptxt = qtn_lcam_tt_record;
                        extension = r_cam_ext_qgn_indi_cam4_tb_record;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewPhoto;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_still; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_still_mask; 
                        helptxt = qtn_lcam_tt_still_mode;
                        extension = r_cam_ext_qgn_indi_cam4_camera;
                        }
                    };
                };
            },
         TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSwitchCamera;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_tb_cam4_goto_main;
                        bmpmask = EMbmCameraappQgn_indi_tb_cam4_goto_main_mask;
                        helptxt = qtn_lcam_tt_camera_main;
                        extension = r_cam_ext_qgn_indi_cam4_mode_camera;
                        }
                    };
                };
            }
        };
    }
     

//----------------------------------------------------
//   
//    r_cam_video_precapture_toolbar_landscape   
//    Toolbar and toolbar extension for video pre-capture view for secondary
//    camera
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_precapture_toolbar_landscape
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        /*TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdRecord;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_record;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_record_mask;
                        helptxt = qtn_lcam_tt_record;
                        extension = r_cam_ext_qgn_indi_cam4_tb_record;
                        }
                    };
                };
            },*/
                
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewPhoto;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_still; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_still_mask; 
                        helptxt = qtn_lcam_tt_still_mode;
                        extension = r_cam_ext_qgn_indi_cam4_camera;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPhotos;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_goto_gallery;
                        bmpmask = EMbmCameraappQgn_indi_cam4_goto_gallery_mask;
                        helptxt = qtn_lcam_tt_go_to_photos;
                        extension = r_cam_ext_qgn_indi_cam4_goto_photos;
                        }
                    };
                };
            },   
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSwitchCamera;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_tb_cam4_goto_main;
                        bmpmask = EMbmCameraappQgn_indi_tb_cam4_goto_main_mask;
                        helptxt = qtn_lcam_tt_camera_main;
                        extension = r_cam_ext_qgn_indi_cam4_mode_camera;
                        }
                    };
                };
            }  
        };
    }
     

//----------------------------------------------------
//   
//    r_cam_still_precapture_toolbar
//    Toolbar and toolbar extension for still pre-capture view for primary
//    camera
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_precapture_toolbar
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewVideo;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_video; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_video_mask;
                        helptxt = qtn_lcam_tt_video_mode;
                        extension = r_cam_ext_qgn_indi_cam4_video;
                        }
                    };
                };
            },
        /*TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdCaptureImage;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_capture;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_capture_mask;
                        helptxt = qtn_lcam_tt_capture;
                        extension = r_cam_ext_qgn_indi_cam4_tb_capture;
                        }
                    };
                };
            },*/    
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdCaptureSetupFlashStill;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_autoflash;
                        bmpmask = EMbmCameraappQgn_indi_cam4_autoflash_mask;
                        helptxt = qtn_lcam_tt_flash;
                        extension = r_cam_ext_qgn_indi_cam4_autoflash;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtToolbarExtension;
            id = ECamCmdToolbarExtension;

            control = AVKON_TOOLBAR_EXTENSION
                {
                flags = KAknToolbarDsaMode | KAknButtonNoFrame;
                helptxt = qtn_lcam_tt_open_extension;

                bmpFile = CAMERAAPP_BITMAP_FILE;

                bmpId = EMbmCameraappQgn_indi_cam4_tb_extension;
                bmpMask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                bmpSkinIdMajor = EAknsMajorGeneric;
                bmpSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                dimBmpid = EMbmCameraappQgn_indi_cam4_tb_extension;
                dimBmpmask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                dimSkinIdMajor = EAknsMajorGeneric;
                dimSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                pressBmpid = EMbmCameraappQgn_indi_cam4_tb_extension;
                pressBmpmask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                pressSkinIdMajor = EAknsMajorGeneric;
                pressSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                items =
                    {
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupSceneStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_scenes;
                                    }
                                };
                            };
                        },
                        
                        TBAR_CTRL 
                           {
                           type = EAknCtButton;
                           id = ECamCmdToggleFacetracking; 
                           control = AVKON_BUTTON
                              {
                              flags = KAknButtonNoFrame;
                              states =
                                 {
                                 AVKON_BUTTON_STATE
                                    {
                                     txt = qtn_lcam_tb_facedet_on; 
                                    }
                                  };
                               };
                            },       
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdViewfinderGrid;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_grid;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupSelfTimer;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_st;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupColourFilterStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_coltone;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupWhiteBalanceStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_wb;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupExposureStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_ev;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupLightSensitivityStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_isosetting;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupContrastStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_contr;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupImageSharpnessStill;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_sharp;
                                    }
                                };
                            };
                        },                        
                        TBAR_CTRL
                            {
                            type = EAknCtButton;
                            id = ECamCmdTimeLapseSlider; 
                            control = AVKON_BUTTON
                                {
                                flags = KAknButtonNoFrame;
                                states =
                                    {
                                    AVKON_BUTTON_STATE
                                        {
                                        txt = qtn_lcam_tb_sequence;
                                        }
                                    };
                                };
                            },
                     TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdPhotos;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    bmpfile = CAMERAAPP_BITMAP_FILE;
                                    bmpid = EMbmCameraappQgn_indi_cam4_goto_gallery;
                                    bmpmask = EMbmCameraappQgn_indi_cam4_goto_gallery_mask;
                                    txt = qtn_lcam_tb_go_to_photos;
                                    extension = r_cam_ext_qgn_indi_cam4_goto_photos;
                                    }
                                };
                            };
                        }/*,
                        TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdNewVideo;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    bmpfile = CAMERAAPP_BITMAP_FILE;
                                    bmpid = EMbmCameraappQgn_indi_cam4_video;
                                    bmpmask = EMbmCameraappQgn_indi_cam4_video_mask;
                                    txt = qtn_lcam_tb_switch_video_mode;
                                    extension = r_cam_ext_qgn_indi_cam4_video;
                                    }
                                };
                            };
                        }*/                        
                    };
                };
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_postcapture_common_toolbar
//    Toolbar for post-capture views( Primary/Secondary Still/Video views)
//
//----------------------------------------------------
//

RESOURCE AVKON_TOOLBAR r_cam_postcapture_common_toolbar
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarTransparent | KAknToolbarNoBackground;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
			TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdEdit;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_mg_tb_edit;
                        bmpmask = EMbmCameraappQgn_indi_mg_tb_edit_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_edit;
                        }
                    };
                };
            },
            TBAR_CTRL
                {
                type = EAknCtButton;
                id = ECamCmdPhotos;
                control = AVKON_BUTTON
                    {
                    flags = KAknButtonNoFrame;
                    states =
                        {
                        AVKON_BUTTON_STATE
                            {
                            bmpfile = CAMERAAPP_BITMAP_FILE;
                            bmpid = EMbmCameraappQgn_indi_cam4_tb_goto_gallery; 
                            bmpmask = EMbmCameraappQgn_indi_cam4_tb_goto_gallery_mask;
                            helptxt = qtn_lcam_tt_go_to_photos;
                            extension = r_cam_ext_qgn_indi_cam4_tb_goto_photos;
                            }
                        };
                    };
                },
		TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        // extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },		
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }
	
//----------------------------------------------------
//   
//    r_cam_still_postcapture_toolbar
//    Toolbar and toolbar extension for still post-capture view
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_postcapture_toolbar
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarTransparent | KAknToolbarNoBackground;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
            TBAR_CTRL
                {
                type = EAknCtButton;
                id = ECamCmdPhotos;
                control = AVKON_BUTTON
                    {
                    flags = KAknButtonNoFrame;
                    states =
                        {
                        AVKON_BUTTON_STATE
                            {
                            bmpfile = CAMERAAPP_BITMAP_FILE;
                            bmpid = EMbmCameraappQgn_indi_cam4_tb_goto_gallery; 
                            bmpmask = EMbmCameraappQgn_indi_cam4_tb_goto_gallery_mask;
                            helptxt = qtn_lcam_tt_go_to_photos;
                            extension = r_cam_ext_qgn_indi_cam4_tb_goto_photos;
                            }
                        };
                    };
                },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_still_postcapture_toolbar_upload
//    Toolbar and toolbar extension for still post-capture view
//    with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_postcapture_toolbar_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarTransparent | KAknToolbarNoBackground;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_still_postcapture_toolbar_portrait
//    Toolbar and toolbar extension for still post-capture 
//    portrait view
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_postcapture_toolbar_portrait
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPhotos;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_goto_gallery;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_goto_gallery_mask;
                        helptxt = qtn_lcam_tt_go_to_photos;
                        extension = r_cam_ext_qgn_indi_cam4_tb_goto_photos;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_still_postcapture_toolbar_landscape   
//    Toolbar and toolbar extension for still post-capture 
//    portrait view
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_postcapture_toolbar_landscape
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPhotos;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_goto_gallery;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_goto_gallery_mask;
                        helptxt = qtn_lcam_tt_go_to_photos;
                        extension = r_cam_ext_qgn_indi_cam4_tb_goto_photos;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }


//----------------------------------------------------
//
//    r_cam_still_postcapture_toolbar_portrait_upload
//    Toolbar and toolbar extension for still post-capture
//    portrait view with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_postcapture_toolbar_portrait_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_still_postcapture_toolbar_landscape_upload   
//    Toolbar and toolbar extension for still post-capture
//    portrait view with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_still_postcapture_toolbar_landscape_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }


//----------------------------------------------------
//
//    r_cam_video_precapture_toolbar_videolight
//    Toolbar and toolbar extension for video pre-capture view for primary
//    camera when using non-widescreen resolution
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_precapture_toolbar_videolight
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewPhoto;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_still; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_still_mask; 
                        helptxt = qtn_lcam_tt_still_mode;
                        extension = r_cam_ext_qgn_indi_cam4_camera;
                        }
                    };
                };
            },        
        /*TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdRecord;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_record;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_record_mask;
                        helptxt = qtn_lcam_tt_start_video_rec;
                        extension = r_cam_ext_qgn_indi_cam4_tb_record;
                        }
                    };
                };
            },*/
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdToggleVideoFlash;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_light_off;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_light_off_mask;
                        helptxt = qtn_lcam_tt_videoflash;
                        extension = r_cam_ext_qgn_indi_cam4_light_off;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtToolbarExtension;
            id = ECamCmdToolbarExtension;

            control = AVKON_TOOLBAR_EXTENSION
                {
                flags = KAknToolbarDsaMode | KAknButtonNoFrame;
                helptxt = qtn_lcam_tt_open_extension;

                bmpFile = CAMERAAPP_BITMAP_FILE;

                bmpId = EMbmCameraappQgn_indi_cam4_tb_extension;
                bmpMask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                bmpSkinIdMajor = EAknsMajorGeneric;
                bmpSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                dimBmpid = EMbmCameraappQgn_indi_cam4_tb_extension;
                dimBmpmask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                dimSkinIdMajor = EAknsMajorGeneric;
                dimSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                pressBmpid = EMbmCameraappQgn_indi_cam4_tb_extension;
                pressBmpmask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                pressSkinIdMajor = EAknsMajorGeneric;
                pressSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                items =
                    {
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupSceneVideo;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_scenes;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupWhiteBalanceVideo;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_wb;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupColourFilterVideo;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_coltone;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdPhotos;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    bmpfile = CAMERAAPP_BITMAP_FILE;
                                    bmpid = EMbmCameraappQgn_indi_cam4_goto_gallery;
                                    bmpmask = EMbmCameraappQgn_indi_cam4_goto_gallery_mask;
                                    txt = qtn_lcam_tb_go_to_photos;
                                    extension = r_cam_ext_qgn_indi_cam4_goto_photos;
                                    }
                                };
                            };
                        }/*,
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdNewPhoto;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    bmpfile = CAMERAAPP_BITMAP_FILE;
                                    bmpid = EMbmCameraappQgn_indi_cam4_camera;
                                    bmpmask = EMbmCameraappQgn_indi_cam4_camera_mask;
                                    txt = qtn_lcam_tb_switch_mode;
                                    extension = r_cam_ext_qgn_indi_cam4_camera;
                                    }
                                };
                            };
                        }*/                        
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_precapture_toolbar
//    Toolbar and toolbar extension for video pre-capture view for primary
//    camera when using non-widescreen resolution
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_precapture_toolbar
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdNewPhoto;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE; 
                        bmpid = EMbmCameraappQgn_indi_vid4_tb_still; 
                        bmpmask = EMbmCameraappQgn_indi_vid4_tb_still_mask; 
                        helptxt = qtn_lcam_tt_still_mode;
                        extension = r_cam_ext_qgn_indi_cam4_camera;
                        }
                    };
                };
            },        
        /*TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdRecord;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_record;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_record_mask;
                        helptxt = qtn_lcam_tt_start_video_rec;
                        extension = r_cam_ext_qgn_indi_cam4_tb_record;
                        }
                    };
                };
            },*/
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdCaptureSetupSceneVideo;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //txt = qtn_lcam_tb_scenes;
                        helptxt = qtn_lcam_tt_goto_scenemode_settings;
                        }
                    };
                };
            },    
        TBAR_CTRL
            {
            type = EAknCtToolbarExtension;
            id = ECamCmdToolbarExtension;

            control = AVKON_TOOLBAR_EXTENSION
                {
                flags = KAknToolbarDsaMode | KAknButtonNoFrame;
                helptxt = qtn_lcam_tt_open_extension;

                bmpFile = CAMERAAPP_BITMAP_FILE;

                bmpId = EMbmCameraappQgn_indi_cam4_tb_extension;
                bmpMask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                bmpSkinIdMajor = EAknsMajorGeneric;
                bmpSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                dimBmpid = EMbmCameraappQgn_indi_cam4_tb_extension;
                dimBmpmask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                dimSkinIdMajor = EAknsMajorGeneric;
                dimSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                pressBmpid = EMbmCameraappQgn_indi_cam4_tb_extension;
                pressBmpmask = EMbmCameraappQgn_indi_cam4_tb_extension_mask;
                pressSkinIdMajor = EAknsMajorGeneric;
                pressSkinIdMinor = EAknsMinorGenericQgnIndiCam4TbExtension;

                items =
                    {
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupWhiteBalanceVideo;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_wb;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdCaptureSetupColourFilterVideo;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    txt = qtn_lcam_tb_coltone;
                                    }
                                };
                            };
                        },
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdPhotos;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    bmpfile = CAMERAAPP_BITMAP_FILE;
                                    bmpid = EMbmCameraappQgn_indi_cam4_goto_gallery;
                                    bmpmask = EMbmCameraappQgn_indi_cam4_goto_gallery_mask;
                                    txt = qtn_lcam_tb_go_to_photos;
                                    extension = r_cam_ext_qgn_indi_cam4_goto_photos;
                                    }
                                };
                            };
                        }/*,
                    TBAR_CTRL
                        {
                        type = EAknCtButton;
                        id = ECamCmdNewPhoto;
                        control = AVKON_BUTTON
                            {
                            flags = KAknButtonNoFrame;
                            states =
                                {
                                AVKON_BUTTON_STATE
                                    {
                                    bmpfile = CAMERAAPP_BITMAP_FILE;
                                    bmpid = EMbmCameraappQgn_indi_cam4_camera;
                                    bmpmask = EMbmCameraappQgn_indi_cam4_camera_mask;
                                    txt = qtn_lcam_tb_switch_mode;
                                    extension = r_cam_ext_qgn_indi_cam4_camera;
                                    }
                                };
                            };
                        }*/                        
                    };
                };
            }
        };
    }

//----------------------------------------------------
//   
//    r_cam_video_postcapture_toolbar
//    Toolbar and toolbar extension for video post-capture view
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_postcapture_toolbar
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarTransparent | KAknToolbarNoBackground;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPlay;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_play; 
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_play; 
                        helptxt = qtn_lcam_tt_play;
                        extension = r_cam_ext_qgn_indi_cam4_tb_play; 
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_postcapture_toolbar_upload
//    Toolbar and toolbar extension for video post-capture view
//    with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_postcapture_toolbar_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarTransparent | KAknToolbarNoBackground;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPlay;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_play;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_play;
                        helptxt = qtn_lcam_tt_play;
                        extension = r_cam_ext_qgn_indi_cam4_tb_play;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame;
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_postcapture_toolbar_portrait
//    Toolbar and toolbar extension for video post-capture
//    portrait view
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_postcapture_toolbar_portrait
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPlay;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_play; 
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_play; 
                        helptxt = qtn_lcam_tt_play;
                        extension = r_cam_ext_qgn_indi_cam4_tb_play; 
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_postcapture_toolbar_landscape        
//    Toolbar and toolbar extension for video post-capture
//    portrait view
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_postcapture_toolbar_landscape
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPlay;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_play; 
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_play; 
                        helptxt = qtn_lcam_tt_play;
                        extension = r_cam_ext_qgn_indi_cam4_tb_play; 
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                        helptxt = qtn_lcam_tt_send;
                        extension = r_cam_ext_qgn_indi_cam4_send;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_postcapture_toolbar_portrait_upload
//    Toolbar and toolbar extension for video post-capture
//    portrait view with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_postcapture_toolbar_portrait_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPlay;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_play;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_play;
                        helptxt = qtn_lcam_tt_play;
                        extension = r_cam_ext_qgn_indi_cam4_tb_play;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_video_postcapture_toolbar_landscape_upload   
//    Toolbar and toolbar extension for video post-capture
//    portrait view with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_video_postcapture_toolbar_landscape_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarDsaMode | KAknToolbarNoBackground | KAknToolbarTransparent;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdPlay;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_play;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_play;
                        helptxt = qtn_lcam_tt_play;
                        extension = r_cam_ext_qgn_indi_cam4_tb_play;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                flags = KAknButtonNoFrame; 
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }


//----------------------------------------------------
//
//    r_cam_empty_fixed_toolbar
//    Toolbar for views that do not have any content for fixed toolbar
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_empty_fixed_toolbar
    {
    lines = 0;
    flags = KAknToolbarFixed | KAknToolbarWithoutCba;
    items =
        {
        };
    }


//----------------------------------------------------
//   
//    r_cam_burst_postcapture_toolbar
//    Toolbar for sequence post-capture thumbnail view
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_burst_postcapture_toolbar
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarNoBackground;
    items =
        {
                
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdToolbarMarkUnmark;
            control = AVKON_BUTTON
                {
                states =
                {
                        AVKON_BUTTON_STATE
                            {
                            bmpfile = CAMERAAPP_BITMAP_FILE;
                            bmpid = EMbmCameraappQgn_indi_cam4_tb_mark;
                            bmpmask = EMbmCameraappQgn_indi_cam4_tb_mark_mask; 
                            helptxt = qtn_lcam_tt_mark_unmark;
                            extension = r_cam_ext_qgn_indi_cam4_tb_mark; 
                            } 
                };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdSend;
            control = AVKON_BUTTON
                {
                states =
                {
                        AVKON_BUTTON_STATE
                            {
                            bmpfile = CAMERAAPP_BITMAP_FILE;
                            bmpid = EMbmCameraappQgn_indi_cam4_tb_send;
                            bmpmask = EMbmCameraappQgn_indi_cam4_tb_send_mask;
                            helptxt = qtn_lcam_tt_send;
                            extension = r_cam_ext_qgn_indi_cam4_send;
                            }
                };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_cam_burst_postcapture_toolbar_upload
//    Toolbar for sequence post-capture thumbnail view
//    with one-click upload support
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_cam_burst_postcapture_toolbar_upload
    {
    lines = 3;
    flags = KAknToolbarFixed | KAknToolbarNoBackground;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdToolbarMarkUnmark;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_mark;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_mark_mask;
                        helptxt = qtn_lcam_tt_mark_unmark;
                        extension = r_cam_ext_qgn_indi_cam4_tb_mark;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdOneClickUpload;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_oneclick_active;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_oneclick_active_mask;
                        helptxt = ""; // Tooltip is set at run-time
                        extension = r_cam_ext_qgn_indi_cam4_tb_upload;
                        }
                    };
                };
            },
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = ECamCmdDelete;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = CAMERAAPP_BITMAP_FILE;
                        bmpid = EMbmCameraappQgn_indi_cam4_tb_delete;
                        bmpmask = EMbmCameraappQgn_indi_cam4_tb_delete_mask;
                        helptxt = qtn_lcam_tt_delete;
                        extension = r_cam_ext_qgn_indi_cam4_delete;
                        }
                    };
                };
            }
        };
    }


//----------------------------------------------------
//   
//    r_qtn_lcam_tb_show_viewfinder_grid
//    Text for the 'show grid' button in toolbar extension
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tb_show_viewfinder_grid 
    {
    buf = qtn_lcam_tb_show_viewfinder_grid;
    }

//----------------------------------------------------
//   
//    r_qtn_lcam_tb_hide_viewfinder_grid
//    Text for the 'hide grid' button in toolbar extension
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tb_hide_viewfinder_grid 
    {
    buf = qtn_lcam_tb_hide_viewfinder_grid;
    }

//----------------------------------------------------
//   
//    r_qtn_lcam_tb_grid
//    Text for the 'grid' button in toolbar extension
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tb_grid 
    {
    buf = qtn_lcam_tb_grid;
    }

//----------------------------------------------------
//   
//    r_qtn_lcam_tt_videoflash
//    Tooltip for the video button in fixed toolbar
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tt_videoflash 
    {
    buf = qtn_lcam_tt_videoflash; // "Switch video light on"
    }

//----------------------------------------------------
//   
//    r_qtn_lcam_tt_videoflash
//    Tooltip for the video button in fixed toolbar
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tt_flashoff
    {
    buf = qtn_lcam_tt_flashoff; // "Switch video light off"
    }

//----------------------------------------------------
//   
//    qtn_lcam_tt_sendtocall
//    Tooltip for the send button in fixed toolbar
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tt_sendtocall
    {
    buf = qtn_lcam_tt_sendtocall; // "Send to caller"
    }    

//----------------------------------------------------
//   
//    qtn_lcam_tt_send
//    Tooltip for the send button in fixed toolbar
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tt_send
    {
    buf = qtn_lcam_tt_send; // "Send"
    }    

//----------------------------------------------------
//
//    r_cam_one_click_upload_interest
//    AIW interest for one-click upload
//
//----------------------------------------------------
//
RESOURCE AIW_INTEREST r_cam_one_click_upload_interest
    {
    items=
        {
        AIW_CRITERIA_ITEM
            {
            id                  = KAiwCmdUpload;
            serviceCmd          = KAiwCmdUpload;
            serviceClass        = KAiwClassBase;
            contentType         = "image/*";
            defaultProvider 	= 0x2002CC1F; //KShareAppUidVal;
            maxProviders        = 1;
            }
        };
    }
// -----------------------------------------------------------------------------
//
// r_cam_aiw_view_interest
// AIW interest structure for view (Share settings view)
//
// -----------------------------------------------------------------------------
RESOURCE AIW_INTEREST r_cam_aiw_view_interest
    {
    items=
        {
        AIW_CRITERIA_ITEM // SHARE_AIW
            {
            id              = ECamCmdShareSettings;
            serviceCmd      = KAiwCmdView;
            contentType     = "*";
            defaultProvider = 0x2002CC1F; //KShareAppUidVal;	    
            serviceClass = KAiwClassMenu;
            maxProviders    = 1;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_cam_aiw_edit_interest
// AIW interest structure for edit
//
// -----------------------------------------------------------------------------
RESOURCE AIW_INTEREST r_cam_aiw_edit_interest
    {
    items=
        {
        AIW_CRITERIA_ITEM
            {
            id = KAiwCmdEdit;
            serviceCmd = KAiwCmdEdit;
            contentType = "*";
            serviceClass = KAiwClassMenu;
            }
        };
    }
//----------------------------------------------------
//   
//    qtn_lcam_tb_turn_sequence_off
//    Text for sequence mode button in toolbar extension
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tb_turn_sequence_off
    {
    buf = qtn_lcam_tb_turn_sequence_off; // "To single shot"
    }    

//----------------------------------------------------
//   
//    qtn_lcam_tb_turn_sequence_on
//    Tooltip for the send button in fixed toolbar
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tb_turn_sequence_on
    {
    buf = qtn_lcam_tb_turn_sequence_on; // "Turn sequence on"
    }    

//----------------------------------------------------
//   
//    qtn_lcam_tb_sequence
//    Text for sequence mode button in toolbar extension
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_lcam_tb_sequence
    {
    buf = qtn_lcam_tb_sequence; // "Sequence"
    }

//-----------------------------------------------------------------------------
//
//    r_qtn_processing_image
//    Processing image text, displayed on blended background in the bottom of
//    thescreen in pre- and postcapture view.
//
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_processing_image_text
    {
    buf = qtn_lcam_note_processing_image;
    }

//-----------------------------------------------------------------------------
//
//    r_qtn_processing_burst_image_text
//    Processing images text with numbers, displayed on blended background in the bottom of
//    thescreen in pre- and postcapture view.
//
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_processing_burst_image_text
    {
    buf = qtn_lcam_note_processing_images;
    }

//-----------------------------------------------------------------------------
//
//    r_qtn_fldr_cant_delete_file_open
//    Error string that's used when trying to delete file that's already is use.
//    Uses string defined in avkon.loc
//
//-----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_fldr_cant_delete_file_open
    {
    buf = qtn_fldr_cant_delete_file_open;
    }

#include "CamConstantsCamcorder.hrh"
#include "CamConstantsViewMode.hrh"
#include "CamConstantsPortrait.hrh"

// the Settings pages are in separate files for clarity
#include "CamProductSpecificSettings.ra"       // Resources for photo and video settings 
#include "CamSettings.ra"

#include "CamAppWide.ra"
#include "CamAppWideCamcorder.ra"
#include "CamAppWidePortrait.ra"
#include "CamAppWideViewMode.ra"

#include "CamCapture.ra"
#include "CamCaptureCamcorder.ra"
#include "CamCapturePortrait.ra"
#include "CamCaptureViewMode.ra"
#include "CamCaptureCamcorderLeft.ra"

#include "CamStillCapture.ra"
#include "CamStillCaptureCamcorder.ra"
#include "CamStillCapturePortrait.ra"
#include "CamStillCaptureViewMode.ra"
#include "CamStillCaptureCamcorderLeft.ra"

#include "CamVideoCapture.ra"
#include "CamVideoCaptureCamcorder.ra"
#include "CamVideoCapturePortrait.ra"
#include "CamVideoCaptureViewMode.ra"
#include "CamVideoCaptureCamcorderLeft.ra"

#include "CamBurstCapture.ra"

#include "CamCaptureSetup.ra"

#include "CamSceneSetup.ra"
#include "CamSceneSetupCamcorder.ra"
#include "CamSceneSetupPortrait.ra"
#include "CamSceneSetupViewMode.ra"

#include "CamStandby.ra"

#include "CamEmbedded.ra"
#include "CamEmbeddedCamcorder.ra"
#include "CamEmbeddedPortrait.ra"
#include "CamEmbeddedViewMode.ra"

#include "CamModeSelect.ra"

#include "CamActivePalette.ra"

// ===========================================================================
// end of file
