/*
* Copyright (c) 2007 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for the Camera Application*
*/


#include "camportraitnaviconstants.rh"



#define KIndicatorStatusPTSeparatorWidth    2

#define KPhotoResolutionIndicatorPTBRx   234
#define KPhotoResolutionIndicatorPTBRy   196

#define KVideoResolutionIndicatorPTBRx   218
#define KVideoResolutionIndicatorPTBRy   215

#define KIndicatorVideoModePTBRx    234
#define KIndicatorVideoModePTBRy    217

#define KIndicatorAudioMutePTBRx    199
#define KIndicatorAudioMutePTBRy    215

//----------------------------------------------------
//   
//    r_cam_layout_zoom_pane_portrait
//    Location for the Zoom Pane background frame.
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_layout_zoom_pane_portrait
    {
    l = 217;
    t = 21;
    W = 11;
    H = 118;
    }

//----------------------------------------------------
//   
//    r_cam_layout_zoom_pane_shaft_portrait
//    Location for the Zoom Pane shaft bitmap
//
//----------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_layout_zoom_pane_shaft_portrait
    { 
    l = 219;
    t = 23;  
    W = 7; 
    H = 114;
    }


// ---------------------------------------------------
//
//    r_cam_counter_icon_rect_portrait
//    Layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_counter_icon_rect_portrait
  {
  // l = 136; t = 5; W = 9; H = 11;
  r = KMemoryIconRight;
  //t = (KNaviPaneHeight-KMemoryIconHeight)/2;
  b = KNaviBottomClearance;
  W = KMemoryIconWidth;
  H = KMemoryIconHeight;
  }

// ---------------------------------------------------
//
//    r_cam_counter_icon_rect_ah_portrait
//    Arabic/Hebrew layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_counter_icon_rect_ah_portrait
    {
    l = 0; t = 5; W = 9; H = 11;
    }
    
// ---------------------------------------------------
//
//    r_cam_video_precap_memory_location_portrait
//    Layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_precap_memory_location_portrait
  {
  //l = 136; t = 5; W = 9; H = 11;
  r = KMemoryIconRight;
  //t = (KNaviPaneHeight-KMemoryIconHeight)/2;
  b = KNaviBottomClearance;
  W = KMemoryIconWidth;
  H = KMemoryIconHeight;
  }

// ---------------------------------------------------
//
//    r_cam_video_precap_memory_location_ah_portrait
//    Arabic/Hebrew layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_precap_memory_location_ah_portrait
    {
    r = KNaviPaneFontRightBorderPT + 37 + 8; t = 5; W = 9; H = 11;
    }

// ---------------------------------------------------
//
//    r_cam_img_precap_memory_location_portrait
//    Layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_img_precap_memory_location_portrait
  {
  //l = 136; t = 5; W = 9; H = 11;
  r = KMemoryIconRight;
  //t = (KNaviPaneHeight-KMemoryIconHeight)/2;
  b = KNaviBottomClearance;
  W = KMemoryIconWidth;
  H = KMemoryIconHeight;
  }

// ---------------------------------------------------
//
//    r_cam_img_precap_memory_location_ah_portrait
//    Arabic/Hebrew layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_img_precap_memory_location_ah_portrait
    {
    r = KNaviPaneFontRightBorderPT + 34 + 11; t = 5; W = 9; H = 11;
    }

// ---------------------------------------------------
//
//    r_cam_img_post_storage_icon_rect_portrait
//    Layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_img_post_storage_icon_rect_portrait
  {
  //l = 124; t = 5; W = 9; H = 11;
  r = KMemoryIconRight;
  //t = (KNaviPaneHeight-KMemoryIconHeight)/2;
  b = KNaviBottomClearance;
  W = KMemoryIconWidth;
  H = KMemoryIconHeight;
  }
  
// ---------------------------------------------------
//
//    r_cam_img_post_storage_icon_rect_ah_portrait
//    Arabic/Hebrew layout rect for icon in photo navi pane.
//
// ---------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_img_post_storage_icon_rect_ah_portrait
    {
    l = 0; t = 5; W = 9; H = 11;
    }


//----------------------------------------------------
//   
//    r_cam_sidepane
//    Camera Sidepane
//
//----------------------------------------------------
//
RESOURCE CAMERA_SIDEPANE r_cam_sidepane_portrait
    {
    indicators =
        {
	CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorCaptureMode;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorCaptureTypeCCTLx; 
                      tl_y = KIndicatorCaptureTypeCCTLy; 
                      br_x = KIndicatorCaptureTypeCCTLx + KIndicatorCaptureTypeIconWidth; 
                      br_y = KIndicatorCaptureTypeCCTLy + KIndicatorCaptureTypeIconHeight; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_cam4_camera; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_cam4_camera_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_cam4_video; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_cam4_video_mask; }
                };
	}/*
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorScene;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorUnusedx - KIndicatorSceneIconWidth; 
                      tl_y = KIndicatorUnusedy - KIndicatorSceneIconHeight; 
                      br_x = KIndicatorUnusedx; 
                      br_y = KIndicatorUnusedy; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_vid_norm; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_vid_norm_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_vid_night; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_vid_night_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_auto;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_auto_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_user;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_user_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_mac;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_mac_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_port;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_port_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_land;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_land_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_night;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_night_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_sport;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_sport_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_sport;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_sport_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_sport;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_sport_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_nightland;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_nightland_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_nightport;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_nightport_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_candle;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_candle_mask;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_document;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_pho_document_mask;}
                };
            },
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorFlash;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorUnusedx - KIndicatorFlashIconWidth; 
                      tl_y = KIndicatorUnusedy; 
                      br_x = KIndicatorUnusedx; 
                      br_y = KIndicatorUnusedy + KIndicatorFlashIconHeight; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashauto; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashauto_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashoff; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashoff_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashredeye; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashredeye_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashforce;},
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_flashforce_mask;}
                };
            },
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorSelfTimer;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorUnusedx - KIndicatorSelfTimerIconWidth; 
                      tl_y = KIndicatorUnusedy; 
                      br_x = KIndicatorUnusedx; 
                      br_y = KIndicatorUnusedy + KIndicatorSelfTimerIconHeight; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_selftimer; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_lcam_selftimer_mask; }
                };
            },
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorBurstMode;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorUnusedx - KIndicatorBurstModeIconWidth; 
                      tl_y = KIndicatorUnusedy; 
                      br_x = KIndicatorUnusedx; 
                      br_y = KIndicatorUnusedy + KIndicatorBurstModeIconHeight; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_menu_seq_cap; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_menu_seq_cap_mask; }
                };
            },
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorVideoStabiliser;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorUnusedx - KIndicatorStabilisationIconWidth; 
                      tl_y = KIndicatorUnusedy; 
                      br_x = KIndicatorUnusedx; 
                      br_y = KIndicatorUnusedy + KIndicatorStabilisationIconHeight; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_vid4_stabilize_on; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_vid4_stabilize_on_mask; }
                };
            },
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorAudioMute;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = KIndicatorAudioMutePTBRx - KIndicatorAudioMuteIconPTWidth; 
                      tl_y = KIndicatorAudioMutePTBRy - KIndicatorAudioMuteIconPTHeight; 
                      br_x = KIndicatorAudioMutePTBRx; 
                      br_y = KIndicatorAudioMutePTBRy; }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_vid4_audio_mute; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_indi_vid4_audio_mute_mask; }
                };
            }*/
        };
    }

//----------------------------------------------------
//   
//    r_cam_video_filetype_pane_portrait
//    Video file type indicator - uses side pane resource
//    Allows specifying position and size for all 
//    video file type indicators
//
//----------------------------------------------------
//
RESOURCE CAMERA_SIDEPANE r_cam_video_filetype_pane_portrait
    {
    indicators = 
        {
        CAMERA_INDICATOR
            {
            indicator_id = ECamIndicatorVideoFileType;
            coords =
                {
                CAMERA_INDICATOR_COORDS
                    { tl_x = 0;
                      tl_y = 0;
                      br_x = 0;
                      br_y = 0;
                    }
                };
            bitmaps =
                {
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_prop_cam4_codec_mp4; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_prop_cam4_codec_mp4_mask; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_prop_cam4_codec_3gp; },
                CAMERA_BITMAP { bitmap_id = EMbmCameraappQgn_prop_cam4_codec_3gp_mask; }
                };
            }
        };
    }

//----------------------------------------------------
//    r_cam_sidepane_rect_cam1
//    Layout rect for sidepane/zoompane in primary camera
//----------------------------------------------------
//   
RESOURCE AVKON_LAYOUT_RECT r_cam_sidepane_rect_cam1_portrait
    {
    l = 200; t = 0; W = 0; H = 0;
    }

//----------------------------------------------------
//    r_cam_sidepane_rect_cam2
//    Layout rect for sidepane/zoompane in secondary camera
//----------------------------------------------------
//   
RESOURCE AVKON_LAYOUT_RECT r_cam_sidepane_rect_cam2_portrait
    {
    l = 200; t = 0; W = 0; H = 0;
    }

//-----------------------------------------------------------------------------
//
//    r_cam_viewfinder_rect_still
//    The size and position of the viewfinder in still capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_viewfinder_rect_still_portrait
    { l = 1; t = 0; W = 240; H = 180; }
  
//-----------------------------------------------------------------------------
//
//    r_cam_viewfinder_rect_cif
//    The size and position of the viewfinder in large video resolution
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_viewfinder_rect_cif_portrait
    { l = 12; t = 11; W = 238; H = 180; }

//-----------------------------------------------------------------------------
//
//    r_cam_viewfinder_rect_qcif
//    The size and position of the viewfinder in medium video resolution
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_viewfinder_rect_qcif_portrait
    { l = 32; t = 32; W = 176; H = 144; }


//-----------------------------------------------------------------------------
//
//    r_cam_viewfinder_rect_sqcif
//    The size and position of the viewfinder in small video resolution
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_viewfinder_rect_sqcif_portrait
    { l = 56 ; t = 46; W = 128; H = 96; }
    
//-----------------------------------------------------------------------------
//
//    r_cam_viewfinder_rect_secondary
//    The size and position of the viewfinder in large video resolution
//    for secondary camera
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_viewfinder_rect_secondary_portrait
    { l = 1; t = 0; W = 238; H = 180; }


//----------------------------------------------------
//   
//    r_cam_zoom_pane_width
//    Width of the zoom pane (not just the zoom shaft)
//
//----------------------------------------------------
//
RESOURCE INT16 r_cam_zoom_pane_width_portrait
    {
    value = 19;
    }

//-----------------------------------------------------------------------------
//
//    r_cam_img_precap_quality_icons_portrait
//    The size and position of the image resolution icon
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_img_precap_quality_icons_portrait
    { 
    //l = 220; t = 180; W = 14; H = 16; 
    l = 206; t = 185; W = 29; H = 12; 
    }
    
//-----------------------------------------------------------------------------
//
//    r_cam_video_precap_quality_icons_portrait
//    The size and position of the video resolution icon
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_precap_quality_icons_portrait
    { 
    //l = 205; t = 204; W = 13; H = 11; 
    l = 206; t = 193; W = 13; H = 11; 
    }

//-----------------------------------------------------------------------------
//
//    r_cam_video_cap_limit_quality_icons_portrait
//    The size and position of the video resolution icon during capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_cap_limit_quality_icons_portrait
    { l = 206; t = 193; W = 13; H = 11; }

//-----------------------------------------------------------------------------
//
//    r_cam_video_cap_unlimit_quality_icons_portrait
//    The size and position of the video resolution icon during capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_cap_unlimit_quality_icons_portrait
    { l = 206; t = 193; W = 13; H = 11; }

//-----------------------------------------------------------------------------
//
//    r_cam_video_cap_limit_file_type_portrait
//    The size and position of the video filetype icon during capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_cap_limit_file_type_portrait
    { l = 224; t = 193; W = 10; H = 11; }

//-----------------------------------------------------------------------------
//
//    r_cam_video_cap_unlimit_file_type_portrait
//    The size and position of the video filetype icon during capture
//
//-----------------------------------------------------------------------------
//
RESOURCE AVKON_LAYOUT_RECT r_cam_video_cap_unlimit_file_type_portrait
    { l = 224; t = 193; W = 10; H = 11; }
