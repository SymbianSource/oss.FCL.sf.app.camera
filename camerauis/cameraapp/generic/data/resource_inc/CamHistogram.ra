/*
* Copyright (c) 2007 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for the Camera Application*
*/


// Constants
#define KCamHistogramLeftX   10
#define KCamHistogramTopY    50
#define KCamHistogramWidth   100

#define KCamHistogramGraphHeight        64
#define KCamHistogramStepperHeight      20

#define KCamHistogramStepperNaviWidth   20
#define KCamHistogramStepperValueWidth  30
#define KCamHistogramStepperTextBottom  16

#define KCamHistogramTextColor 0



// Text for histogram setting title
RESOURCE TBUF r_cam_histogram_setting_title
  {
  buf = qtn_lcam_histogram_ev_exp;
  }


//
// Layout rectangle for histogram graph
//
RESOURCE AVKON_LAYOUT_RECT r_cam_histogram_graph_box_layout
  {
  t = KCamHistogramTopY;     
  l = KCamHistogramLeftX;    
  H = KCamHistogramGraphHeight;
  W = KCamHistogramWidth;  
  }

//
// Layout rectangle for histogram stepper
//
RESOURCE AVKON_LAYOUT_RECT r_cam_histogram_stepper_box_layout
  {
  t = KCamHistogramTopY + KCamHistogramGraphHeight + 5; // TEST "5"
  l = KCamHistogramLeftX;
  H = KCamHistogramStepperHeight;
  W = KCamHistogramWidth;  
  }

//
// Layout for histogram stepper setting title
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_histogram_setting_title_text_layout
  {
  font = EAknLogicalFontSecondaryFont; 
  C    = KCamHistogramTextColor;
  l    = 0; 
  r    = 2*KCamHistogramStepperNaviWidth + KCamHistogramStepperValueWidth; 
  B    = KCamHistogramStepperTextBottom; 
  J    = ELayoutAlignLeft;
  }

//
// Layout for histogram stepper setting value
//
RESOURCE AVKON_LAYOUT_TEXT r_cam_histogram_setting_value_text_layout
  {
  font = EAknLogicalFontSecondaryFont; 
  C    = KCamHistogramTextColor;
  l    = KCamHistogramWidth - (KCamHistogramStepperNaviWidth + KCamHistogramStepperValueWidth);
  r    = KCamHistogramStepperNaviWidth;
  B    = KCamHistogramStepperTextBottom; 
  W    = KCamHistogramStepperValueWidth;
  J    = ELayoutAlignCenter;
  }

//
// Layout for histogram stepper left navi indicator
//
RESOURCE AVKON_LAYOUT_RECT r_cam_histogram_left_navi_box_layout
  { 
  t = 0;
  l = KCamHistogramWidth - (2*KCamHistogramStepperNaviWidth + KCamHistogramStepperValueWidth);
  W = KCamHistogramStepperNaviWidth;
  H = KCamHistogramStepperHeight;
  }

//
// Layout for histogram stepper right navi indicator
//
RESOURCE AVKON_LAYOUT_RECT r_cam_histogram_right_navi_box_layout
  { 
  t = 0;
  l = KCamHistogramWidth - KCamHistogramStepperNaviWidth;
  W = KCamHistogramStepperNaviWidth;
  H = KCamHistogramStepperHeight;
  }

